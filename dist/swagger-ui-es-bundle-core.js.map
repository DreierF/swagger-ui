{"version":3,"file":"swagger-ui-es-bundle-core.js","sources":["../src/core/plugins/err/actions.js","../src/core/window.js","../src/core/plugins/samples/fn.js","../src/helpers/get-parameter-schema.js","../src/core/utils.js","../src/core/system.js","../src/core/plugins/err/error-transformers/transformers/not-of-type.js","../src/core/plugins/err/error-transformers/transformers/parameter-oneof.js","../src/core/plugins/err/error-transformers/hook.js","../src/core/plugins/err/reducers.js","../src/core/plugins/err/selectors.js","../src/core/plugins/err/index.js","../src/core/plugins/layout/actions.js","../src/core/plugins/layout/reducers.js","../src/core/plugins/layout/selectors.js","../src/core/plugins/layout/index.js","../src/core/plugins/spec/selectors.js","../src/core/plugins/spec/actions.js","../src/core/plugins/spec/reducers.js","../src/core/plugins/spec/wrap-actions.js","../src/core/plugins/spec/index.js","../src/core/plugins/view/root-injects.jsx","../src/core/plugins/view/index.js","../src/core/plugins/samples/index.js","../src/core/plugins/logs/index.js","../src/core/plugins/swagger-js/configs-wrap-actions.js","../src/core/plugins/swagger-js/index.js","../src/core/plugins/auth/actions.js","../src/core/plugins/auth/reducers.js","../src/core/plugins/auth/selectors.js","../src/core/plugins/auth/spec-wrap-actions.js","../src/core/plugins/auth/index.js","../src/core/plugins/util/index.js","../src/core/plugins/download-url.js","../src/core/plugins/configs/helpers.js","../src/core/plugins/configs/actions.js","../src/core/plugins/configs/spec-actions.js","../src/core/plugins/configs/selectors.js","../src/core/plugins/configs/reducers.js","../src/core/plugins/configs/index.js","../src/core/plugins/deep-linking/helpers.js","../src/core/plugins/deep-linking/layout.js","../src/core/plugins/deep-linking/operation-wrapper.jsx","../src/core/plugins/deep-linking/operation-tag-wrapper.jsx","../src/core/plugins/deep-linking/index.js","../src/core/plugins/filter/opsFilter.js","../src/core/plugins/filter/index.js","../src/core/plugins/on-complete/index.js","../src/core/containers/OperationContainer.jsx","../src/core/components/app.jsx","../src/core/components/auth/authorization-popup.jsx","../src/core/components/auth/authorize-btn.jsx","../src/core/containers/authorize-btn.jsx","../src/core/components/auth/authorize-operation-btn.jsx","../src/core/components/auth/auths.jsx","../src/core/components/auth/auth-item.jsx","../src/core/components/auth/error.jsx","../src/core/components/auth/api-key-auth.jsx","../src/core/components/auth/basic-auth.jsx","../src/core/components/example.jsx","../src/core/components/examples-select.jsx","../src/core/components/examples-select-value-retainer.jsx","../src/core/oauth2-authorize.js","../src/core/components/auth/oauth2.jsx","../src/core/components/clear.jsx","../src/core/components/live-response.jsx","../src/core/components/online-validator-badge.jsx","../src/core/components/operations.jsx","../src/core/utils/url.js","../src/core/components/operation-tag.jsx","../src/core/components/operation.jsx","../src/core/components/operation-summary.jsx","../src/core/components/operation-summary-method.jsx","../src/core/components/operation-summary-path.jsx","../src/core/components/operation-extensions.jsx","../src/core/components/operation-extension-row.jsx","../src/core/syntax-highlighting.js","../src/core/components/highlight-code.jsx","../src/core/components/responses.jsx","../src/core/components/response.jsx","../src/core/components/response-body.jsx","../src/core/components/parameters/parameters.jsx","../src/core/components/parameter-extension.jsx","../src/core/components/parameter-include-empty.jsx","../src/core/components/parameter-row.jsx","../src/core/components/execute.jsx","../src/core/components/headers.jsx","../src/core/components/errors.jsx","../src/core/components/content-type.jsx","../src/core/components/layout-utils.jsx","../src/core/components/overview.jsx","../src/core/components/initialized-input.jsx","../src/core/components/info.jsx","../src/core/containers/info.jsx","../src/core/components/jump-to-path.jsx","../src/core/components/footer.jsx","../src/core/containers/filter.jsx","../src/core/components/param-body.jsx","../src/core/curlify.js","../src/core/components/curl.jsx","../src/core/components/schemes.jsx","../src/core/containers/schemes.jsx","../src/core/components/model-collapse.jsx","../src/core/components/model-example.jsx","../src/core/components/model-wrapper.jsx","../src/core/components/model.jsx","../src/core/components/models.jsx","../src/core/components/enum-model.jsx","../src/core/components/object-model.jsx","../src/core/components/array-model.jsx","../src/core/components/primitive-model.jsx","../src/core/components/property.jsx","../src/core/components/try-it-out-button.jsx","../src/core/components/version-pragma-filter.jsx","../src/core/components/version-stamp.jsx","../src/core/components/deep-link.jsx","../src/core/components/svg-assets.jsx","../src/core/components/providers/markdown.jsx","../src/core/components/layouts/base.jsx","../src/core/json-schema-components.jsx","../src/core/presets/base.js","../src/core/plugins/oas3/helpers.jsx","../src/core/plugins/oas3/spec-extensions/wrap-selectors.js","../src/core/plugins/oas3/auth-extensions/wrap-selectors.js","../src/core/plugins/oas3/spec-extensions/selectors.js","../src/core/plugins/oas3/components/callbacks.jsx","../src/core/plugins/oas3/components/request-body.jsx","../src/core/plugins/oas3/components/operation-link.jsx","../src/core/plugins/oas3/components/servers.jsx","../src/core/plugins/oas3/components/servers-container.jsx","../src/core/plugins/oas3/components/request-body-editor.jsx","../src/core/plugins/oas3/components/http-auth.jsx","../src/core/plugins/oas3/components/operation-servers.jsx","../src/core/plugins/oas3/components/index.js","../src/core/plugins/oas3/wrap-components/markdown.jsx","../src/core/plugins/oas3/wrap-components/auth-item.jsx","../src/core/plugins/oas3/wrap-components/version-stamp.jsx","../src/core/plugins/oas3/wrap-components/online-validator-badge.js","../src/core/plugins/oas3/wrap-components/model.jsx","../src/core/plugins/oas3/wrap-components/json-schema-string.jsx","../src/core/plugins/oas3/wrap-components/index.js","../src/core/plugins/oas3/actions.js","../src/core/plugins/oas3/selectors.js","../src/core/plugins/oas3/reducers.js","../src/core/plugins/oas3/index.js","../src/core/presets/apis.js","../src/core/index.js"],"sourcesContent":["import serializeError from \"serialize-error\"\n\nexport const NEW_THROWN_ERR = \"err_new_thrown_err\"\nexport const NEW_THROWN_ERR_BATCH = \"err_new_thrown_err_batch\"\nexport const NEW_SPEC_ERR = \"err_new_spec_err\"\nexport const NEW_SPEC_ERR_BATCH = \"err_new_spec_err_batch\"\nexport const NEW_AUTH_ERR = \"err_new_auth_err\"\nexport const CLEAR = \"err_clear\"\nexport const CLEAR_BY = \"err_clear_by\"\n\nexport function newThrownErr(err) {\n  return {\n      type: NEW_THROWN_ERR,\n      payload: serializeError(err)\n  }\n}\n\nexport function newThrownErrBatch(errors) {\n  return {\n      type: NEW_THROWN_ERR_BATCH,\n      payload: errors\n  }\n}\n\nexport function newSpecErr(err) {\n  return {\n      type: NEW_SPEC_ERR,\n      payload: err\n  }\n}\n\nexport function newSpecErrBatch(errArray) {\n  return {\n      type: NEW_SPEC_ERR_BATCH,\n      payload: errArray\n  }\n}\n\nexport function newAuthErr(err) {\n  return {\n    type: NEW_AUTH_ERR,\n    payload: err\n  }\n}\n\nexport function clear(filter = {}) {\n  // filter looks like: {type: 'spec'}, {source: 'parser'}\n  return {\n    type: CLEAR,\n    payload: filter\n  }\n}\n\nexport function clearBy(filter = () => true) {\n  // filter is a function\n  return {\n    type: CLEAR_BY,\n    payload: filter\n  }\n}\n","function makeWindow() {\n  var win = {\n    location: {},\n    history: {},\n    open: () => {},\n    close: () => {},\n    File: function() {}\n  }\n\n  if(typeof window === \"undefined\") {\n    return win\n  }\n\n  try {\n    win = window\n    var props = [\"File\", \"Blob\", \"FormData\"]\n    for (var prop of props) {\n      if (prop in window) {\n        win[prop] = window[prop]\n      }\n    }\n  } catch( e ) {\n    console.error(e)\n  }\n\n  return win\n}\n\nexport default makeWindow()\n","import { objectify, isFunc, normalizeArray, deeplyStripKey } from \"core/utils\"\nimport XML from \"@kyleshockey/xml\"\nimport memoizee from \"memoizee\"\nimport deepAssign from \"@kyleshockey/object-assign-deep\"\n\nconst primitives = {\n  \"string\": () => \"string\",\n  \"string_email\": () => \"user@example.com\",\n  \"string_date-time\": () => new Date().toISOString(),\n  \"string_date\": () => new Date().toISOString().substring(0, 10),\n  \"string_uuid\": () => \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"string_hostname\": () => \"example.com\",\n  \"string_ipv4\": () => \"198.51.100.42\",\n  \"string_ipv6\": () => \"2001:0db8:5b96:0000:0000:426f:8e17:642a\",\n  \"number\": () => 0,\n  \"number_float\": () => 0.0,\n  \"integer\": () => 0,\n  \"boolean\": (schema) => typeof schema.default === \"boolean\" ? schema.default : true\n}\n\nconst primitive = (schema) => {\n  schema = objectify(schema)\n  let { type, format } = schema\n\n  let fn = primitives[`${type}_${format}`] || primitives[type]\n\n  if(isFunc(fn))\n    return fn(schema)\n\n  return \"Unknown Type: \" + schema.type\n}\n\n\nexport const sampleFromSchema = (schema, config={}) => {\n  let { type, example, properties, additionalProperties, items } = objectify(schema)\n  let { includeReadOnly, includeWriteOnly } = config\n\n\n  if(example !== undefined) {\n    return deeplyStripKey(example, \"$$ref\", (val) => {\n      // do a couple of quick sanity tests to ensure the value\n      // looks like a $$ref that swagger-client generates.\n      return typeof val === \"string\" && val.indexOf(\"#\") > -1\n    })\n  }\n\n  if(!type) {\n    if(properties) {\n      type = \"object\"\n    } else if(items) {\n      type = \"array\"\n    } else {\n      return\n    }\n  }\n\n  if(type === \"object\") {\n    let props = objectify(properties)\n    let obj = {}\n    for (var name in props) {\n      if ( props[name] && props[name].deprecated ) {\n        continue\n      }\n      if ( props[name] && props[name].readOnly && !includeReadOnly ) {\n        continue\n      }\n      if ( props[name] && props[name].writeOnly && !includeWriteOnly ) {\n        continue\n      }\n      obj[name] = sampleFromSchema(props[name], config)\n    }\n\n    if ( additionalProperties === true ) {\n      obj.additionalProp1 = {}\n    } else if ( additionalProperties ) {\n      let additionalProps = objectify(additionalProperties)\n      let additionalPropVal = sampleFromSchema(additionalProps, config)\n\n      for (let i = 1; i < 4; i++) {\n        obj[\"additionalProp\" + i] = additionalPropVal\n      }\n    }\n    return obj\n  }\n\n  if(type === \"array\") {\n    if(Array.isArray(items.anyOf)) {\n      return items.anyOf.map(i => sampleFromSchema(i, config))\n    }\n\n    if(Array.isArray(items.oneOf)) {\n      return items.oneOf.map(i => sampleFromSchema(i, config))\n    }\n\n    return [ sampleFromSchema(items, config) ]\n  }\n\n  if(schema[\"enum\"]) {\n    if(schema[\"default\"])\n      return schema[\"default\"]\n    return normalizeArray(schema[\"enum\"])[0]\n  }\n\n  if (type === \"file\") {\n    return\n  }\n\n  return primitive(schema)\n}\n\nexport const inferSchema = (thing) => {\n  if(thing.schema)\n    thing = thing.schema\n\n  if(thing.properties) {\n    thing.type = \"object\"\n  }\n\n  return thing // Hopefully this will have something schema like in it... `type` for example\n}\n\n\nexport const sampleXmlFromSchema = (schema, config={}) => {\n  let objectifySchema = deepAssign({}, objectify(schema))\n  let { type, properties, additionalProperties, items, example } = objectifySchema\n  let { includeReadOnly, includeWriteOnly } = config\n  let defaultValue = objectifySchema.default\n  let res = {}\n  let _attr = {}\n  let { xml } = schema\n  let { name, prefix, namespace } = xml\n  let enumValue = objectifySchema.enum\n  let displayName, value\n\n  if(!type) {\n    if(properties || additionalProperties) {\n      type = \"object\"\n    } else if(items) {\n      type = \"array\"\n    } else {\n      return\n    }\n  }\n\n  name = name || \"notagname\"\n  // add prefix to name if exists\n  displayName = (prefix ? prefix + \":\" : \"\") + name\n  if ( namespace ) {\n    //add prefix to namespace if exists\n    let namespacePrefix = prefix ? ( \"xmlns:\" + prefix ) : \"xmlns\"\n    _attr[namespacePrefix] = namespace\n  }\n\n  if (type === \"array\") {\n    if (items) {\n      items.xml = items.xml || xml || {}\n      items.xml.name = items.xml.name || xml.name\n\n      if (xml.wrapped) {\n        res[displayName] = []\n        if (Array.isArray(example)) {\n          example.forEach((v)=>{\n            items.example = v\n            res[displayName].push(sampleXmlFromSchema(items, config))\n          })\n        } else if (Array.isArray(defaultValue)) {\n          defaultValue.forEach((v)=>{\n            items.default = v\n            res[displayName].push(sampleXmlFromSchema(items, config))\n          })\n        } else {\n          res[displayName] = [sampleXmlFromSchema(items, config)]\n        }\n\n        if (_attr) {\n          res[displayName].push({_attr: _attr})\n        }\n        return res\n      }\n\n      let _res = []\n\n      if (Array.isArray(example)) {\n        example.forEach((v)=>{\n          items.example = v\n          _res.push(sampleXmlFromSchema(items, config))\n        })\n        return _res\n      } else if (Array.isArray(defaultValue)) {\n        defaultValue.forEach((v)=>{\n          items.default = v\n          _res.push(sampleXmlFromSchema(items, config))\n        })\n        return _res\n      }\n\n      return sampleXmlFromSchema(items, config)\n    }\n  }\n\n  if (type === \"object\") {\n    let props = objectify(properties)\n    res[displayName] = []\n    example = example || {}\n\n    for (let propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue\n      }\n      if ( props[propName].readOnly && !includeReadOnly ) {\n        continue\n      }\n      if ( props[propName].writeOnly && !includeWriteOnly ) {\n        continue\n      }\n\n      props[propName].xml = props[propName].xml || {}\n\n      if (props[propName].xml.attribute) {\n        let enumAttrVal = Array.isArray(props[propName].enum) && props[propName].enum[0]\n        let attrExample = props[propName].example\n        let attrDefault = props[propName].default\n        _attr[props[propName].xml.name || propName] = attrExample!== undefined && attrExample\n          || example[propName] !== undefined && example[propName] || attrDefault !== undefined && attrDefault\n          || enumAttrVal || primitive(props[propName])\n      } else {\n        props[propName].xml.name = props[propName].xml.name || propName\n        if(props[propName].example === undefined && example[propName] !== undefined) {\n          props[propName].example = example[propName]\n        }\n        let t = sampleXmlFromSchema(props[propName])\n        if (Array.isArray(t)) {\n          res[displayName] = res[displayName].concat(t)\n        } else {\n          res[displayName].push(t)\n        }\n\n      }\n    }\n\n    if (additionalProperties === true) {\n      res[displayName].push({additionalProp: \"Anything can be here\"})\n    } else if (additionalProperties) {\n      res[displayName].push({additionalProp: primitive(additionalProperties)})\n    }\n\n    if (_attr) {\n      res[displayName].push({_attr: _attr})\n    }\n    return res\n  }\n\n  if (example !== undefined) {\n    value = example\n  } else if (defaultValue !== undefined) {\n    //display example if exists\n    value = defaultValue\n  } else if (Array.isArray(enumValue)) {\n    //display enum first value\n    value = enumValue[0]\n  } else {\n    //set default value\n    value = primitive(schema)\n  }\n\n  res[displayName] = _attr ? [{_attr: _attr}, value] : value\n\n  return res\n}\n\nexport function createXMLExample(schema, config) {\n  let json = sampleXmlFromSchema(schema, config)\n  if (!json) { return }\n\n  return XML(json, { declaration: true, indent: \"\\t\" })\n}\n\nexport const memoizedCreateXMLExample = memoizee(createXMLExample)\n\nexport const memoizedSampleFromSchema = memoizee(sampleFromSchema)\n","/**\n * @prettier\n */\n\nimport Im from \"immutable\"\n\nconst swagger2SchemaKeys = Im.Set.of(\n  \"type\",\n  \"format\",\n  \"items\",\n  \"default\",\n  \"maximum\",\n  \"exclusiveMaximum\",\n  \"minimum\",\n  \"exclusiveMinimum\",\n  \"maxLength\",\n  \"minLength\",\n  \"pattern\",\n  \"maxItems\",\n  \"minItems\",\n  \"uniqueItems\",\n  \"enum\",\n  \"multipleOf\"\n)\n\n/**\n * @typedef {Object} ParameterSchemaDescriptor\n * @property {Immutable.Map} schema - the parameter schema\n * @property {string|null} parameterContentMediaType - the effective media type, for `content`-based OpenAPI 3.0 Parameters, or `null` otherwise\n */\n\n/**\n * Get the effective schema value for a parameter, or an empty Immutable.Map if\n * no suitable schema can be found.\n *\n * Supports OpenAPI 3.0 `Parameter.content` priority -- since a Parameter Object\n * cannot have both `schema` and `content`, this function ignores `schema` when\n * `content` is present.\n *\n * @param {Immutable.Map} parameter The parameter to identify a schema for\n * @param {object} config\n * @param {boolean} config.isOAS3 Whether the parameter is from an OpenAPI 2.0\n * or OpenAPI 3.0 definition\n * @return {ParameterSchemaDescriptor} Information about the parameter schema\n */\nexport default function getParameterSchema(parameter, { isOAS3 } = {}) {\n  // Return empty Map if `parameter` isn't a Map\n  if (!Im.Map.isMap(parameter)) {\n    return {\n      schema: Im.Map(),\n      parameterContentMediaType: null,\n    }\n  }\n\n  if (!isOAS3) {\n    // Swagger 2.0\n    if (parameter.get(\"in\") === \"body\") {\n      return {\n        schema: parameter.get(\"schema\", Im.Map()),\n        parameterContentMediaType: null,\n      }\n    } else {\n      return {\n        schema: parameter.filter((v, k) => swagger2SchemaKeys.includes(k)),\n        parameterContentMediaType: null,\n      }\n    }\n  }\n\n  // If we've reached here, the parameter is OpenAPI 3.0\n\n  if (parameter.get(\"content\")) {\n    const parameterContentMediaTypes = parameter\n      .get(\"content\", Im.Map({}))\n      .keySeq()\n\n    const parameterContentMediaType = parameterContentMediaTypes.first()\n\n    return {\n      schema: parameter.getIn(\n        [\"content\", parameterContentMediaType, \"schema\"],\n        Im.Map()\n      ),\n      parameterContentMediaType,\n    }\n  }\n\n  return {\n    schema: parameter.get(\"schema\", Im.Map()),\n    parameterContentMediaType: null,\n  }\n}\n","/* \n  ATTENTION! This file (but not the functions within) is deprecated.\n\n  You should probably add a new file to `./helpers/` instead of adding a new\n  function here.\n\n  One-function-per-file is a better pattern than what we have here.\n\n  If you're refactoring something in here, feel free to break it out to a file\n  in `./helpers` if you have the time.\n*/\n\nimport Im from \"immutable\"\nimport { sanitizeUrl as braintreeSanitizeUrl } from \"@braintree/sanitize-url\"\nimport camelCase from \"lodash/camelCase\"\nimport upperFirst from \"lodash/upperFirst\"\nimport _memoize from \"lodash/memoize\"\nimport find from \"lodash/find\"\nimport some from \"lodash/some\"\nimport eq from \"lodash/eq\"\nimport isFunction from \"lodash/isFunction\"\nimport { memoizedSampleFromSchema, memoizedCreateXMLExample } from \"core/plugins/samples/fn\"\nimport win from \"./window\"\nimport cssEscape from \"css.escape\"\nimport getParameterSchema from \"../helpers/get-parameter-schema\"\nimport randomBytes from \"randombytes\"\nimport shaJs from \"sha.js\"\n\n\nconst DEFAULT_RESPONSE_KEY = \"default\"\n\nexport const isImmutable = (maybe) => Im.Iterable.isIterable(maybe)\n\nexport function isJSONObject (str) {\n  try {\n    var o = JSON.parse(str)\n\n    // Handle non-exception-throwing cases:\n    // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n    // but... JSON.parse(null) returns null, and typeof null === \"object\",\n    // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n    if (o && typeof o === \"object\") {\n      return o\n    }\n  }\n  catch (e) {\n    // do nothing\n  }\n\n  return false\n}\n\nexport function objectify (thing) {\n  if(!isObject(thing))\n    return {}\n  if(isImmutable(thing))\n    return thing.toJS()\n  return thing\n}\n\nexport function arrayify (thing) {\n  if(!thing)\n    return []\n\n  if(thing.toArray)\n    return thing.toArray()\n\n  return normalizeArray(thing)\n}\n\nexport function fromJSOrdered(js) {\n  if (isImmutable(js)) {\n    return js // Can't do much here\n  }\n  if (js instanceof win.File) {\n    return js\n  }\n  if (!isObject(js)) {\n    return js\n  }\n  if (Array.isArray(js)) {\n    return Im.Seq(js).map(fromJSOrdered).toList()\n  }\n  if (isFunction(js.entries)) {\n    // handle multipart/form-data\n    const objWithHashedKeys = createObjWithHashedKeys(js)\n    return Im.OrderedMap(objWithHashedKeys).map(fromJSOrdered)\n  }\n  return Im.OrderedMap(js).map(fromJSOrdered)\n}\n\n/**\n * Convert a FormData object into plain object\n * Append a hashIdx and counter to the key name, if multiple exists\n * if single, key name = <original>\n * if multiple, key name = <original><hashIdx><count>\n * @example <caption>single entry for vegetable</caption>\n * fdObj.entries.vegtables: \"carrot\"\n * // returns newObj.vegetables : \"carrot\"\n * @example <caption>multiple entries for fruits[]</caption>\n * fdObj.entries.fruits[]: \"apple\"\n * // returns newObj.fruits[]_**[]1 : \"apple\"\n * fdObj.entries.fruits[]: \"banana\"\n * // returns newObj.fruits[]_**[]2 : \"banana\"\n * fdObj.entries.fruits[]: \"grape\"\n * // returns newObj.fruits[]_**[]3 : \"grape\"\n * @param {FormData} fdObj - a FormData object\n * @return {Object} - a plain object\n */\nexport function createObjWithHashedKeys (fdObj) {\n  if (!isFunction(fdObj.entries)) {\n    return fdObj // not a FormData object with iterable\n  }\n  const newObj = {}\n  const hashIdx = \"_**[]\" // our internal identifier\n  const trackKeys = {}\n  for (let pair of fdObj.entries()) {\n    if (!newObj[pair[0]] && !(trackKeys[pair[0]] && trackKeys[pair[0]].containsMultiple)) {\n      newObj[pair[0]] = pair[1] // first key name: no hash required\n    } else {\n      if (!trackKeys[pair[0]]) {\n        // initiate tracking key for multiple\n        trackKeys[pair[0]] = {\n          containsMultiple: true,\n          length: 1\n        }\n        // \"reassign\" first pair to matching hashed format for multiple\n        let hashedKeyFirst = `${pair[0]}${hashIdx}${trackKeys[pair[0]].length}`\n        newObj[hashedKeyFirst] = newObj[pair[0]]\n        // remove non-hashed key of multiple\n        delete newObj[pair[0]] // first\n      }\n      trackKeys[pair[0]].length += 1\n      let hashedKeyCurrent = `${pair[0]}${hashIdx}${trackKeys[pair[0]].length}`\n      newObj[hashedKeyCurrent] = pair[1]\n    } \n  }\n  return newObj\n}\n\nexport function bindToState(obj, state) {\n\tvar newObj = {}\n\tObject.keys(obj)\n  .filter(key => typeof obj[key] === \"function\")\n  .forEach(key => newObj[key] = obj[key].bind(null, state))\n\treturn newObj\n}\n\nexport function normalizeArray(arr) {\n  if(Array.isArray(arr))\n    return arr\n  return [arr]\n}\n\nexport function isFn(fn) {\n  return typeof fn === \"function\"\n}\n\nexport function isObject(obj) {\n  return !!obj && typeof obj === \"object\"\n}\n\nexport function isFunc(thing) {\n  return typeof(thing) === \"function\"\n}\n\nexport function isArray(thing) {\n  return Array.isArray(thing)\n}\n\n// I've changed memoize libs more than once, so I'm using this a way to make that simpler\nexport const memoize = _memoize\n\nexport function objMap(obj, fn) {\n  return Object.keys(obj).reduce((newObj, key) => {\n    newObj[key] = fn(obj[key], key)\n    return newObj\n  }, {})\n}\n\nexport function objReduce(obj, fn) {\n  return Object.keys(obj).reduce((newObj, key) => {\n    let res = fn(obj[key], key)\n    if(res && typeof res === \"object\")\n      Object.assign(newObj, res)\n    return newObj\n  }, {})\n}\n\n// Redux middleware that exposes the system to async actions (like redux-thunk, but with out system instead of (dispatch, getState)\nexport function systemThunkMiddleware(getSystem) {\n  return ({ dispatch, getState }) => { // eslint-disable-line no-unused-vars\n    return next => action => {\n      if (typeof action === \"function\") {\n        return action(getSystem())\n      }\n\n      return next(action)\n    }\n  }\n}\n\nexport function defaultStatusCode ( responses ) {\n  let codes = responses.keySeq()\n  return codes.contains(DEFAULT_RESPONSE_KEY) ? DEFAULT_RESPONSE_KEY : codes.filter( key => (key+\"\")[0] === \"2\").sort().first()\n}\n\n\n/**\n * Returns an Immutable List, safely\n * @param {Immutable.Iterable} iterable the iterable to get the key from\n * @param {String|[String]} key either an array of keys, or a single key\n * @returns {Immutable.List} either iterable.get(keys) or an empty Immutable.List\n */\nexport function getList(iterable, keys) {\n  if(!Im.Iterable.isIterable(iterable)) {\n    return Im.List()\n  }\n  let val = iterable.getIn(Array.isArray(keys) ? keys : [keys])\n  return Im.List.isList(val) ? val : Im.List()\n}\n\n/**\n * Take an immutable map, and convert to a list.\n * Where the keys are merged with the value objects\n * @param {Immutable.Map} map, the map to convert\n * @param {String} key the key to use, when merging the `key`\n * @returns {Immutable.List}\n */\nexport function mapToList(map, keyNames=\"key\", collectedKeys=Im.Map()) {\n  if(!Im.Map.isMap(map) || !map.size) {\n    return Im.List()\n  }\n\n  if(!Array.isArray(keyNames)) {\n    keyNames = [ keyNames ]\n  }\n\n  if(keyNames.length < 1) {\n    return map.merge(collectedKeys)\n  }\n\n  // I need to avoid `flatMap` from merging in the Maps, as well as the lists\n  let list = Im.List()\n  let keyName = keyNames[0]\n  for(let entry of map.entries()) {\n    let [key, val] = entry\n    let nextList = mapToList(val, keyNames.slice(1), collectedKeys.set(keyName, key))\n    if(Im.List.isList(nextList)) {\n      list = list.concat(nextList)\n    } else {\n      list = list.push(nextList)\n    }\n  }\n\n  return list\n}\n\nexport function extractFileNameFromContentDispositionHeader(value){\n  let patterns = [\n    /filename\\*=[^']+'\\w*'\"([^\"]+)\";?/i,\n    /filename\\*=[^']+'\\w*'([^;]+);?/i,\n    /filename=\"([^;]*);?\"/i,\n    /filename=([^;]*);?/i\n  ]\n  \n  let responseFilename\n  patterns.some(regex => {\n    responseFilename = regex.exec(value)\n    return responseFilename !== null\n  })\n    \n  if (responseFilename !== null && responseFilename.length > 1) {\n    try {\n      return decodeURIComponent(responseFilename[1])\n    } catch(e) {\n      console.error(e)\n    }\n  }\n\n  return null\n}\n\n// PascalCase, aka UpperCamelCase\nexport function pascalCase(str) {\n  return upperFirst(camelCase(str))\n}\n\n// Remove the ext of a filename, and pascalCase it\nexport function pascalCaseFilename(filename) {\n  return pascalCase(filename.replace(/\\.[^./]*$/, \"\"))\n}\n\n// Check if ...\n// - new props\n// - If immutable, use .is()\n// - if in explicit objectList, then compare using _.eq\n// - else use ===\nexport const propChecker = (props, nextProps, objectList=[], ignoreList=[]) => {\n\n  if(Object.keys(props).length !== Object.keys(nextProps).length) {\n    return true\n  }\n\n  return (\n    some(props, (a, name) => {\n      if(ignoreList.includes(name)) {\n        return false\n      }\n      let b = nextProps[name]\n\n      if(Im.Iterable.isIterable(a)) {\n        return !Im.is(a,b)\n      }\n\n      // Not going to compare objects\n      if(typeof a === \"object\" && typeof b === \"object\") {\n        return false\n      }\n\n      return a !== b\n    })\n    || objectList.some( objectPropName => !eq(props[objectPropName], nextProps[objectPropName])))\n}\n\nexport const validateMaximum = ( val, max ) => {\n  if (val > max) {\n    return `Value must be less than ${max}`\n  }\n}\n\nexport const validateMinimum = ( val, min ) => {\n  if (val < min) {\n    return `Value must be greater than ${min}`\n  }\n}\n\nexport const validateNumber = ( val ) => {\n  if (!/^-?\\d+(\\.?\\d+)?$/.test(val)) {\n    return \"Value must be a number\"\n  }\n}\n\nexport const validateInteger = ( val ) => {\n  if (!/^-?\\d+$/.test(val)) {\n    return \"Value must be an integer\"\n  }\n}\n\nexport const validateFile = ( val ) => {\n  if ( val && !(val instanceof win.File) ) {\n    return \"Value must be a file\"\n  }\n}\n\nexport const validateBoolean = ( val ) => {\n  if ( !(val === \"true\" || val === \"false\" || val === true || val === false) ) {\n    return \"Value must be a boolean\"\n  }\n}\n\nexport const validateString = ( val ) => {\n  if ( val && typeof val !== \"string\" ) {\n    return \"Value must be a string\"\n  }\n}\n\nexport const validateDateTime = (val) => {\n    if (isNaN(Date.parse(val))) {\n        return \"Value must be a DateTime\"\n    }\n}\n\nexport const validateGuid = (val) => {\n    val = val.toString().toLowerCase()\n    if (!/^[{(]?[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}[)}]?$/.test(val)) {\n        return \"Value must be a Guid\"\n    }\n}\n\nexport const validateMaxLength = (val, max) => {\n  if (val.length > max) {\n      return `Value must be no longer than ${max} character${max !== 1 ? \"s\" : \"\"}`\n  }\n}\n\nexport const validateMinLength = (val, min) => {\n  if (val.length < min) {\n      return `Value must be at least ${min} character${min !== 1 ? \"s\" : \"\"}`\n  }\n}\n\nexport const validatePattern = (val, rxPattern) => {\n  var patt = new RegExp(rxPattern)\n  if (!patt.test(val)) {\n      return \"Value must follow pattern \" + rxPattern\n  }\n}\n\n// validation of parameters before execute\nexport const validateParam = (param, value, { isOAS3 = false, bypassRequiredCheck = false } = {}) => {\n\n  let errors = []\n\n  let paramRequired = param.get(\"required\")\n\n  let { schema: paramDetails, parameterContentMediaType } = getParameterSchema(param, { isOAS3 })\n\n  if(!paramDetails) return errors\n\n  let required = paramDetails.get(\"required\")\n  let maximum = paramDetails.get(\"maximum\")\n  let minimum = paramDetails.get(\"minimum\")\n  let type = paramDetails.get(\"type\")\n  let format = paramDetails.get(\"format\")\n  let maxLength = paramDetails.get(\"maxLength\")\n  let minLength = paramDetails.get(\"minLength\")\n  let pattern = paramDetails.get(\"pattern\")\n\n  /*\n    If the parameter is required OR the parameter has a value (meaning optional, but filled in)\n    then we should do our validation routine.\n    Only bother validating the parameter if the type was specified.\n  */\n  if ( type && (paramRequired || required || value) ) {\n    // These checks should evaluate to true if there is a parameter\n    let stringCheck = type === \"string\" && value\n    let arrayCheck = type === \"array\" && Array.isArray(value) && value.length\n    let arrayListCheck = type === \"array\" && Im.List.isList(value) && value.count()\n    let arrayStringCheck = type === \"array\" && typeof value === \"string\" && value\n    let fileCheck = type === \"file\" && value instanceof win.File\n    let booleanCheck = type === \"boolean\" && (value || value === false)\n    let numberCheck = type === \"number\" && (value || value === 0)\n    let integerCheck = type === \"integer\" && (value || value === 0)\n    let objectCheck = type === \"object\" && typeof value === \"object\" && value !== null\n    let objectStringCheck = type === \"object\" && typeof value === \"string\" && value\n\n    const allChecks = [\n      stringCheck, arrayCheck, arrayListCheck, arrayStringCheck, fileCheck,\n      booleanCheck, numberCheck, integerCheck, objectCheck, objectStringCheck,\n    ]\n\n    const passedAnyCheck = allChecks.some(v => !!v)\n\n    if ((paramRequired || required) && !passedAnyCheck && !bypassRequiredCheck ) {\n      errors.push(\"Required field is not provided\")\n      return errors\n    }\n\n    if (\n      type === \"object\" &&\n      typeof value === \"string\" &&\n      (parameterContentMediaType === null ||\n        parameterContentMediaType === \"application/json\")\n    ) {\n      try {\n        JSON.parse(value)\n      } catch (e) {\n        errors.push(\"Parameter string value must be valid JSON\")\n        return errors\n      }\n    }\n\n    if (pattern) {\n      let err = validatePattern(value, pattern)\n      if (err) errors.push(err)\n    }\n\n    if (maxLength || maxLength === 0) {\n      let err = validateMaxLength(value, maxLength)\n      if (err) errors.push(err)\n    }\n\n    if (minLength) {\n      let err = validateMinLength(value, minLength)\n      if (err) errors.push(err)\n    }\n\n    if (maximum || maximum === 0) {\n      let err = validateMaximum(value, maximum)\n      if (err) errors.push(err)\n    }\n\n    if (minimum || minimum === 0) {\n      let err = validateMinimum(value, minimum)\n      if (err) errors.push(err)\n    }\n\n    if ( type === \"string\" ) {\n      let err\n      if (format === \"date-time\") {\n          err = validateDateTime(value)\n      } else if (format === \"uuid\") {\n          err = validateGuid(value)\n      } else {\n          err = validateString(value)\n      }\n      if (!err) return errors\n      errors.push(err)\n    } else if ( type === \"boolean\" ) {\n      let err = validateBoolean(value)\n      if (!err) return errors\n      errors.push(err)\n    } else if ( type === \"number\" ) {\n      let err = validateNumber(value)\n      if (!err) return errors\n      errors.push(err)\n    } else if ( type === \"integer\" ) {\n      let err = validateInteger(value)\n      if (!err) return errors\n      errors.push(err)\n    } else if ( type === \"array\" ) {\n      let itemType\n\n      if ( !arrayListCheck || !value.count() ) { return errors }\n\n      itemType = paramDetails.getIn([\"items\", \"type\"])\n\n      value.forEach((item, index) => {\n        let err\n\n        if (itemType === \"number\") {\n          err = validateNumber(item)\n        } else if (itemType === \"integer\") {\n          err = validateInteger(item)\n        } else if (itemType === \"string\") {\n          err = validateString(item)\n        }\n\n        if ( err ) {\n          errors.push({ index: index, error: err})\n        }\n      })\n    } else if ( type === \"file\" ) {\n      let err = validateFile(value)\n      if (!err) return errors\n      errors.push(err)\n    }\n  }\n\n  return errors\n}\n\nconst getXmlSampleSchema = (schema, config) => {\n  if (!schema.xml || !schema.xml.name) {\n    schema.xml = schema.xml || {}\n\n    if (schema.$$ref) {\n      let match = schema.$$ref.match(/\\S*\\/(\\S+)$/)\n      schema.xml.name = match[1]\n    } else if (schema.type || schema.items || schema.properties || schema.additionalProperties) {\n      return \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n<!-- XML example cannot be generated; root element name is undefined -->\"\n    } else {\n      return null\n    }\n  }\n  return memoizedCreateXMLExample(schema, config)\n}\n\nconst shouldStringifyTypesConfig = [\n  {\n    when: /json/,\n    shouldStringifyTypes: [\"string\"]\n  }\n]\n\nconst defaultStringifyTypes = [\"object\"]\n\nconst getStringifiedSampleForSchema = (schema, config, contentType) => {\n  const res = memoizedSampleFromSchema(schema, config)\n  const resType = typeof res\n\n  const typesToStringify = shouldStringifyTypesConfig.reduce(\n    (types, nextConfig) => nextConfig.when.test(contentType)\n      ? [...types, ...nextConfig.shouldStringifyTypes]\n      : types,\n    defaultStringifyTypes)\n\n  return some(typesToStringify, x => x === resType)\n    ? JSON.stringify(res, null, 2)\n    : res\n}\n\nexport const getSampleSchema = (schema, contentType=\"\", config={}) => {\n  if (/xml/.test(contentType)) {\n    return getXmlSampleSchema(schema, config)\n  }\n\n  return getStringifiedSampleForSchema(schema, config, contentType)\n}\n\nexport const parseSearch = () => {\n  let map = {}\n  let search = win.location.search\n\n  if(!search)\n    return {}\n\n  if ( search != \"\" ) {\n    let params = search.substr(1).split(\"&\")\n\n    for (let i in params) {\n      if (!params.hasOwnProperty(i)) {\n        continue\n      }\n      i = params[i].split(\"=\")\n      map[decodeURIComponent(i[0])] = (i[1] && decodeURIComponent(i[1])) || \"\"\n    }\n  }\n\n  return map\n}\n\nexport const serializeSearch = (searchMap) => {\n  return Object.keys(searchMap).map(k => {\n    return encodeURIComponent(k) + \"=\" + encodeURIComponent(searchMap[k])\n  }).join(\"&\")\n}\n\nexport const btoa = (str) => {\n  let buffer\n\n  if (str instanceof Buffer) {\n    buffer = str\n  } else {\n    buffer = Buffer.from(str.toString(), \"utf-8\")\n  }\n\n  return buffer.toString(\"base64\")\n}\n\nexport const sorters = {\n  operationsSorter: {\n    alpha: (a, b) => a.get(\"path\").localeCompare(b.get(\"path\")),\n    method: (a, b) => a.get(\"method\").localeCompare(b.get(\"method\"))\n  },\n  tagsSorter: {\n    alpha: (a, b) => a.localeCompare(b)\n  }\n}\n\nexport const buildFormData = (data) => {\n  let formArr = []\n\n  for (let name in data) {\n    let val = data[name]\n    if (val !== undefined && val !== \"\") {\n      formArr.push([name, \"=\", encodeURIComponent(val).replace(/%20/g,\"+\")].join(\"\"))\n    }\n  }\n  return formArr.join(\"&\")\n}\n\n// Is this really required as a helper? Perhaps. TODO: expose the system of presets.apis in docs, so we know what is supported\nexport const shallowEqualKeys = (a,b, keys) => {\n  return !!find(keys, (key) => {\n    return eq(a[key], b[key])\n  })\n}\n\nexport function sanitizeUrl(url) {\n  if(typeof url !== \"string\" || url === \"\") {\n    return \"\"\n  }\n\n  return braintreeSanitizeUrl(url)\n}\n\nexport function requiresValidationURL(uri) {\n  if (!uri || uri.indexOf(\"localhost\") >= 0 || uri.indexOf(\"127.0.0.1\") >= 0 || uri === \"none\") {\n    return false\n  }\n  return true\n}\n\n\nexport function getAcceptControllingResponse(responses) {\n  if(!Im.OrderedMap.isOrderedMap(responses)) {\n    // wrong type!\n    return null\n  }\n\n  if(!responses.size) {\n    // responses is empty\n    return null\n  }\n\n  const suitable2xxResponse = responses.find((res, k) => {\n    return k.startsWith(\"2\") && Object.keys(res.get(\"content\") || {}).length > 0\n  })\n\n  // try to find a suitable `default` responses\n  const defaultResponse = responses.get(\"default\") || Im.OrderedMap()\n  const defaultResponseMediaTypes = (defaultResponse.get(\"content\") || Im.OrderedMap()).keySeq().toJS()\n  const suitableDefaultResponse = defaultResponseMediaTypes.length ? defaultResponse : null\n\n  return suitable2xxResponse || suitableDefaultResponse\n}\n\n// suitable for use in URL fragments\nexport const createDeepLinkPath = (str) => typeof str == \"string\" || str instanceof String ? str.trim().replace(/\\s/g, \"%20\") : \"\"\n// suitable for use in CSS classes and ids\nexport const escapeDeepLinkPath = (str) => cssEscape( createDeepLinkPath(str).replace(/%20/g, \"_\") )\n\nexport const getExtensions = (defObj) => defObj.filter((v, k) => /^x-/.test(k))\nexport const getCommonExtensions = (defObj) => defObj.filter((v, k) => /^pattern|maxLength|minLength|maximum|minimum/.test(k))\n\n// Deeply strips a specific key from an object.\n//\n// `predicate` can be used to discriminate the stripping further,\n// by preserving the key's place in the object based on its value.\nexport function deeplyStripKey(input, keyToStrip, predicate = () => true) {\n  if(typeof input !== \"object\" || Array.isArray(input) || input === null || !keyToStrip) {\n    return input\n  }\n\n  const obj = Object.assign({}, input)\n\n  Object.keys(obj).forEach(k => {\n    if(k === keyToStrip && predicate(obj[k], k)) {\n      delete obj[k]\n      return\n    }\n    obj[k] = deeplyStripKey(obj[k], keyToStrip, predicate)\n  })\n\n  return obj\n}\n\nexport function stringify(thing) {\n  if (typeof thing === \"string\") {\n    return thing\n  }\n\n  if (thing && thing.toJS) {\n    thing = thing.toJS()\n  }\n\n  if (typeof thing === \"object\" && thing !== null) {\n    try {\n      return JSON.stringify(thing, null, 2)\n    }\n    catch (e) {\n      return String(thing)\n    }\n  }\n\n  if(thing === null || thing === undefined) {\n    return \"\"\n  }\n\n  return thing.toString()\n}\n\nexport function numberToString(thing) {\n  if(typeof thing === \"number\") {\n    return thing.toString()\n  }\n\n  return thing\n}\n\nexport function paramToIdentifier(param, { returnAll = false, allowHashes = true } = {}) {\n  if(!Im.Map.isMap(param)) {\n    throw new Error(\"paramToIdentifier: received a non-Im.Map parameter as input\")\n  }\n  const paramName = param.get(\"name\")\n  const paramIn = param.get(\"in\")\n  \n  let generatedIdentifiers = []\n\n  // Generate identifiers in order of most to least specificity\n\n  if (param && param.hashCode && paramIn && paramName && allowHashes) {\n    generatedIdentifiers.push(`${paramIn}.${paramName}.hash-${param.hashCode()}`)\n  }\n  \n  if(paramIn && paramName) {\n    generatedIdentifiers.push(`${paramIn}.${paramName}`)\n  }\n\n  generatedIdentifiers.push(paramName)\n\n  // Return the most preferred identifier, or all if requested\n\n  return returnAll ? generatedIdentifiers : (generatedIdentifiers[0] || \"\")\n}\n\nexport function paramToValue(param, paramValues) {\n  const allIdentifiers = paramToIdentifier(param, { returnAll: true })\n\n  // Map identifiers to values in the provided value hash, filter undefined values,\n  // and return the first value found\n  const values = allIdentifiers\n    .map(id => {\n      return paramValues[id]\n    })\n    .filter(value => value !== undefined)\n\n  return values[0]\n}\n\n// adapted from https://auth0.com/docs/flows/guides/auth-code-pkce/includes/create-code-verifier\nexport function generateCodeVerifier() {\n  return b64toB64UrlEncoded(\n    randomBytes(32).toString(\"base64\")\n  )\n}\n\nexport function createCodeChallenge(codeVerifier) {\n  return b64toB64UrlEncoded(\n      shaJs(\"sha256\")\n      .update(codeVerifier)\n      .digest(\"base64\")\n    )\n}\n\nfunction b64toB64UrlEncoded(str) {\n  return str\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\")\n    .replace(/=/g, \"\")\n}\n\nexport const isEmptyValue = (value) => {\n  if (!value) {\n    return true\n  }\n\n  if (isImmutable(value) && value.isEmpty()) {\n    return true\n  }\n\n  return false\n}\n","import React from \"react\"\nimport { createStore, applyMiddleware, bindActionCreators, compose } from \"redux\"\nimport Im, { fromJS, Map } from \"immutable\"\nimport deepExtend from \"deep-extend\"\nimport { combineReducers } from \"redux-immutable\"\nimport serializeError from \"serialize-error\"\nimport assignDeep from \"@kyleshockey/object-assign-deep\"\nimport { NEW_THROWN_ERR } from \"corePlugins/err/actions\"\nimport win from \"core/window\"\n\nimport { systemThunkMiddleware, isFn, objMap, objReduce, isObject, isArray, isFunc } from \"core/utils\"\n\nconst idFn = a => a\n\n// Apply middleware that gets sandwitched between `dispatch` and the reducer function(s)\nfunction createStoreWithMiddleware(rootReducer, initialState, getSystem) {\n\n  let middlwares = [\n    // createLogger( {\n    //   stateTransformer: state => state && state.toJS()\n    // } ),\n    systemThunkMiddleware( getSystem )\n  ]\n\n  const composeEnhancers = win.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  return createStore(rootReducer, initialState, composeEnhancers(\n    applyMiddleware( ...middlwares )\n  ))\n}\n\nexport default class Store {\n\n  constructor(opts={}) {\n    deepExtend(this, {\n      state: {},\n      plugins: [],\n      system: {\n        configs: {},\n        fn: {},\n        components: {},\n        rootInjects: {},\n        statePlugins: {}\n      },\n      boundSystem: {},\n      toolbox: {}\n    }, opts)\n\n    this.getSystem = this._getSystem.bind(this)\n\n    // Bare system (nothing in it, besides the state)\n    this.store = configureStore(idFn, fromJS(this.state), this.getSystem )\n\n    // will be the system + Im, we can add more tools when we need to\n    this.buildSystem(false)\n\n    // Bootstrap plugins\n    this.register(this.plugins)\n  }\n\n  getStore() {\n    return this.store\n  }\n\n  register(plugins, rebuild=true) {\n    var pluginSystem = combinePlugins(plugins, this.getSystem())\n    systemExtend(this.system, pluginSystem)\n    if(rebuild) {\n      this.buildSystem()\n    }\n\n    const needAnotherRebuild = callAfterLoad.call(this.system, plugins, this.getSystem())\n\n    if(needAnotherRebuild) {\n      this.buildSystem()\n    }\n  }\n\n  buildSystem(buildReducer=true) {\n    let dispatch = this.getStore().dispatch\n    let getState = this.getStore().getState\n\n    this.boundSystem = Object.assign({},\n        this.getRootInjects(),\n        this.getWrappedAndBoundActions(dispatch),\n        this.getWrappedAndBoundSelectors(getState, this.getSystem),\n        this.getStateThunks(getState),\n        this.getFn(),\n        this.getConfigs()\n     )\n\n    if(buildReducer)\n      this.rebuildReducer()\n  }\n\n  _getSystem() {\n    return this.boundSystem\n  }\n\n  getRootInjects() {\n    return Object.assign({\n      getSystem: this.getSystem,\n      getStore: this.getStore.bind(this),\n      getComponents: this.getComponents.bind(this),\n      getState: this.getStore().getState,\n      getConfigs: this._getConfigs.bind(this),\n      Im,\n      React\n    }, this.system.rootInjects || {})\n  }\n\n  _getConfigs(){\n    return this.system.configs\n  }\n\n  getConfigs() {\n    return {\n      configs: this.system.configs\n    }\n  }\n\n  setConfigs(configs) {\n    this.system.configs = configs\n  }\n\n  rebuildReducer() {\n    this.store.replaceReducer(buildReducer(this.system.statePlugins))\n  }\n\n  /**\n   * Generic getter from system.statePlugins\n   *\n   */\n  getType(name) {\n    let upName = name[0].toUpperCase() + name.slice(1)\n    return objReduce(this.system.statePlugins, (val, namespace) => {\n        let thing = val[name]\n        if(thing)\n        return {[namespace+upName]:  thing}\n      })\n  }\n\n  getSelectors() {\n    return this.getType(\"selectors\")\n  }\n\n  getActions() {\n    let actionHolders = this.getType(\"actions\")\n\n    return objMap(actionHolders, (actions) => {\n      return objReduce(actions, (action, actionName) => {\n        if(isFn(action))\n          return {[actionName]: action}\n      })\n    })\n  }\n\n  getWrappedAndBoundActions(dispatch) {\n    let actionGroups = this.getBoundActions(dispatch)\n      return objMap(actionGroups, (actions, actionGroupName) => {\n        let wrappers = this.system.statePlugins[actionGroupName.slice(0,-7)].wrapActions\n          if(wrappers) {\n            return objMap(actions, (action, actionName) => {\n              let wrap = wrappers[actionName]\n              if(!wrap) {\n                return action\n              }\n\n              if(!Array.isArray(wrap)) {\n                wrap = [wrap]\n              }\n              return wrap.reduce((acc, fn) => {\n                let newAction = (...args) => {\n                  return fn(acc, this.getSystem())(...args)\n                }\n                if(!isFn(newAction)) {\n                  throw new TypeError(\"wrapActions needs to return a function that returns a new function (ie the wrapped action)\")\n                }\n                return wrapWithTryCatch(newAction)\n              }, action || Function.prototype)\n            })\n          }\n        return actions\n      })\n  }\n\n  getWrappedAndBoundSelectors(getState, getSystem) {\n    let selectorGroups = this.getBoundSelectors(getState, getSystem)\n      return objMap(selectorGroups, (selectors, selectorGroupName) => {\n        let stateName = [selectorGroupName.slice(0, -9)] // selectors = 9 chars\n        let wrappers = this.system.statePlugins[stateName].wrapSelectors\n          if(wrappers) {\n            return objMap(selectors, (selector, selectorName) => {\n              let wrap = wrappers[selectorName]\n              if(!wrap) {\n                return selector\n              }\n\n              if(!Array.isArray(wrap)) {\n                wrap = [wrap]\n              }\n              return wrap.reduce((acc, fn) => {\n                let wrappedSelector = (...args) => {\n                  return fn(acc, this.getSystem())(getState().getIn(stateName), ...args)\n                }\n                if(!isFn(wrappedSelector)) {\n                  throw new TypeError(\"wrapSelector needs to return a function that returns a new function (ie the wrapped action)\")\n                }\n                return wrappedSelector\n              }, selector || Function.prototype)\n            })\n          }\n        return selectors\n      })\n  }\n\n  getStates(state) {\n    return Object.keys(this.system.statePlugins).reduce((obj, key) => {\n      obj[key] = state.get(key)\n      return obj\n    }, {})\n  }\n\n  getStateThunks(getState) {\n    return Object.keys(this.system.statePlugins).reduce((obj, key) => {\n        obj[key] = ()=> getState().get(key)\n    return obj\n  }, {})\n  }\n\n  getFn() {\n    return {\n      fn: this.system.fn\n    }\n  }\n\n  getComponents(component) {\n    const res = this.system.components[component]\n\n    if(Array.isArray(res)) {\n      return res.reduce((ori, wrapper) => {\n        return wrapper(ori, this.getSystem())\n      })\n    }\n    if(typeof component !== \"undefined\") {\n      return this.system.components[component]\n    }\n\n    return this.system.components\n  }\n\n  getBoundSelectors(getState, getSystem) {\n    return objMap(this.getSelectors(), (obj, key) => {\n      let stateName = [key.slice(0, -9)] // selectors = 9 chars\n      const getNestedState = ()=> getState().getIn(stateName)\n\n      return objMap(obj, (fn) => {\n        return (...args) => {\n          let res = wrapWithTryCatch(fn).apply(null, [getNestedState(), ...args])\n\n          //  If a selector returns a function, give it the system - for advanced usage\n          if(typeof(res) === \"function\")\n            res = wrapWithTryCatch(res)(getSystem())\n\n          return res\n        }\n      })\n    })\n  }\n\n  getBoundActions(dispatch) {\n\n    dispatch = dispatch || this.getStore().dispatch\n\n    const actions = this.getActions()\n\n    const process = creator =>{\n      if( typeof( creator ) !== \"function\" ) {\n        return objMap(creator, prop => process(prop))\n      }\n\n      return ( ...args )=>{\n        var action = null\n        try{\n          action = creator( ...args )\n        }\n        catch( e ){\n          action = {type: NEW_THROWN_ERR, error: true, payload: serializeError(e) }\n        }\n        finally{\n          return action // eslint-disable-line no-unsafe-finally\n        }\n      }\n\n    }\n    return objMap(actions, actionCreator => bindActionCreators( process( actionCreator ), dispatch ) )\n  }\n\n  getMapStateToProps() {\n    return () => {\n      return Object.assign({}, this.getSystem())\n    }\n  }\n\n  getMapDispatchToProps(extras) {\n    return (dispatch) => {\n      return deepExtend({}, this.getWrappedAndBoundActions(dispatch), this.getFn(), extras)\n    }\n  }\n\n}\n\nfunction combinePlugins(plugins, toolbox) {\n  if(isObject(plugins) && !isArray(plugins)) {\n    return assignDeep({}, plugins)\n  }\n\n  if(isFunc(plugins)) {\n    return combinePlugins(plugins(toolbox), toolbox)\n  }\n\n  if(isArray(plugins)) {\n    return plugins\n    .map(plugin => combinePlugins(plugin, toolbox))\n    .reduce(systemExtend, {})\n  }\n\n  return {}\n}\n\nfunction callAfterLoad(plugins, system, { hasLoaded } = {}) {\n  let calledSomething = hasLoaded\n  if(isObject(plugins) && !isArray(plugins)) {\n    if(typeof plugins.afterLoad === \"function\") {\n      calledSomething = true\n      wrapWithTryCatch(plugins.afterLoad).call(this, system)\n    }\n  }\n\n  if(isFunc(plugins))\n    return callAfterLoad.call(this, plugins(system), system, { hasLoaded: calledSomething })\n\n  if(isArray(plugins)) {\n    return plugins.map(plugin => callAfterLoad.call(this, plugin, system, { hasLoaded: calledSomething }))\n  }\n\n  return calledSomething\n}\n\n// Wraps deepExtend, to account for certain fields, being wrappers.\n// Ie: we need to convert some fields into arrays, and append to them.\n// Rather than overwrite\nfunction systemExtend(dest={}, src={}) {\n\n  if(!isObject(dest)) {\n    return {}\n  }\n  if(!isObject(src)) {\n    return dest\n  }\n\n  // Wrap components\n  // Parses existing components in the system, and prepares them for wrapping via getComponents\n  if(src.wrapComponents) {\n    objMap(src.wrapComponents, (wrapperFn, key) => {\n      const ori = dest.components && dest.components[key]\n      if(ori && Array.isArray(ori)) {\n        dest.components[key] = ori.concat([wrapperFn])\n        delete src.wrapComponents[key]\n      } else if(ori) {\n        dest.components[key] = [ori, wrapperFn]\n        delete src.wrapComponents[key]\n      }\n    })\n\n    if(!Object.keys(src.wrapComponents).length) {\n      // only delete wrapComponents if we've matched all of our wrappers to components\n      // this handles cases where the component to wrap may be out of our scope,\n      // but a higher recursive `combinePlugins` call will be able to handle it.\n      delete src.wrapComponents\n    }\n  }\n\n\n  // Account for wrapActions, make it an array and append to it\n  // Modifies `src`\n  // 80% of this code is just safe traversal. We need to address that ( ie: use a lib )\n  const { statePlugins } = dest\n  if(isObject(statePlugins)) {\n    for(let namespace in statePlugins) {\n      const namespaceObj = statePlugins[namespace]\n      if(!isObject(namespaceObj) || !isObject(namespaceObj.wrapActions)) {\n        continue\n      }\n      const { wrapActions } = namespaceObj\n      for(let actionName in wrapActions) {\n        let action = wrapActions[actionName]\n\n        // This should only happen if dest is the first plugin, since invocations after that will ensure its an array\n        if(!Array.isArray(action)) {\n          action = [action]\n          wrapActions[actionName] = action // Put the value inside an array\n        }\n\n        if(src && src.statePlugins && src.statePlugins[namespace] && src.statePlugins[namespace].wrapActions && src.statePlugins[namespace].wrapActions[actionName]) {\n          src.statePlugins[namespace].wrapActions[actionName] = wrapActions[actionName].concat(src.statePlugins[namespace].wrapActions[actionName])\n        }\n\n      }\n    }\n  }\n\n  return deepExtend(dest, src)\n}\n\nfunction buildReducer(states) {\n  let reducerObj = objMap(states, (val) => {\n    return val.reducers\n  })\n  return allReducers(reducerObj)\n}\n\nfunction allReducers(reducerSystem) {\n  let reducers = Object.keys(reducerSystem).reduce((obj, key) => {\n    obj[key] = makeReducer(reducerSystem[key])\n    return obj\n  },{})\n\n  if(!Object.keys(reducers).length) {\n    return idFn\n  }\n\n  return combineReducers(reducers)\n}\n\nfunction makeReducer(reducerObj) {\n  return (state = new Map(), action) => {\n    if(!reducerObj)\n      return state\n\n    let redFn = (reducerObj[action.type])\n    if(redFn) {\n      const res = wrapWithTryCatch(redFn)(state, action)\n      // If the try/catch wrapper kicks in, we'll get null back...\n      // in that case, we want to avoid making any changes to state\n      return res === null ? state : res\n    }\n    return state\n  }\n}\n\nfunction wrapWithTryCatch(fn, {\n  logErrors = true\n} = {}) {\n  if(typeof fn !== \"function\") {\n    return fn\n  }\n\n  return function(...args) {\n    try {\n      return fn.call(this, ...args)\n    } catch(e) {\n      if(logErrors) {\n        console.error(e)\n      }\n      return null\n    }\n  }\n}\n\nfunction configureStore(rootReducer, initialState, getSystem) {\n  const store = createStoreWithMiddleware(rootReducer, initialState, getSystem)\n\n  // if (module.hot) {\n  //   // Enable Webpack hot module replacement for reducers\n  //   module.hot.accept(\"reducers/index\", () => {\n  //     const nextRootReducer = require(\"reducers/index\")\n  //     store.replaceReducer(nextRootReducer)\n  //   })\n  // }\n\n  return store\n}\n","export function transform(errors) {\n  // JSONSchema refers to the current object being validated\n  // as 'instance'. This isn't helpful to users, so we remove it.\n  return errors\n    .map(err => {\n      let seekStr = \"is not of a type(s)\"\n      let i = err.get(\"message\").indexOf(seekStr)\n      if(i > -1) {\n        let types = err.get(\"message\").slice(i + seekStr.length).split(\",\")\n        return err.set(\"message\", err.get(\"message\").slice(0, i) + makeNewMessage(types))\n      } else {\n        return err\n      }\n    })\n}\n\nfunction makeNewMessage(types) {\n  return types.reduce((p, c, i, arr) => {\n    if(i === arr.length - 1 && arr.length > 1) {\n      return p + \"or \" + c\n    } else if(arr[i+1] && arr.length > 2) {\n      return p + c + \", \"\n    } else if(arr[i+1]) {\n      return p + c + \" \"\n    } else {\n      return p + c\n    }\n  }, \"should be a\")\n}\n","import get from \"lodash/get\"\nimport { fromJS } from \"immutable\"\n\nexport function transform(errors, { jsSpec }) {\n  // LOOK HERE THIS TRANSFORMER IS CURRENTLY DISABLED 😃\n  // TODO: finish implementing, fix flattening problem\n  /* eslint-disable no-unreachable */\n  return errors\n\n\n  // JSONSchema gives us very little to go on\n  let searchStr = \"is not exactly one from <#/definitions/parameter>,<#/definitions/jsonReference>\"\n  return errors\n    .map(err => {\n      let message = err.get(\"message\")\n      let isParameterOneOfError = message.indexOf(searchStr) > -1\n      if(isParameterOneOfError) {\n        // try to find what's wrong\n        return createTailoredParameterError(err, jsSpec)\n      } else {\n        return err\n      }\n    })\n    .flatten(true) // shallow Immutable flatten\n}\n\nconst VALID_IN_VALUES = [\"path\", \"query\", \"header\", \"body\", \"formData\"]\nconst VALID_COLLECTIONFORMAT_VALUES = [\"csv\", \"ssv\", \"tsv\", \"pipes\", \"multi\"]\n\nfunction createTailoredParameterError(err, jsSpec) {\n  let newErrs = []\n  let parameter = get(jsSpec, err.get(\"path\"))\n\n  // find addressable cases\n  if(parameter.in && VALID_IN_VALUES.indexOf(parameter.in) === -1) {\n    let message = `Wrong value for the \"in\" keyword. Expected one of: ${VALID_IN_VALUES.join(\", \")}.`\n    newErrs.push({\n      message,\n      path: err.get(\"path\") + \".in\",\n      type: \"spec\",\n      source: \"structural\",\n      level: \"error\"\n    })\n  }\n\n  if(parameter.collectionFormat && VALID_COLLECTIONFORMAT_VALUES.indexOf(parameter.collectionFormat) === -1) {\n    let message = `Wrong value for the \"collectionFormat\" keyword. Expected one of: ${VALID_COLLECTIONFORMAT_VALUES.join(\", \")}.`\n    newErrs.push({\n      message,\n      path: err.get(\"path\") + \".collectionFormat\",\n      type: \"spec\",\n      source: \"structural\",\n      level: \"error\"\n    })\n  }\n\n  return newErrs.length ? fromJS(newErrs) : err // fall back to making no changes\n\n}\n","import reduce from \"lodash/reduce\"\nimport * as NotOfType from \"./transformers/not-of-type\"\nimport * as ParameterOneOf from \"./transformers/parameter-oneof\"\n\nconst errorTransformers = [\n  NotOfType,\n  ParameterOneOf\n]\n\nexport default function transformErrors (errors) {\n  // Dev note: unimplemented artifact where\n  // jsSpec: system.specSelectors.specJson().toJS()\n  // regardless, to be compliant with redux@4, instead of calling the store method here,\n  // jsSpec should be pass down as an argument,\n  let inputs = {\n    jsSpec: {}\n  }\n\n  let transformedErrors = reduce(errorTransformers, (result, transformer) => {\n    try {\n      let newlyTransformedErrors = transformer.transform(result, inputs)\n      return newlyTransformedErrors.filter(err => !!err) // filter removed errors\n    } catch(e) {\n      console.error(\"Transformer error:\", e)\n      return result\n    }\n  }, errors)\n\n  return transformedErrors\n    .filter(err => !!err) // filter removed errors\n    .map(err => {\n      if(!err.get(\"line\") && err.get(\"path\")) {\n        // TODO: re-resolve line number if we've transformed it away\n      }\n      return err\n    })\n\n}\n","import {\n  NEW_THROWN_ERR,\n  NEW_THROWN_ERR_BATCH,\n  NEW_SPEC_ERR,\n  NEW_SPEC_ERR_BATCH,\n  NEW_AUTH_ERR,\n  CLEAR,\n  CLEAR_BY,\n} from \"./actions\"\n\nimport { fromJS, List } from \"immutable\"\n\nimport transformErrors from \"./error-transformers/hook\"\n\nlet DEFAULT_ERROR_STRUCTURE = {\n  // defaults\n  line: 0,\n  level: \"error\",\n  message: \"Unknown error\"\n}\n\nexport default function() {\n  return {\n    [NEW_THROWN_ERR]: (state, { payload }) => {\n      let error = Object.assign(DEFAULT_ERROR_STRUCTURE, payload, {type: \"thrown\"})\n      return state\n        .update(\"errors\", errors => (errors || List()).push( fromJS( error )) )\n        .update(\"errors\", errors => transformErrors(errors))\n    },\n\n    [NEW_THROWN_ERR_BATCH]: (state, { payload }) => {\n      payload = payload.map(err => {\n        return fromJS(Object.assign(DEFAULT_ERROR_STRUCTURE, err, { type: \"thrown\" }))\n      })\n      return state\n        .update(\"errors\", errors => (errors || List()).concat( fromJS( payload )) )\n        .update(\"errors\", errors => transformErrors(errors))\n    },\n\n    [NEW_SPEC_ERR]: (state, { payload }) => {\n      let error = fromJS(payload)\n      error = error.set(\"type\", \"spec\")\n      return state\n        .update(\"errors\", errors => (errors || List()).push( fromJS(error)).sortBy(err => err.get(\"line\")) )\n        .update(\"errors\", errors => transformErrors(errors))\n    },\n\n    [NEW_SPEC_ERR_BATCH]: (state, { payload }) => {\n      payload = payload.map(err => {\n        return fromJS(Object.assign(DEFAULT_ERROR_STRUCTURE, err, { type: \"spec\" }))\n      })\n      return state\n        .update(\"errors\", errors => (errors || List()).concat(fromJS(payload)))\n        .update(\"errors\", errors => transformErrors(errors))\n    },\n\n    [NEW_AUTH_ERR]: (state, { payload }) => {\n      let error = fromJS(Object.assign({}, payload))\n\n      error = error.set(\"type\", \"auth\")\n      return state\n        .update(\"errors\", errors => (errors || List()).push( fromJS(error)) )\n        .update(\"errors\", errors => transformErrors(errors))\n    },\n\n    [CLEAR]: (state, { payload }) => {\n      if(!payload || !state.get(\"errors\")) {\n        return state\n      }\n\n      let newErrors = state.get(\"errors\")\n        .filter(err => {\n          return err.keySeq().every(k => {\n            const errValue = err.get(k)\n            const filterValue = payload[k]\n\n            if(!filterValue) return true\n\n            return errValue !== filterValue\n          })\n        })\n      return state.merge({\n        errors: newErrors\n      })\n    },\n\n    [CLEAR_BY]: (state, { payload }) => {\n      if(!payload || typeof payload !== \"function\") {\n        return state\n      }\n      let newErrors = state.get(\"errors\")\n        .filter(err => {\n          return payload(err)\n        })\n      return state.merge({\n        errors: newErrors\n      })\n    }\n  }\n}\n","import { List } from \"immutable\"\nimport { createSelector } from \"reselect\"\n\nconst state = state => state\n\nexport const allErrors = createSelector(\n  state,\n  err => err.get(\"errors\", List())\n)\n\nexport const lastError = createSelector(\n  allErrors,\n  all => all.last()\n)\n\n","import makeReducers from \"./reducers\"\nimport * as actions from \"./actions\"\nimport * as selectors from \"./selectors\"\n\nexport default function(system) {\n  return {\n    statePlugins: {\n      err: {\n        reducers: makeReducers(system),\n        actions,\n        selectors\n      }\n    }\n  }\n}\n","import { normalizeArray } from \"core/utils\"\n\nexport const UPDATE_LAYOUT = \"layout_update_layout\"\nexport const UPDATE_FILTER = \"layout_update_filter\"\nexport const UPDATE_MODE = \"layout_update_mode\"\nexport const SHOW = \"layout_show\"\n\n// export const ONLY_SHOW = \"layout_only_show\"\n\nexport function updateLayout(layout) {\n  return {\n    type: UPDATE_LAYOUT,\n    payload: layout\n  }\n}\n\nexport function updateFilter(filter) {\n  return {\n    type: UPDATE_FILTER,\n    payload: filter\n  }\n}\n\nexport function show(thing, shown=true) {\n  thing = normalizeArray(thing)\n  return {\n    type: SHOW,\n    payload: {thing, shown}\n  }\n}\n\n// Simple string key-store, used for\nexport function changeMode(thing, mode=\"\") {\n  thing = normalizeArray(thing)\n  return {\n    type: UPDATE_MODE,\n    payload: {thing, mode}\n  }\n}\n","import { fromJS } from \"immutable\"\nimport {\n  UPDATE_LAYOUT,\n  UPDATE_FILTER,\n  UPDATE_MODE,\n  SHOW\n} from \"./actions\"\n\nexport default {\n\n  [UPDATE_LAYOUT]: (state, action) => state.set(\"layout\", action.payload),\n\n  [UPDATE_FILTER]: (state, action) => state.set(\"filter\", action.payload),\n\n  [SHOW]: (state, action) => {\n    const isShown = action.payload.shown\n    // This is one way to serialize an array, another (preferred) is to convert to json-pointer\n    // TODO: use json-pointer serilization instead of fromJS(...), for performance\n    const thingToShow = fromJS(action.payload.thing)\n    // This is a map of paths to bools\n    // eg: [one, two] => true\n    // eg: [one] => false\n    return state.update(\"shown\", fromJS({}), a => a.set(thingToShow, isShown))\n  },\n\n  [UPDATE_MODE]: (state, action) => {\n    let thing = action.payload.thing\n    let mode = action.payload.mode\n    return state.setIn([\"modes\"].concat(thing), (mode || \"\") + \"\")\n  }\n\n}\n","import { createSelector } from \"reselect\"\nimport { normalizeArray } from \"core/utils\"\nimport { fromJS } from \"immutable\"\n\nconst state = state => state\n\nexport const current = state => state.get(\"layout\")\n\nexport const currentFilter = state => state.get(\"filter\")\n\nexport const isShown = (state, thing, def) => {\n  thing = normalizeArray(thing)\n  return state.get(\"shown\", fromJS({})).get(fromJS(thing), def)\n}\n\nexport const whatMode = (state, thing, def=\"\") => {\n  thing = normalizeArray(thing)\n  return state.getIn([\"modes\", ...thing], def)\n}\n\nexport const showSummary = createSelector(\n  state,\n  state => !isShown(state, \"editor\")\n)\n","import reducers from \"./reducers\"\nimport * as actions from \"./actions\"\nimport * as selectors from \"./selectors\"\n\nexport default function() {\n  return {\n    statePlugins: {\n      layout: {\n        reducers,\n        actions,\n        selectors\n      }\n    }\n  }\n}\n","import { createSelector } from \"reselect\"\nimport { sorters } from \"core/utils\"\nimport { fromJS, Set, Map, OrderedMap, List } from \"immutable\"\nimport { paramToIdentifier } from \"../../utils\"\n\nconst DEFAULT_TAG = \"default\"\n\nconst OPERATION_METHODS = [\n  \"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\"\n]\n\nconst state = state => {\n  return state || Map()\n}\n\nexport const lastError = createSelector(\n  state,\n  spec => spec.get(\"lastError\")\n)\n\nexport const url = createSelector(\n  state,\n  spec => spec.get(\"url\")\n)\n\nexport const specStr = createSelector(\n  state,\n  spec => spec.get(\"spec\") || \"\"\n)\n\nexport const specSource = createSelector(\n  state,\n  spec => spec.get(\"specSource\") || \"not-editor\"\n)\n\nexport const specJson = createSelector(\n  state,\n  spec => spec.get(\"json\", Map())\n)\n\nexport const specResolved = createSelector(\n  state,\n  spec => spec.get(\"resolved\", Map())\n)\n\nexport const specResolvedSubtree = (state, path) => {\n  return state.getIn([\"resolvedSubtrees\", ...path], undefined)\n}\n\nconst mergerFn = (oldVal, newVal) => {\n  if(Map.isMap(oldVal) && Map.isMap(newVal)) {\n    if(newVal.get(\"$$ref\")) {\n      // resolver artifacts indicated that this key was directly resolved\n      // so we should drop the old value entirely\n      return newVal\n    }\n\n    return OrderedMap().mergeWith(\n      mergerFn,\n      oldVal,\n      newVal\n    )\n  }\n\n  return newVal\n}\n\nexport const specJsonWithResolvedSubtrees = createSelector(\n  state,\n  spec => OrderedMap().mergeWith(\n    mergerFn,\n    spec.get(\"json\"),\n    spec.get(\"resolvedSubtrees\")\n  )\n)\n\n// Default Spec ( as an object )\nexport const spec = state => {\n  let res = specJson(state)\n  return res\n}\n\nexport const isOAS3 = createSelector(\n  // isOAS3 is stubbed out here to work around an issue with injecting more selectors\n  // in the OAS3 plugin, and to ensure that the function is always available.\n  // It's not perfect, but our hybrid (core+plugin code) implementation for OAS3\n  // needs this. //KS\n  spec,\n\t() => false\n)\n\nexport const info = createSelector(\n  spec,\n\tspec => returnSelfOrNewMap(spec && spec.get(\"info\"))\n)\n\nexport const externalDocs = createSelector(\n  spec,\n\tspec => returnSelfOrNewMap(spec && spec.get(\"externalDocs\"))\n)\n\nexport const version = createSelector(\n\tinfo,\n\tinfo => info && info.get(\"version\")\n)\n\nexport const semver = createSelector(\n\tversion,\n\tversion => /v?([0-9]*)\\.([0-9]*)\\.([0-9]*)/i.exec(version).slice(1)\n)\n\nexport const paths = createSelector(\n\tspecJsonWithResolvedSubtrees,\n\tspec => spec.get(\"paths\")\n)\n\nexport const operations = createSelector(\n  paths,\n  paths => {\n    if(!paths || paths.size < 1)\n      return List()\n\n    let list = List()\n\n    if(!paths || !paths.forEach) {\n      return List()\n    }\n\n    paths.forEach((path, pathName) => {\n      if(!path || !path.forEach) {\n        return {}\n      }\n      path.forEach((operation, method) => {\n        if(OPERATION_METHODS.indexOf(method) < 0) {\n          return\n        }\n        list = list.push(fromJS({\n          path: pathName,\n          method,\n          operation,\n          id: `${method}-${pathName}`\n        }))\n      })\n    })\n\n    return list\n  }\n)\n\nexport const consumes = createSelector(\n  spec,\n  spec => Set(spec.get(\"consumes\"))\n)\n\nexport const produces = createSelector(\n  spec,\n  spec => Set(spec.get(\"produces\"))\n)\n\nexport const security = createSelector(\n    spec,\n    spec => spec.get(\"security\", List())\n)\n\nexport const securityDefinitions = createSelector(\n    spec,\n    spec => spec.get(\"securityDefinitions\")\n)\n\n\nexport const findDefinition = ( state, name ) => {\n  const resolvedRes = state.getIn([\"resolvedSubtrees\", \"definitions\", name], null)\n  const unresolvedRes = state.getIn([\"json\", \"definitions\", name], null)\n  return resolvedRes || unresolvedRes || null\n}\n\nexport const definitions = createSelector(\n  spec,\n  spec => {\n    const res = spec.get(\"definitions\")\n    return Map.isMap(res) ? res : Map()\n  }\n)\n\nexport const basePath = createSelector(\n    spec,\n    spec => spec.get(\"basePath\")\n)\n\nexport const host = createSelector(\n    spec,\n    spec => spec.get(\"host\")\n)\n\nexport const schemes = createSelector(\n    spec,\n    spec => spec.get(\"schemes\", Map())\n)\n\nexport const operationsWithRootInherited = createSelector(\n  operations,\n  consumes,\n  produces,\n  (operations, consumes, produces) => {\n    return operations.map( ops => ops.update(\"operation\", op => {\n      if(op) {\n        if(!Map.isMap(op)) { return }\n        return op.withMutations( op => {\n          if ( !op.get(\"consumes\") ) {\n            op.update(\"consumes\", a => Set(a).merge(consumes))\n          }\n          if ( !op.get(\"produces\") ) {\n            op.update(\"produces\", a => Set(a).merge(produces))\n          }\n          return op\n        })\n      } else {\n        // return something with Immutable methods\n        return Map()\n      }\n\n    }))\n  }\n)\n\nexport const tags = createSelector(\n  spec,\n  json => {\n    const tags = json.get(\"tags\", List())\n    return List.isList(tags) ? tags.filter(tag => Map.isMap(tag)) : List()\n  }\n)\n\nexport const tagDetails = (state, tag) => {\n  let currentTags = tags(state) || List()\n  return currentTags.filter(Map.isMap).find(t => t.get(\"name\") === tag, Map())\n}\n\nexport const operationsWithTags = createSelector(\n  operationsWithRootInherited,\n  tags,\n  (operations, tags) => {\n    return operations.reduce( (taggedMap, op) => {\n      let tags = Set(op.getIn([\"operation\",\"tags\"]))\n      if(tags.count() < 1)\n        return taggedMap.update(DEFAULT_TAG, List(), ar => ar.push(op))\n      return tags.reduce( (res, tag) => res.update(tag, List(), (ar) => ar.push(op)), taggedMap )\n    }, tags.reduce( (taggedMap, tag) => {\n      return taggedMap.set(tag.get(\"name\"), List())\n    } , OrderedMap()))\n  }\n)\n\nexport const taggedOperations = (state) => ({ getConfigs }) => {\n  let { tagsSorter, operationsSorter } = getConfigs()\n  return operationsWithTags(state)\n    .sortBy(\n      (val, key) => key, // get the name of the tag to be passed to the sorter\n      (tagA, tagB) => {\n        let sortFn = (typeof tagsSorter === \"function\" ? tagsSorter : sorters.tagsSorter[ tagsSorter ])\n        return (!sortFn ? null : sortFn(tagA, tagB))\n      }\n    )\n    .map((ops, tag) => {\n      let sortFn = (typeof operationsSorter === \"function\" ? operationsSorter : sorters.operationsSorter[ operationsSorter ])\n      let operations = (!sortFn ? ops : ops.sort(sortFn))\n\n      return Map({ tagDetails: tagDetails(state, tag), operations: operations })\n    })\n}\n\nexport const responses = createSelector(\n  state,\n  state => state.get( \"responses\", Map() )\n)\n\nexport const requests = createSelector(\n    state,\n    state => state.get( \"requests\", Map() )\n)\n\nexport const mutatedRequests = createSelector(\n    state,\n    state => state.get( \"mutatedRequests\", Map() )\n)\n\nexport const responseFor = (state, path, method) => {\n  return responses(state).getIn([path, method], null)\n}\n\nexport const requestFor = (state, path, method) => {\n  return requests(state).getIn([path, method], null)\n}\n\nexport const mutatedRequestFor = (state, path, method) => {\n  return mutatedRequests(state).getIn([path, method], null)\n}\n\nexport const allowTryItOutFor = () => {\n  // This is just a hook for now.\n  return true\n}\n\nexport const parameterWithMetaByIdentity = (state, pathMethod, param) => {\n  const opParams = specJsonWithResolvedSubtrees(state).getIn([\"paths\", ...pathMethod, \"parameters\"], OrderedMap())\n  const metaParams = state.getIn([\"meta\", \"paths\", ...pathMethod, \"parameters\"], OrderedMap())\n\n  const mergedParams = opParams.map((currentParam) => {\n    const inNameKeyedMeta = metaParams.get(`${param.get(\"in\")}.${param.get(\"name\")}`)\n    const hashKeyedMeta = metaParams.get(`${param.get(\"in\")}.${param.get(\"name\")}.hash-${param.hashCode()}`)\n    return OrderedMap().merge(\n      currentParam,\n      inNameKeyedMeta,\n      hashKeyedMeta\n    )\n  })\n  return mergedParams.find(curr => curr.get(\"in\") === param.get(\"in\") && curr.get(\"name\") === param.get(\"name\"), OrderedMap())\n}\n\nexport const parameterInclusionSettingFor = (state, pathMethod, paramName, paramIn) => {\n  const paramKey = `${paramIn}.${paramName}`\n  return state.getIn([\"meta\", \"paths\", ...pathMethod, \"parameter_inclusions\", paramKey], false)\n}\n\n\nexport const parameterWithMeta = (state, pathMethod, paramName, paramIn) => {\n  const opParams = specJsonWithResolvedSubtrees(state).getIn([\"paths\", ...pathMethod, \"parameters\"], OrderedMap())\n  const currentParam = opParams.find(param => param.get(\"in\") === paramIn && param.get(\"name\") === paramName, OrderedMap())\n  return parameterWithMetaByIdentity(state, pathMethod, currentParam)\n}\n\nexport const operationWithMeta = (state, path, method) => {\n  const op = specJsonWithResolvedSubtrees(state).getIn([\"paths\", path, method], OrderedMap())\n  const meta = state.getIn([\"meta\", \"paths\", path, method], OrderedMap())\n\n  const mergedParams = op.get(\"parameters\", List()).map((param) => {\n    return parameterWithMetaByIdentity(state, [path, method], param)\n  })\n\n  return OrderedMap()\n    .merge(op, meta)\n    .set(\"parameters\", mergedParams)\n}\n\n// Get the parameter value by parameter name\nexport function getParameter(state, pathMethod, name, inType) {\n  pathMethod = pathMethod || []\n  let params = state.getIn([\"meta\", \"paths\", ...pathMethod, \"parameters\"], fromJS([]))\n  return params.find( (p) => {\n    return Map.isMap(p) && p.get(\"name\") === name && p.get(\"in\") === inType\n  }) || Map() // Always return a map\n}\n\nexport const hasHost = createSelector(\n  spec,\n  spec => {\n    const host = spec.get(\"host\")\n    return typeof host === \"string\" && host.length > 0 && host[0] !== \"/\"\n  }\n)\n\n// Get the parameter values, that the user filled out\nexport function parameterValues(state, pathMethod, isXml) {\n  pathMethod = pathMethod || []\n  let paramValues = operationWithMeta(state, ...pathMethod).get(\"parameters\", List())\n  return paramValues.reduce( (hash, p) => {\n    let value = isXml && p.get(\"in\") === \"body\" ? p.get(\"value_xml\") : p.get(\"value\")\n    return hash.set(paramToIdentifier(p, { allowHashes: false }), value)\n  }, fromJS({}))\n}\n\n// True if any parameter includes `in: ?`\nexport function parametersIncludeIn(parameters, inValue=\"\") {\n  if(List.isList(parameters)) {\n    return parameters.some( p => Map.isMap(p) && p.get(\"in\") === inValue )\n  }\n}\n\n// True if any parameter includes `type: ?`\nexport function parametersIncludeType(parameters, typeValue=\"\") {\n  if(List.isList(parameters)) {\n    return parameters.some( p => Map.isMap(p) && p.get(\"type\") === typeValue )\n  }\n}\n\n// Get the consumes/produces value that the user selected\nexport function contentTypeValues(state, pathMethod) {\n  pathMethod = pathMethod || []\n  let op = specJsonWithResolvedSubtrees(state).getIn([\"paths\", ...pathMethod], fromJS({}))\n  let meta = state.getIn([\"meta\", \"paths\", ...pathMethod], fromJS({}))\n  let producesValue = currentProducesFor(state, pathMethod)\n\n  const parameters = op.get(\"parameters\") || new List()\n\n  const requestContentType = (\n    meta.get(\"consumes_value\") ? meta.get(\"consumes_value\")\n      : parametersIncludeType(parameters, \"file\") ? \"multipart/form-data\"\n      : parametersIncludeType(parameters, \"formData\") ? \"application/x-www-form-urlencoded\"\n      : undefined\n  )\n\n  return fromJS({\n    requestContentType,\n    responseContentType: producesValue\n  })\n}\n\n// Get the currently selected produces value for an operation\nexport function currentProducesFor(state, pathMethod) {\n  pathMethod = pathMethod || []\n\n  const operation = specJsonWithResolvedSubtrees(state).getIn([ \"paths\", ...pathMethod], null)\n\n  if(operation === null) {\n    // return nothing if the operation does not exist\n    return\n  }\n\n  const currentProducesValue = state.getIn([\"meta\", \"paths\", ...pathMethod, \"produces_value\"], null)\n  const firstProducesArrayItem = operation.getIn([\"produces\", 0], null)\n\n  return currentProducesValue || firstProducesArrayItem || \"application/json\"\n\n}\n\n// Get the produces options for an operation\nexport function producesOptionsFor(state, pathMethod) {\n  pathMethod = pathMethod || []\n\n  const spec = specJsonWithResolvedSubtrees(state)\n  const operation = spec.getIn([ \"paths\", ...pathMethod], null)\n\n  if(operation === null) {\n    // return nothing if the operation does not exist\n    return\n  }\n\n  const [path] = pathMethod\n\n  const operationProduces = operation.get(\"produces\", null)\n  const pathItemProduces = spec.getIn([\"paths\", path, \"produces\"], null)\n  const globalProduces = spec.getIn([\"produces\"], null)\n\n  return operationProduces || pathItemProduces || globalProduces\n}\n\n// Get the consumes options for an operation\nexport function consumesOptionsFor(state, pathMethod) {\n  pathMethod = pathMethod || []\n\n  const spec = specJsonWithResolvedSubtrees(state)\n  const operation = spec.getIn([\"paths\", ...pathMethod], null)\n\n  if (operation === null) {\n    // return nothing if the operation does not exist\n    return\n  }\n\n  const [path] = pathMethod\n\n  const operationConsumes = operation.get(\"consumes\", null)\n  const pathItemConsumes = spec.getIn([\"paths\", path, \"consumes\"], null)\n  const globalConsumes = spec.getIn([\"consumes\"], null)\n\n  return operationConsumes || pathItemConsumes || globalConsumes\n}\n\nexport const operationScheme = ( state, path, method ) => {\n  let url = state.get(\"url\")\n  let matchResult = url.match(/^([a-z][a-z0-9+\\-.]*):/)\n  let urlScheme = Array.isArray(matchResult) ? matchResult[1] : null\n\n  return state.getIn([\"scheme\", path, method]) || state.getIn([\"scheme\", \"_defaultScheme\"]) || urlScheme || \"\"\n}\n\nexport const canExecuteScheme = ( state, path, method ) => {\n  return [\"http\", \"https\"].indexOf(operationScheme(state, path, method)) > -1\n}\n\nexport const validateBeforeExecute = ( state, pathMethod ) => {\n  pathMethod = pathMethod || []\n  let paramValues = state.getIn([\"meta\", \"paths\", ...pathMethod, \"parameters\"], fromJS([]))\n  let isValid = true\n\n  paramValues.forEach( (p) => {\n    let errors = p.get(\"errors\")\n    if ( errors && errors.count() ) {\n      isValid = false\n    }\n  })\n\n  return isValid\n}\n\nexport const getOAS3RequiredRequestBodyContentType = (state, pathMethod) => {\n  let requiredObj = {\n    requestBody: false,\n    requestContentType: {}\n  }\n  let requestBody = state.getIn([\"resolvedSubtrees\", \"paths\", ...pathMethod, \"requestBody\"], fromJS([]))\n  if (requestBody.size < 1) {\n    return requiredObj\n  }\n  if (requestBody.getIn([\"required\"])) {\n    requiredObj.requestBody = requestBody.getIn([\"required\"])\n  }\n  requestBody.getIn([\"content\"]).entrySeq().forEach((contentType) => { // e.g application/json\n    const key = contentType[0]\n    if (contentType[1].getIn([\"schema\", \"required\"])) {\n      const val = contentType[1].getIn([\"schema\", \"required\"]).toJS()\n      requiredObj.requestContentType[key] = val\n    }\n  })\n  return requiredObj\n}\n\nfunction returnSelfOrNewMap(obj) {\n  // returns obj if obj is an Immutable map, else returns a new Map\n  return Map.isMap(obj) ? obj : new Map()\n}\n","import YAML from \"js-yaml\"\nimport { Map } from \"immutable\"\nimport parseUrl from \"url-parse\"\nimport serializeError from \"serialize-error\"\nimport isString from \"lodash/isString\"\nimport debounce from \"lodash/debounce\"\nimport set from \"lodash/set\"\nimport { isJSONObject, paramToValue, isEmptyValue } from \"core/utils\"\n\n// Actions conform to FSA (flux-standard-actions)\n// {type: string,payload: Any|Error, meta: obj, error: bool}\n\nexport const UPDATE_SPEC = \"spec_update_spec\"\nexport const UPDATE_URL = \"spec_update_url\"\nexport const UPDATE_JSON = \"spec_update_json\"\nexport const UPDATE_PARAM = \"spec_update_param\"\nexport const UPDATE_EMPTY_PARAM_INCLUSION = \"spec_update_empty_param_inclusion\"\nexport const VALIDATE_PARAMS = \"spec_validate_param\"\nexport const SET_RESPONSE = \"spec_set_response\"\nexport const SET_REQUEST = \"spec_set_request\"\nexport const SET_MUTATED_REQUEST = \"spec_set_mutated_request\"\nexport const LOG_REQUEST = \"spec_log_request\"\nexport const CLEAR_RESPONSE = \"spec_clear_response\"\nexport const CLEAR_REQUEST = \"spec_clear_request\"\nexport const CLEAR_VALIDATE_PARAMS = \"spec_clear_validate_param\"\nexport const UPDATE_OPERATION_META_VALUE = \"spec_update_operation_meta_value\"\nexport const UPDATE_RESOLVED = \"spec_update_resolved\"\nexport const UPDATE_RESOLVED_SUBTREE = \"spec_update_resolved_subtree\"\nexport const SET_SCHEME = \"set_scheme\"\n\nconst toStr = (str) => isString(str) ? str : \"\"\n\nexport function updateSpec(spec) {\n  const cleanSpec = (toStr(spec)).replace(/\\t/g, \"  \")\n  if(typeof spec === \"string\") {\n    return {\n      type: UPDATE_SPEC,\n      payload: cleanSpec\n    }\n  }\n}\n\nexport function updateResolved(spec) {\n  return {\n    type: UPDATE_RESOLVED,\n    payload: spec\n  }\n}\n\nexport function updateUrl(url) {\n  return {type: UPDATE_URL, payload: url}\n}\n\nexport function updateJsonSpec(json) {\n  return {type: UPDATE_JSON, payload: json}\n}\n\nexport const parseToJson = (str) => ({specActions, specSelectors, errActions}) => {\n  let { specStr } = specSelectors\n\n  let json = null\n  try {\n    str = str || specStr()\n    errActions.clear({ source: \"parser\" })\n    json = YAML.safeLoad(str)\n  } catch(e) {\n    // TODO: push error to state\n    console.error(e)\n    return errActions.newSpecErr({\n      source: \"parser\",\n      level: \"error\",\n      message: e.reason,\n      line: e.mark && e.mark.line ? e.mark.line + 1 : undefined\n    })\n  }\n  if(json && typeof json === \"object\") {\n    return specActions.updateJsonSpec(json)\n  }\n  return {}\n}\n\nlet hasWarnedAboutResolveSpecDeprecation = false\n\nexport const resolveSpec = (json, url) => ({specActions, specSelectors, errActions, fn: { fetch, resolve, AST = {} }, getConfigs}) => {\n  if(!hasWarnedAboutResolveSpecDeprecation) {\n    console.warn(`specActions.resolveSpec is deprecated since v3.10.0 and will be removed in v4.0.0; use requestResolvedSubtree instead!`)\n    hasWarnedAboutResolveSpecDeprecation = true\n  }\n\n  const {\n    modelPropertyMacro,\n    parameterMacro,\n    requestInterceptor,\n    responseInterceptor\n  } = getConfigs()\n\n  if(typeof(json) === \"undefined\") {\n    json = specSelectors.specJson()\n  }\n  if(typeof(url) === \"undefined\") {\n    url = specSelectors.url()\n  }\n\n  let getLineNumberForPath = AST.getLineNumberForPath ? AST.getLineNumberForPath : () => undefined\n\n  let specStr = specSelectors.specStr()\n\n  return resolve({\n    fetch,\n    spec: json,\n    baseDoc: url,\n    modelPropertyMacro,\n    parameterMacro,\n    requestInterceptor,\n    responseInterceptor\n  }).then( ({spec, errors}) => {\n      errActions.clear({\n        type: \"thrown\"\n      })\n      if(Array.isArray(errors) && errors.length > 0) {\n        let preparedErrors = errors\n          .map(err => {\n            console.error(err)\n            err.line = err.fullPath ? getLineNumberForPath(specStr, err.fullPath) : null\n            err.path = err.fullPath ? err.fullPath.join(\".\") : null\n            err.level = \"error\"\n            err.type = \"thrown\"\n            err.source = \"resolver\"\n            Object.defineProperty(err, \"message\", { enumerable: true, value: err.message })\n            return err\n          })\n        errActions.newThrownErrBatch(preparedErrors)\n      }\n\n      return specActions.updateResolved(spec)\n    })\n}\n\nlet requestBatch = []\n\nconst debResolveSubtrees = debounce(async () => {\n  const system = requestBatch.system // Just a reference to the \"latest\" system\n\n  if(!system) {\n    console.error(\"debResolveSubtrees: don't have a system to operate on, aborting.\")\n    return\n  }\n    const {\n      errActions,\n      errSelectors,\n      fn: {\n        resolveSubtree,\n        AST = {}\n      },\n      specSelectors,\n      specActions,\n    } = system\n\n  if(!resolveSubtree) {\n    console.error(\"Error: Swagger-Client did not provide a `resolveSubtree` method, doing nothing.\")\n    return\n  }\n\n  let getLineNumberForPath = AST.getLineNumberForPath ? AST.getLineNumberForPath : () => undefined\n\n  const specStr = specSelectors.specStr()\n\n  const {\n    modelPropertyMacro,\n    parameterMacro,\n    requestInterceptor,\n    responseInterceptor\n  } = system.getConfigs()\n\n  try {\n    var batchResult = await requestBatch.reduce(async (prev, path) => {\n      const { resultMap, specWithCurrentSubtrees } = await prev\n      const { errors, spec } = await resolveSubtree(specWithCurrentSubtrees, path, {\n        baseDoc: specSelectors.url(),\n        modelPropertyMacro,\n        parameterMacro,\n        requestInterceptor,\n        responseInterceptor\n      })\n\n      if(errSelectors.allErrors().size) {\n        errActions.clearBy(err => {\n          // keep if...\n          return err.get(\"type\") !== \"thrown\" // it's not a thrown error\n            || err.get(\"source\") !== \"resolver\" // it's not a resolver error\n            || !err.get(\"fullPath\").every((key, i) => key === path[i] || path[i] === undefined) // it's not within the path we're resolving\n        })\n      }\n\n      if(Array.isArray(errors) && errors.length > 0) {\n        let preparedErrors = errors\n          .map(err => {\n            err.line = err.fullPath ? getLineNumberForPath(specStr, err.fullPath) : null\n            err.path = err.fullPath ? err.fullPath.join(\".\") : null\n            err.level = \"error\"\n            err.type = \"thrown\"\n            err.source = \"resolver\"\n            Object.defineProperty(err, \"message\", { enumerable: true, value: err.message })\n            return err\n          })\n        errActions.newThrownErrBatch(preparedErrors)\n      }\n\n      set(resultMap, path, spec)\n      set(specWithCurrentSubtrees, path, spec)\n\n      return {\n        resultMap,\n        specWithCurrentSubtrees\n      }\n    }, Promise.resolve({\n      resultMap: (specSelectors.specResolvedSubtree([]) || Map()).toJS(),\n      specWithCurrentSubtrees: specSelectors.specJson().toJS()\n    }))\n\n    delete requestBatch.system\n    requestBatch = [] // Clear stack\n  } catch(e) {\n    console.error(e)\n  }\n\n  specActions.updateResolvedSubtree([], batchResult.resultMap)\n}, 35)\n\nexport const requestResolvedSubtree = path => system => {\n  // poor-man's array comparison\n  // if this ever inadequate, this should be rewritten to use Im.List\n  const isPathAlreadyBatched = requestBatch\n    .map(arr => arr.join(\"@@\"))\n    .indexOf(path.join(\"@@\")) > -1\n  \n  if(isPathAlreadyBatched) {\n    return\n  }\n\n  requestBatch.push(path)\n  requestBatch.system = system\n  debResolveSubtrees()\n}\n\nexport function changeParam( path, paramName, paramIn, value, isXml ){\n  return {\n    type: UPDATE_PARAM,\n    payload:{ path, value, paramName, paramIn, isXml }\n  }\n}\n\nexport function changeParamByIdentity( pathMethod, param, value, isXml ){\n  return {\n    type: UPDATE_PARAM,\n    payload:{ path: pathMethod, param, value, isXml }\n  }\n}\n\nexport const updateResolvedSubtree = (path, value) => {\n  return {\n    type: UPDATE_RESOLVED_SUBTREE,\n    payload: { path, value }\n  }\n}\n\nexport const invalidateResolvedSubtreeCache = () => {\n  return {\n    type: UPDATE_RESOLVED_SUBTREE,\n    payload: {\n      path: [],\n      value: Map()\n    }\n  }\n}\n\nexport const validateParams = ( payload, isOAS3 ) =>{\n  return {\n    type: VALIDATE_PARAMS,\n    payload:{\n      pathMethod: payload,\n      isOAS3\n    }\n  }\n}\n\nexport const updateEmptyParamInclusion = ( pathMethod, paramName, paramIn, includeEmptyValue ) =>{\n  return {\n    type: UPDATE_EMPTY_PARAM_INCLUSION,\n    payload:{\n      pathMethod,\n      paramName,\n      paramIn,\n      includeEmptyValue\n    }\n  }\n}\n\nexport function clearValidateParams( payload ){\n  return {\n    type: CLEAR_VALIDATE_PARAMS,\n    payload:{ pathMethod: payload }\n  }\n}\n\nexport function changeConsumesValue(path, value) {\n  return {\n    type: UPDATE_OPERATION_META_VALUE,\n    payload:{ path, value, key: \"consumes_value\" }\n  }\n}\n\nexport function changeProducesValue(path, value) {\n  return {\n    type: UPDATE_OPERATION_META_VALUE,\n    payload:{ path, value, key: \"produces_value\" }\n  }\n}\n\nexport const setResponse = ( path, method, res ) => {\n  return {\n    payload: { path, method, res },\n    type: SET_RESPONSE\n  }\n}\n\nexport const setRequest = ( path, method, req ) => {\n  return {\n    payload: { path, method, req },\n    type: SET_REQUEST\n  }\n}\n\nexport const setMutatedRequest = ( path, method, req ) => {\n  return {\n    payload: { path, method, req },\n    type: SET_MUTATED_REQUEST\n  }\n}\n\n// This is for debugging, remove this comment if you depend on this action\nexport const logRequest = (req) => {\n  return {\n    payload: req,\n    type: LOG_REQUEST\n  }\n}\n\n// Actually fire the request via fn.execute\n// (For debugging) and ease of testing\nexport const executeRequest = (req) =>\n  ({fn, specActions, specSelectors, getConfigs, oas3Selectors}) => {\n    let { pathName, method, operation } = req\n    let { requestInterceptor, responseInterceptor } = getConfigs()\n\n    \n    let op = operation.toJS()\n    \n    // ensure that explicitly-included params are in the request\n\n    if (operation && operation.get(\"parameters\")) {\n      operation.get(\"parameters\")\n        .filter(param => param && param.get(\"allowEmptyValue\") === true)\n        .forEach(param => {\n          if (specSelectors.parameterInclusionSettingFor([pathName, method], param.get(\"name\"), param.get(\"in\"))) {\n            req.parameters = req.parameters || {}\n            const paramValue = paramToValue(param, req.parameters)\n\n            // if the value is falsy or an empty Immutable iterable...\n            if(!paramValue || (paramValue && paramValue.size === 0)) {\n              // set it to empty string, so Swagger Client will treat it as\n              // present but empty.\n              req.parameters[param.get(\"name\")] = \"\"\n            }\n          }\n        })\n    }\n\n    // if url is relative, parseUrl makes it absolute by inferring from `window.location`\n    req.contextUrl = parseUrl(specSelectors.url()).toString()\n\n    if(op && op.operationId) {\n      req.operationId = op.operationId\n    } else if(op && pathName && method) {\n      req.operationId = fn.opId(op, pathName, method)\n    }\n\n    if(specSelectors.isOAS3()) {\n      const namespace = `${pathName}:${method}`\n\n      req.server = oas3Selectors.selectedServer(namespace) || oas3Selectors.selectedServer()\n\n      const namespaceVariables = oas3Selectors.serverVariables({\n        server: req.server,\n        namespace\n      }).toJS()\n      const globalVariables = oas3Selectors.serverVariables({ server: req.server }).toJS()\n\n      req.serverVariables = Object.keys(namespaceVariables).length ? namespaceVariables : globalVariables\n\n      req.requestContentType = oas3Selectors.requestContentType(pathName, method)\n      req.responseContentType = oas3Selectors.responseContentType(pathName, method) || \"*/*\"\n      const requestBody = oas3Selectors.requestBodyValue(pathName, method)\n      const requestBodyInclusionSetting = oas3Selectors.requestBodyInclusionSetting(pathName, method)\n\n      if(isJSONObject(requestBody)) {\n        req.requestBody = JSON.parse(requestBody)\n      } else if(requestBody && requestBody.toJS) {\n        req.requestBody = requestBody\n          .map(\n            (val) => {\n              if (Map.isMap(val)) {\n                return val.get(\"value\")\n              }\n              return val\n            }\n          )\n          .filter(\n            (value, key) => (Array.isArray(value) \n              ? value.length !== 0 \n              : !isEmptyValue(value)\n            ) || requestBodyInclusionSetting.get(key)\n          )\n          .toJS()\n      } else{\n        req.requestBody = requestBody\n      }\n    }\n\n    let parsedRequest = Object.assign({}, req)\n    parsedRequest = fn.buildRequest(parsedRequest)\n\n    specActions.setRequest(req.pathName, req.method, parsedRequest)\n\n    let requestInterceptorWrapper = async (r) => {\n      let mutatedRequest = await requestInterceptor.apply(this, [r])\n      let parsedMutatedRequest = Object.assign({}, mutatedRequest)\n      specActions.setMutatedRequest(req.pathName, req.method, parsedMutatedRequest)\n      return mutatedRequest\n    }\n\n    req.requestInterceptor = requestInterceptorWrapper\n    req.responseInterceptor = responseInterceptor\n\n    // track duration of request\n    const startTime = Date.now()\n\n\n    return fn.execute(req)\n    .then( res => {\n      res.duration = Date.now() - startTime\n      specActions.setResponse(req.pathName, req.method, res)\n    } )\n    .catch(\n      err => {\n        console.error(err)\n        specActions.setResponse(req.pathName, req.method, {\n          error: true, err: serializeError(err)\n        })\n      }\n    )\n  }\n\n\n// I'm using extras as a way to inject properties into the final, `execute` method - It's not great. Anyone have a better idea? @ponelat\nexport const execute = ( { path, method, ...extras }={} ) => (system) => {\n  let { fn:{fetch}, specSelectors, specActions } = system\n  let spec = specSelectors.specJsonWithResolvedSubtrees().toJS()\n  let scheme = specSelectors.operationScheme(path, method)\n  let { requestContentType, responseContentType } = specSelectors.contentTypeValues([path, method]).toJS()\n  let isXml = /xml/i.test(requestContentType)\n  let parameters = specSelectors.parameterValues([path, method], isXml).toJS()\n\n  return specActions.executeRequest({\n    ...extras,\n    fetch,\n    spec,\n    pathName: path,\n    method, parameters,\n    requestContentType,\n    scheme,\n    responseContentType\n  })\n}\n\nexport function clearResponse (path, method) {\n  return {\n    type: CLEAR_RESPONSE,\n    payload:{ path, method }\n  }\n}\n\nexport function clearRequest (path, method) {\n  return {\n    type: CLEAR_REQUEST,\n    payload:{ path, method }\n  }\n}\n\nexport function setScheme (scheme, path, method) {\n  return {\n    type: SET_SCHEME,\n    payload: { scheme, path, method }\n  }\n}\n","import { fromJS, List } from \"immutable\"\nimport { fromJSOrdered, validateParam, paramToValue } from \"core/utils\"\nimport win from \"../../window\"\n\n// selector-in-reducer is suboptimal, but `operationWithMeta` is more of a helper\nimport {\n  specJsonWithResolvedSubtrees,\n  parameterValues,\n  parameterInclusionSettingFor,\n} from \"./selectors\"\n\nimport {\n  UPDATE_SPEC,\n  UPDATE_URL,\n  UPDATE_JSON,\n  UPDATE_PARAM,\n  UPDATE_EMPTY_PARAM_INCLUSION,\n  VALIDATE_PARAMS,\n  SET_RESPONSE,\n  SET_REQUEST,\n  SET_MUTATED_REQUEST,\n  UPDATE_RESOLVED,\n  UPDATE_RESOLVED_SUBTREE,\n  UPDATE_OPERATION_META_VALUE,\n  CLEAR_RESPONSE,\n  CLEAR_REQUEST,\n  CLEAR_VALIDATE_PARAMS,\n  SET_SCHEME\n} from \"./actions\"\nimport { paramToIdentifier } from \"../../utils\"\n\nexport default {\n\n  [UPDATE_SPEC]: (state, action) => {\n    return (typeof action.payload === \"string\")\n      ? state.set(\"spec\", action.payload)\n      : state\n  },\n\n  [UPDATE_URL]: (state, action) => {\n    return state.set(\"url\", action.payload+\"\")\n  },\n\n  [UPDATE_JSON]: (state, action) => {\n    return state.set(\"json\", fromJSOrdered(action.payload))\n  },\n\n  [UPDATE_RESOLVED]: (state, action) => {\n    return state.setIn([\"resolved\"], fromJSOrdered(action.payload))\n  },\n\n  [UPDATE_RESOLVED_SUBTREE]: (state, action) => {\n    const { value, path } = action.payload\n    return state.setIn([\"resolvedSubtrees\", ...path], fromJSOrdered(value))\n  },\n\n  [UPDATE_PARAM]: ( state, {payload} ) => {\n    let { path: pathMethod, paramName, paramIn, param, value, isXml } = payload\n\n    let paramKey = param ? paramToIdentifier(param) : `${paramIn}.${paramName}`\n\n    const valueKey = isXml ? \"value_xml\" : \"value\"\n\n    return state.setIn(\n      [\"meta\", \"paths\", ...pathMethod, \"parameters\", paramKey, valueKey],\n      value\n    )\n  },\n\n  [UPDATE_EMPTY_PARAM_INCLUSION]: ( state, {payload} ) => {\n    let { pathMethod, paramName, paramIn, includeEmptyValue } = payload\n\n    if(!paramName || !paramIn) {\n      console.warn(\"Warning: UPDATE_EMPTY_PARAM_INCLUSION could not generate a paramKey.\")\n      return state\n    }\n\n    const paramKey = `${paramIn}.${paramName}`\n\n    return state.setIn(\n      [\"meta\", \"paths\", ...pathMethod, \"parameter_inclusions\", paramKey],\n      includeEmptyValue\n    )\n  },\n\n  [VALIDATE_PARAMS]: ( state, { payload: { pathMethod, isOAS3 } } ) => {\n    const op = specJsonWithResolvedSubtrees(state).getIn([\"paths\", ...pathMethod])\n    const paramValues = parameterValues(state, pathMethod).toJS()\n\n    return state.updateIn([\"meta\", \"paths\", ...pathMethod, \"parameters\"], fromJS({}), paramMeta => {\n      return op.get(\"parameters\", List()).reduce((res, param) => {\n        const value = paramToValue(param, paramValues)\n        const isEmptyValueIncluded = parameterInclusionSettingFor(state, pathMethod, param.get(\"name\"), param.get(\"in\"))\n        const errors = validateParam(param, value, {\n          bypassRequiredCheck: isEmptyValueIncluded,\n          isOAS3,\n        })\n        return res.setIn([paramToIdentifier(param), \"errors\"], fromJS(errors))\n      }, paramMeta)\n    })\n  },\n  [CLEAR_VALIDATE_PARAMS]: ( state, { payload:  { pathMethod } } ) => {\n    return state.updateIn( [ \"meta\", \"paths\", ...pathMethod, \"parameters\" ], fromJS([]), parameters => {\n      return parameters.map(param => param.set(\"errors\", fromJS([])))\n    })\n  },\n\n  [SET_RESPONSE]: (state, { payload: { res, path, method } } ) =>{\n    let result\n    if ( res.error ) {\n      result = Object.assign({\n        error: true,\n        name: res.err.name,\n        message: res.err.message,\n        statusCode: res.err.statusCode\n      }, res.err.response)\n    } else {\n      result = res\n    }\n\n    // Ensure headers\n    result.headers = result.headers || {}\n\n    let newState = state.setIn( [ \"responses\", path, method ], fromJSOrdered(result) )\n\n    // ImmutableJS messes up Blob. Needs to reset its value.\n    if (win.Blob && res.data instanceof win.Blob) {\n      newState = newState.setIn( [ \"responses\", path, method, \"text\" ], res.data)\n    }\n    return newState\n  },\n\n  [SET_REQUEST]: (state, { payload: { req, path, method } } ) =>{\n    return state.setIn( [ \"requests\", path, method ], fromJSOrdered(req))\n  },\n\n  [SET_MUTATED_REQUEST]: (state, { payload: { req, path, method } } ) =>{\n    return state.setIn( [ \"mutatedRequests\", path, method ], fromJSOrdered(req))\n  },\n\n  [UPDATE_OPERATION_META_VALUE]: (state, { payload: { path, value, key } }) => {\n    // path is a pathMethod tuple... can't change the name now.\n    let operationPath = [\"paths\", ...path]\n    let metaPath = [\"meta\", \"paths\", ...path]\n\n    if(\n      !state.getIn([\"json\", ...operationPath])\n      && !state.getIn([\"resolved\", ...operationPath])\n      && !state.getIn([\"resolvedSubtrees\", ...operationPath])\n    ) {\n      // do nothing if the operation does not exist\n      return state\n    }\n\n    return state.setIn([...metaPath, key], fromJS(value))\n  },\n\n  [CLEAR_RESPONSE]: (state, { payload: { path, method } } ) =>{\n    return state.deleteIn( [ \"responses\", path, method ])\n  },\n\n  [CLEAR_REQUEST]: (state, { payload: { path, method } } ) =>{\n    return state.deleteIn( [ \"requests\", path, method ])\n  },\n\n  [SET_SCHEME]: (state, { payload: { scheme, path, method } } ) =>{\n    if ( path && method ) {\n      return state.setIn( [ \"scheme\", path, method ], scheme)\n    }\n\n    if (!path && !method) {\n      return state.setIn( [ \"scheme\", \"_defaultScheme\" ], scheme)\n    }\n\n  }\n\n}\n","import get from \"lodash/get\"\n\nexport const updateSpec = (ori, {specActions}) => (...args) => {\n  ori(...args)\n  specActions.parseToJson(...args)\n}\n\nexport const updateJsonSpec = (ori, {specActions}) => (...args) => {\n  ori(...args)\n\n  specActions.invalidateResolvedSubtreeCache()\n\n  // Trigger resolution of any path-level $refs.\n  const [json] = args\n  const pathItems = get(json, [\"paths\"]) || {}\n  const pathItemKeys = Object.keys(pathItems)\n\n  pathItemKeys.forEach(k => {\n    const val = get(pathItems, [k])\n\n    if(val.$ref) {\n      specActions.requestResolvedSubtree([\"paths\", k])\n    }\n  })\n\n  // Trigger resolution of any securitySchemes-level $refs.\n  specActions.requestResolvedSubtree([\"components\", \"securitySchemes\"])\n}\n\n// Log the request ( just for debugging, shouldn't affect prod )\nexport const executeRequest = (ori, { specActions }) => (req) => {\n  specActions.logRequest(req)\n  return ori(req)\n}\n\nexport const validateParams = (ori, { specSelectors }) => (req) => {\n  return ori(req, specSelectors.isOAS3())\n}\n","import reducers from \"./reducers\"\nimport * as actions from \"./actions\"\nimport * as selectors from \"./selectors\"\nimport * as wrapActions from \"./wrap-actions\"\n\nexport default function() {\n  return {\n    statePlugins: {\n      spec: {\n        wrapActions,\n        reducers,\n        actions,\n        selectors\n      }\n    }\n  }\n}\n","import React, { Component } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { connect, Provider } from \"react-redux\"\nimport omit from \"lodash/omit\"\n\nconst SystemWrapper = (getSystem, ComponentToWrap ) => class extends Component {\n  render() {\n    return <ComponentToWrap {...getSystem() } {...this.props} {...this.context} />\n  }\n}\n\nconst RootWrapper = (reduxStore, ComponentToWrap) => class extends Component {\n  render() {\n    return (\n      <Provider store={reduxStore}>\n        <ComponentToWrap {...this.props} {...this.context} />\n      </Provider>\n    )\n  }\n}\n\nconst makeContainer = (getSystem, component, reduxStore) => {\n  const mapStateToProps = function(state, ownProps) {\n    const propsForContainerComponent = Object.assign({}, ownProps, getSystem())\n    const ori = component.prototype.mapStateToProps || (state => { return {state} })\n    return ori(state, propsForContainerComponent)\n  }\n\n  let wrappedWithSystem = SystemWrapper(getSystem, component, reduxStore)\n  let connected = connect( mapStateToProps )(wrappedWithSystem)\n  if(reduxStore)\n    return RootWrapper(reduxStore, connected)\n  return connected\n}\n\nconst handleProps = (getSystem, mapping, props, oldProps) => {\n  for (let prop in mapping) {\n    let fn = mapping[prop]\n    if(typeof fn === \"function\")\n      fn(props[prop], oldProps[prop], getSystem())\n  }\n}\n\nexport const makeMappedContainer = (getSystem, getStore, memGetComponent, getComponents, componentName, mapping) => {\n\n  return class extends Component {\n\n    constructor(props, context) {\n      super(props, context)\n      handleProps(getSystem, mapping, props, {})\n    }\n\n    componentWillReceiveProps(nextProps) {\n      handleProps(getSystem, mapping, nextProps, this.props)\n    }\n\n    render() {\n      let cleanProps = omit(this.props, mapping ? Object.keys(mapping) : [])\n      let Comp = memGetComponent(componentName, \"root\")\n      return <Comp {...cleanProps}/>\n    }\n\n  }\n\n}\n\nexport const render = (getSystem, getStore, getComponent, getComponents, domNode) => {\n  let App = (getComponent(getSystem, getStore, getComponents, \"App\", \"root\"))\n  ReactDOM.render(( <App/> ), domNode)\n}\n\n// Render try/catch wrapper\nconst createClass = component => class extends Component {\n  render() {\n    return component(this.props)\n  }\n}\n\nconst Fallback = ({ \n  name // eslint-disable-line react/prop-types\n}) => <div className=\"fallback\">😱 <i>Could not render { name === \"t\" ? \"this component\" : name }, see the console.</i></div>\n\nconst wrapRender = (component) => {\n  const isStateless = component => !(component.prototype && component.prototype.isReactComponent)\n\n  const target = isStateless(component) ? createClass(component) : component\n\n  const ori = target.prototype.render\n\n  target.prototype.render = function render(...args) {\n    try {\n      return ori.apply(this, args)\n    } catch (error) {\n      console.error(error) // eslint-disable-line no-console\n      return <Fallback error={error} name={target.name} />\n    }\n  }\n\n  return target\n}\n\nexport const getComponent = (getSystem, getStore, getComponents, componentName, container, config = {}) => {\n\n  if(typeof componentName !== \"string\")\n    throw new TypeError(\"Need a string, to fetch a component. Was given a \" + typeof componentName)\n\n    // getComponent has a config object as a third, optional parameter\n    // using the config object requires the presence of the second parameter, container\n    // e.g. getComponent(\"JsonSchema_string_whatever\", false, { failSilently: true })\n  let component = getComponents(componentName)\n\n  if(!component) {\n    if (!config.failSilently) {\n      getSystem().log.warn(\"Could not find component:\", componentName)\n    }\n    return null\n  }\n\n  if(!container)\n    return wrapRender(component)\n\n  if(container === \"root\")\n    return makeContainer(getSystem, component, getStore())\n\n  // container == truthy\n  return makeContainer(getSystem, wrapRender(component))\n}\n","import * as rootInjects from \"./root-injects\"\nimport { memoize } from \"core/utils\"\n\nexport default function({getComponents, getStore, getSystem}) {\n\n  let { getComponent, render, makeMappedContainer } = rootInjects\n\n  // getComponent should be passed into makeMappedContainer, _already_ memoized... otherwise we have a big performance hit ( think, really big )\n  const memGetComponent = memoize(getComponent.bind(null, getSystem, getStore, getComponents))\n  const memMakeMappedContainer = memoize(makeMappedContainer.bind(null, getSystem, getStore, memGetComponent, getComponents))\n\n  return {\n    rootInjects: {\n      getComponent: memGetComponent,\n      makeMappedContainer: memMakeMappedContainer,\n      render: render.bind(null, getSystem, getStore, getComponent, getComponents),\n    }\n  }\n}\n","import * as fn from \"./fn\"\n\nexport default function () {\n  return { fn }\n}\n","export default function ({configs}) {\n\n  const levels = {\n    \"debug\": 0,\n    \"info\": 1,\n    \"log\": 2,\n    \"warn\": 3,\n    \"error\": 4\n  }\n\n  const getLevel = (level) => levels[level] || -1\n\n  let { logLevel } = configs\n  let logLevelInt = getLevel(logLevel)\n\n  function log(level, ...args) {\n    if(getLevel(level) >= logLevelInt)\n    // eslint-disable-next-line no-console\n      console[level](...args)\n  }\n\n  log.warn = log.bind(null, \"warn\")\n  log.error = log.bind(null, \"error\")\n  log.info = log.bind(null, \"info\")\n  log.debug = log.bind(null, \"debug\")\n\n  return { rootInjects: { log } }\n}\n","export const loaded = (ori, system) => (...args) => {\n  ori(...args)\n  const value = system.getConfigs().withCredentials\n  \n  if(value !== undefined) {\n    system.fn.fetch.withCredentials = typeof value === \"string\" ? (value === \"true\") : !!value\n  }\n}\n","import resolve from \"swagger-client/es/resolver\"\nimport { execute, buildRequest } from \"swagger-client/es/execute\"\nimport Http, { makeHttp, serializeRes } from \"swagger-client/es/http\"\nimport resolveSubtree from \"swagger-client/es/subtree-resolver\"\nimport { opId } from \"swagger-client/es/helpers\"\nimport * as configsWrapActions from \"./configs-wrap-actions\"\n\nexport default function({ configs, getConfigs }) {\n  return {\n    fn: {\n      fetch: makeHttp(Http, configs.preFetch, configs.postFetch),\n      buildRequest,\n      execute,\n      resolve,\n      resolveSubtree: (obj, path, opts, ...rest) => {\n        if(opts === undefined) {\n          const freshConfigs = getConfigs()\n          opts = {\n            modelPropertyMacro: freshConfigs.modelPropertyMacro,\n            parameterMacro: freshConfigs.parameterMacro,\n            requestInterceptor: freshConfigs.requestInterceptor,\n            responseInterceptor: freshConfigs.responseInterceptor\n          }\n        }\n\n        return resolveSubtree(obj, path, opts, ...rest)\n      },\n      serializeRes,\n      opId\n    },\n    statePlugins: {\n      configs: {\n        wrapActions: configsWrapActions\n      }\n    },\n  }\n}\n","import parseUrl from \"url-parse\"\nimport win from \"core/window\"\nimport { btoa, buildFormData } from \"core/utils\"\n\nexport const SHOW_AUTH_POPUP = \"show_popup\"\nexport const AUTHORIZE = \"authorize\"\nexport const LOGOUT = \"logout\"\nexport const PRE_AUTHORIZE_OAUTH2 = \"pre_authorize_oauth2\"\nexport const AUTHORIZE_OAUTH2 = \"authorize_oauth2\"\nexport const VALIDATE = \"validate\"\nexport const CONFIGURE_AUTH = \"configure_auth\"\nexport const RESTORE_AUTHORIZATION = \"restore_authorization\"\n\nconst scopeSeparator = \" \"\n\nexport function showDefinitions(payload) {\n  return {\n    type: SHOW_AUTH_POPUP,\n    payload: payload\n  }\n}\n\nexport function authorize(payload) {\n  return {\n    type: AUTHORIZE,\n    payload: payload\n  }\n}\n\nexport const authorizeWithPersistOption = (payload) => ( { authActions } ) => {\n  authActions.authorize(payload)\n  authActions.persistAuthorizationIfNeeded()  \n}\n\nexport function logout(payload) {\n  return {\n    type: LOGOUT,\n    payload: payload\n  }\n}\n\nexport const logoutWithPersistOption = (payload) => ( { authActions } ) => {\n  authActions.logout(payload)\n  authActions.persistAuthorizationIfNeeded()  \n}\n\nexport const preAuthorizeImplicit = (payload) => ( { authActions, errActions } ) => {\n  let { auth , token, isValid } = payload\n  let { schema, name } = auth\n  let flow = schema.get(\"flow\")\n\n  // remove oauth2 property from window after redirect from authentication\n  delete win.swaggerUIRedirectOauth2\n\n  if ( flow !== \"accessCode\" && !isValid ) {\n    errActions.newAuthErr( {\n      authId: name,\n      source: \"auth\",\n      level: \"warning\",\n      message: \"Authorization may be unsafe, passed state was changed in server Passed state wasn't returned from auth server\"\n    })\n  }\n\n  if ( token.error ) {\n    errActions.newAuthErr({\n      authId: name,\n      source: \"auth\",\n      level: \"error\",\n      message: JSON.stringify(token)\n    })\n    return\n  }\n\n  authActions.authorizeOauth2WithPersistOption({ auth, token })\n}\n\n\nexport function authorizeOauth2(payload) {\n  return {\n    type: AUTHORIZE_OAUTH2,\n    payload: payload\n  }\n}\n\n\nexport const authorizeOauth2WithPersistOption = (payload) => ( { authActions } ) => {\n  authActions.authorizeOauth2(payload)\n  authActions.persistAuthorizationIfNeeded()  \n}\n\nexport const authorizePassword = ( auth ) => ( { authActions } ) => {\n  let { schema, name, username, password, passwordType, clientId, clientSecret } = auth\n  let form = {\n    grant_type: \"password\",\n    scope: auth.scopes.join(scopeSeparator),\n    username,\n    password\n  }\n  let query = {}\n  let headers = {}\n\n  switch (passwordType) {\n    case \"request-body\":\n      setClientIdAndSecret(form, clientId, clientSecret)\n      break\n\n    case \"basic\":\n      headers.Authorization = \"Basic \" + btoa(clientId + \":\" + clientSecret)\n      break\n    default:\n      console.warn(`Warning: invalid passwordType ${passwordType} was passed, not including client id and secret`)\n  }\n\n  return authActions.authorizeRequest({ body: buildFormData(form), url: schema.get(\"tokenUrl\"), name, headers, query, auth})\n}\n\nfunction setClientIdAndSecret(target, clientId, clientSecret) {\n  if ( clientId ) {\n    Object.assign(target, {client_id: clientId})\n  }\n\n  if ( clientSecret ) {\n    Object.assign(target, {client_secret: clientSecret})\n  }\n}\n\nexport const authorizeApplication = ( auth ) => ( { authActions } ) => {\n  let { schema, scopes, name, clientId, clientSecret } = auth\n  let headers = {\n    Authorization: \"Basic \" + btoa(clientId + \":\" + clientSecret)\n  }\n  let form = {\n    grant_type: \"client_credentials\",\n    scope: scopes.join(scopeSeparator)\n  }\n\n  return authActions.authorizeRequest({body: buildFormData(form), name, url: schema.get(\"tokenUrl\"), auth, headers })\n}\n\nexport const authorizeAccessCodeWithFormParams = ( { auth, redirectUrl } ) => ( { authActions } ) => {\n  let { schema, name, clientId, clientSecret, codeVerifier } = auth\n  let form = {\n    grant_type: \"authorization_code\",\n    code: auth.code,\n    client_id: clientId,\n    client_secret: clientSecret,\n    redirect_uri: redirectUrl,\n    code_verifier: codeVerifier\n  }\n\n  return authActions.authorizeRequest({body: buildFormData(form), name, url: schema.get(\"tokenUrl\"), auth})\n}\n\nexport const authorizeAccessCodeWithBasicAuthentication = ( { auth, redirectUrl } ) => ( { authActions } ) => {\n  let { schema, name, clientId, clientSecret } = auth\n  let headers = {\n    Authorization: \"Basic \" + btoa(clientId + \":\" + clientSecret)\n  }\n  let form = {\n    grant_type: \"authorization_code\",\n    code: auth.code,\n    client_id: clientId,\n    redirect_uri: redirectUrl\n  }\n\n  return authActions.authorizeRequest({body: buildFormData(form), name, url: schema.get(\"tokenUrl\"), auth, headers})\n}\n\nexport const authorizeRequest = ( data ) => ( { fn, getConfigs, authActions, errActions, oas3Selectors, specSelectors, authSelectors } ) => {\n  let { body, query={}, headers={}, name, url, auth } = data\n\n  let { additionalQueryStringParams } = authSelectors.getConfigs() || {}\n\n  let parsedUrl\n\n  if (specSelectors.isOAS3()) {\n    const server = oas3Selectors.selectedServer()\n    parsedUrl = parseUrl(url, oas3Selectors.serverEffectiveValue({ server }), true)\n  } else {\n    parsedUrl = parseUrl(url, specSelectors.url(), true)\n  }\n\n  if(typeof additionalQueryStringParams === \"object\") {\n    parsedUrl.query = Object.assign({}, parsedUrl.query, additionalQueryStringParams)\n  }\n\n  const fetchUrl = parsedUrl.toString()\n\n  let _headers = Object.assign({\n    \"Accept\":\"application/json, text/plain, */*\",\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"X-Requested-With\": \"XMLHttpRequest\"\n  }, headers)\n\n  fn.fetch({\n    url: fetchUrl,\n    method: \"post\",\n    headers: _headers,\n    query: query,\n    body: body,\n    requestInterceptor: getConfigs().requestInterceptor,\n    responseInterceptor: getConfigs().responseInterceptor\n  })\n  .then(function (response) {\n    let token = JSON.parse(response.data)\n    let error = token && ( token.error || \"\" )\n    let parseError = token && ( token.parseError || \"\" )\n\n    if ( !response.ok ) {\n      errActions.newAuthErr( {\n        authId: name,\n        level: \"error\",\n        source: \"auth\",\n        message: response.statusText\n      } )\n      return\n    }\n\n    if ( error || parseError ) {\n      errActions.newAuthErr({\n        authId: name,\n        level: \"error\",\n        source: \"auth\",\n        message: JSON.stringify(token)\n      })\n      return\n    }\n\n    authActions.authorizeOauth2WithPersistOption({ auth, token})\n  })\n  .catch(e => {\n    let err = new Error(e)\n    let message = err.message\n    // swagger-js wraps the response (if available) into the e.response property;\n    // investigate to check whether there are more details on why the authorization\n    // request failed (according to RFC 6479).\n    // See also https://github.com/swagger-api/swagger-ui/issues/4048\n    if (e.response && e.response.data) {\n      const errData = e.response.data\n      try {\n        const jsonResponse = typeof errData === \"string\" ? JSON.parse(errData) : errData\n        if (jsonResponse.error)\n          message += `, error: ${jsonResponse.error}`\n        if (jsonResponse.error_description)\n          message += `, description: ${jsonResponse.error_description}`\n      } catch (jsonError) {\n        // Ignore\n      }\n    }\n    errActions.newAuthErr( {\n      authId: name,\n      level: \"error\",\n      source: \"auth\",\n      message: message\n    } )\n  })\n}\n\nexport function configureAuth(payload) {\n  return {\n    type: CONFIGURE_AUTH,\n    payload: payload\n  }\n}\n\nexport function restoreAuthorization(payload) {\n  return {\n    type: RESTORE_AUTHORIZATION,\n    payload: payload\n  }\n}\n\nexport const persistAuthorizationIfNeeded = () => ( { authSelectors, getConfigs } ) => {\n  const configs = getConfigs()\n  if (configs.persistAuthorization)\n  {\n    const authorized = authSelectors.authorized()\n    localStorage.setItem(\"authorized\", JSON.stringify(authorized.toJS()))\n  }\n}\n","import { fromJS, Map } from \"immutable\"\nimport { btoa, isFunc } from \"core/utils\"\n\nimport {\n  SHOW_AUTH_POPUP,\n  AUTHORIZE,\n  AUTHORIZE_OAUTH2,\n  LOGOUT,\n  CONFIGURE_AUTH,\n  RESTORE_AUTHORIZATION\n} from \"./actions\"\n\nexport default {\n  [SHOW_AUTH_POPUP]: (state, { payload } ) =>{\n    return state.set( \"showDefinitions\", payload )\n  },\n\n  [AUTHORIZE]: (state, { payload } ) =>{\n    let securities = fromJS(payload)\n    let map = state.get(\"authorized\") || Map()\n\n    // refactor withMutations\n    securities.entrySeq().forEach( ([ key, security ]) => {\n      if (!isFunc(security.getIn)) {\n        return state.set(\"authorized\", map)\n      }\n      let type = security.getIn([\"schema\", \"type\"])\n\n      if ( type === \"apiKey\" || type === \"http\" ) {\n        map = map.set(key, security)\n      } else if ( type === \"basic\" ) {\n        let username = security.getIn([\"value\", \"username\"])\n        let password = security.getIn([\"value\", \"password\"])\n\n        map = map.setIn([key, \"value\"], {\n          username: username,\n          header: \"Basic \" + btoa(username + \":\" + password)\n        })\n\n        map = map.setIn([key, \"schema\"], security.get(\"schema\"))\n      }\n    })\n\n    return state.set( \"authorized\", map )\n  },\n\n  [AUTHORIZE_OAUTH2]: (state, { payload } ) =>{\n    let { auth, token } = payload\n    let parsedAuth\n\n    auth.token = Object.assign({}, token)\n    parsedAuth = fromJS(auth)\n\n    let map = state.get(\"authorized\") || Map()\n    map = map.set(parsedAuth.get(\"name\"), parsedAuth)\n    \n    return state.set( \"authorized\", map )\n  },\n\n  [LOGOUT]: (state, { payload } ) =>{\n    let result = state.get(\"authorized\").withMutations((authorized) => {\n        payload.forEach((auth) => {\n          authorized.delete(auth)\n        })\n      })\n\n    return state.set(\"authorized\", result)\n  },\n\n  [CONFIGURE_AUTH]: (state, { payload } ) =>{\n    return state.set(\"configs\", payload)\n  },\n\n  [RESTORE_AUTHORIZATION]: (state, { payload } ) =>{    \n    return state.set(\"authorized\", fromJS(payload.authorized))\n  },\n}\n","import { createSelector } from \"reselect\"\nimport { List, Map } from \"immutable\"\n\nconst state = state => state\n\nexport const shownDefinitions = createSelector(\n    state,\n    auth => auth.get( \"showDefinitions\" )\n)\n\nexport const definitionsToAuthorize = createSelector(\n    state,\n    () => ( { specSelectors } ) => {\n      let definitions = specSelectors.securityDefinitions() || Map({})\n      let list = List()\n\n      //todo refactor\n      definitions.entrySeq().forEach( ([ key, val ]) => {\n        let map = Map()\n\n        map = map.set(key, val)\n        list = list.push(map)\n      })\n\n      return list\n    }\n)\n\n\nexport const getDefinitionsByNames = ( state, securities ) => ( { specSelectors } ) => {\n  console.warn(\"WARNING: getDefinitionsByNames is deprecated and will be removed in the next major version.\")\n  let securityDefinitions = specSelectors.securityDefinitions()\n  let result = List()\n\n  securities.valueSeq().forEach( (names) => {\n    let map = Map()\n    names.entrySeq().forEach( ([name, scopes]) => {\n      let definition = securityDefinitions.get(name)\n      let allowedScopes\n\n      if ( definition.get(\"type\") === \"oauth2\" && scopes.size ) {\n        allowedScopes = definition.get(\"scopes\")\n\n        allowedScopes.keySeq().forEach( (key) => {\n          if ( !scopes.contains(key) ) {\n            allowedScopes = allowedScopes.delete(key)\n          }\n        })\n\n        definition = definition.set(\"allowedScopes\", allowedScopes)\n      }\n\n      map = map.set(name, definition)\n    })\n\n    result = result.push(map)\n  })\n\n  return result\n}\n\nexport const definitionsForRequirements = (state, securities = List()) => ({ authSelectors }) => {\n  const allDefinitions = authSelectors.definitionsToAuthorize() || List()\n  return allDefinitions.filter((def) => {\n    return securities.some(sec => sec.get(def.keySeq().first()))\n  })\n}\n\nexport const authorized = createSelector(\n    state,\n    auth => auth.get(\"authorized\") || Map()\n)\n\n\nexport const isAuthorized = ( state, securities ) => ( { authSelectors } ) => {\n  let authorized = authSelectors.authorized()\n\n  if(!List.isList(securities)) {\n    return null\n  }\n\n  return !!securities.toJS().filter( ( security ) => {\n      let isAuthorized = true\n\n      return Object.keys(security).map((key) => {\n        return !isAuthorized || !!authorized.get(key)\n      }).indexOf(false) === -1\n    }).length\n}\n\nexport const getConfigs = createSelector(\n    state,\n    auth => auth.get( \"configs\" )\n)\n","// Add security to the final `execute` call ( via `extras` )\nexport const execute = ( oriAction, { authSelectors, specSelectors }) => ({ path, method, operation, extras }) => {\n  let securities = {\n    authorized: authSelectors.authorized() && authSelectors.authorized().toJS(),\n    definitions: specSelectors.securityDefinitions() && specSelectors.securityDefinitions().toJS(),\n    specSecurity:  specSelectors.security() && specSelectors.security().toJS()\n  }\n\n  return oriAction({ path, method, operation, securities, ...extras })\n}\n","import reducers from \"./reducers\"\nimport * as actions from \"./actions\"\nimport * as selectors from \"./selectors\"\nimport * as specWrapActionReplacements from \"./spec-wrap-actions\"\n\nexport default function() {\n  return {\n    afterLoad(system) {\n      this.rootInjects = this.rootInjects || {}\n      this.rootInjects.initOAuth = system.authActions.configureAuth\n      this.rootInjects.preauthorizeApiKey = preauthorizeApiKey.bind(null, system)\n      this.rootInjects.preauthorizeBasic = preauthorizeBasic.bind(null, system)\n    },\n    statePlugins: {\n      auth: {\n        reducers,\n        actions,\n        selectors\n      },\n      spec: {\n        wrapActions: specWrapActionReplacements\n      }\n    }\n  }\n}\n\nexport function preauthorizeBasic(system, key, username, password) {\n  const {\n    authActions: { authorize },\n    specSelectors: { specJson, isOAS3 }\n  } = system\n\n  const definitionBase = isOAS3() ? [\"components\", \"securitySchemes\"] : [\"securityDefinitions\"]\n\n  const schema = specJson().getIn([...definitionBase, key])\n\n  if(!schema) {\n    return null\n  }\n\n  return authorize({\n    [key]: {\n      value: {\n        username,\n        password,\n      },\n      schema: schema.toJS()\n    }\n  })\n}\n\nexport function preauthorizeApiKey(system, key, value) {\n  const {\n    authActions: { authorize },\n    specSelectors: { specJson, isOAS3 }\n  } = system\n\n  const definitionBase = isOAS3() ? [\"components\", \"securitySchemes\"] : [\"securityDefinitions\"]\n\n  const schema = specJson().getIn([...definitionBase, key])\n\n  if(!schema) {\n    return null\n  }\n\n  return authorize({\n    [key]: {\n      value,\n      schema: schema.toJS()\n    }\n  })\n}\n","import { shallowEqualKeys } from \"core/utils\"\n\nexport default function() {\n  return {\n    fn: { shallowEqualKeys }\n  }\n}\n","/* global Promise */\n\nimport { createSelector } from \"reselect\"\nimport { Map } from \"immutable\"\nimport win from \"../window\"\n\nexport default function downloadUrlPlugin (toolbox) {\n  let { fn } = toolbox\n\n  const actions = {\n    download: (url)=> ({ errActions, specSelectors, specActions, getConfigs }) => {\n      let { fetch } = fn\n      const config = getConfigs()\n      url = url || specSelectors.url()\n      specActions.updateLoadingStatus(\"loading\")\n      errActions.clear({source: \"fetch\"})\n      fetch({\n        url,\n        loadSpec: true,\n        requestInterceptor: config.requestInterceptor || (a => a),\n        responseInterceptor: config.responseInterceptor || (a => a),\n        credentials: \"same-origin\",\n        headers: {\n          \"Accept\": \"application/json,*/*\"\n        }\n      }).then(next,next)\n\n      function next(res) {\n        if(res instanceof Error || res.status >= 400) {\n          specActions.updateLoadingStatus(\"failed\")\n          errActions.newThrownErr(Object.assign( new Error((res.message || res.statusText) + \" \" + url), {source: \"fetch\"}))\n          // Check if the failure was possibly due to CORS or mixed content\n          if (!res.status && res instanceof Error) checkPossibleFailReasons()\n          return\n        }\n        specActions.updateLoadingStatus(\"success\")\n        specActions.updateSpec(res.text)\n        if(specSelectors.url() !== url) {\n          specActions.updateUrl(url)\n        }\n      }\n\n      function checkPossibleFailReasons() {\n        try {\n          let specUrl\n\n          if(\"URL\" in win ) {\n            specUrl = new URL(url)\n          } else {\n            // legacy browser, use <a href> to parse the URL\n            specUrl = document.createElement(\"a\")\n            specUrl.href = url\n          }\n\n          if(specUrl.protocol !== \"https:\" && win.location.protocol === \"https:\") {\n            const error = Object.assign(\n              new Error(`Possible mixed-content issue? The page was loaded over https:// but a ${specUrl.protocol}// URL was specified. Check that you are not attempting to load mixed content.`),\n              {source: \"fetch\"}\n            )\n            errActions.newThrownErr(error)\n            return\n          }\n          if(specUrl.origin !== win.location.origin) {\n            const error = Object.assign(\n              new Error(`Possible cross-origin (CORS) issue? The URL origin (${specUrl.origin}) does not match the page (${win.location.origin}). Check the server returns the correct 'Access-Control-Allow-*' headers.`),\n              {source: \"fetch\"}\n            )\n            errActions.newThrownErr(error)\n          }\n        } catch (e) {\n          return\n        }\n      }\n\n    },\n\n    updateLoadingStatus: (status) => {\n      let enums = [null, \"loading\", \"failed\", \"success\", \"failedConfig\"]\n      if(enums.indexOf(status) === -1) {\n        console.error(`Error: ${status} is not one of ${JSON.stringify(enums)}`)\n      }\n\n      return {\n        type: \"spec_update_loading_status\",\n        payload: status\n      }\n    }\n  }\n\n  let reducers = {\n    \"spec_update_loading_status\": (state, action) => {\n      return (typeof action.payload === \"string\")\n        ? state.set(\"loadingStatus\", action.payload)\n        : state\n    }\n  }\n\n  let selectors = {\n    loadingStatus: createSelector(\n      state => {\n        return state || Map()\n      },\n      spec => spec.get(\"loadingStatus\") || null\n    )\n  }\n\n  return {\n    statePlugins: {\n      spec: { actions, reducers, selectors }\n    }\n  }\n}\n","import YAML from \"js-yaml\"\n\nexport const parseYamlConfig = (yaml, system) => {\n  try {\n    return YAML.safeLoad(yaml)\n  } catch(e) {\n    if (system) {\n      system.errActions.newThrownErr( new Error(e) )\n    }\n    return {}\n  }\n}\n","export const UPDATE_CONFIGS = \"configs_update\"\nexport const TOGGLE_CONFIGS = \"configs_toggle\"\n\n// Update the configs, with a merge ( not deep )\nexport function update(configName, configValue) {\n  return {\n    type: UPDATE_CONFIGS,\n    payload: {\n      [configName]: configValue\n    },\n  }\n}\n\n// Toggle's the config, by name\nexport function toggle(configName) {\n  return {\n    type: TOGGLE_CONFIGS,\n    payload: configName,\n  }\n}\n\n\n// Hook\nexport const loaded = () => ({getConfigs, authActions}) => {\n  // check if we should restore authorization data from localStorage\n  const configs = getConfigs()\n  if (configs.persistAuthorization)\n  { \n    const authorized = localStorage.getItem(\"authorized\")                \n    if(authorized)\n    {      \n      authActions.restoreAuthorization({      \n        authorized: JSON.parse(authorized)\n      })                \n    }\n  }\n}\n","import { parseYamlConfig } from \"./helpers\"\n\nexport const downloadConfig = (req) => (system) => {\n  const {fn: { fetch }} = system\n\n  return fetch(req)\n}\n\nexport const getConfigByUrl = (req, cb)=> ({ specActions }) => {\n  if (req) {\n    return specActions.downloadConfig(req).then(next, next)\n  }\n\n  function next(res) {\n    if (res instanceof Error || res.status >= 400) {\n      specActions.updateLoadingStatus(\"failedConfig\")\n      specActions.updateLoadingStatus(\"failedConfig\")\n      specActions.updateUrl(\"\")\n      console.error(res.statusText + \" \" + req.url)\n      cb(null)\n    } else {\n      cb(parseYamlConfig(res.text))\n    }\n  }\n}\n","// Just get the config value ( it can possibly be an immutable object)\nexport const get = (state, path) => {\n  return state.getIn(Array.isArray(path) ? path : [path])\n}\n","import { fromJS } from \"immutable\"\n\nimport {\n\tUPDATE_CONFIGS,\n\tTOGGLE_CONFIGS,\n} from \"./actions\"\n\nexport default {\n\n  [UPDATE_CONFIGS]: (state, action) => {\n    return state.merge(fromJS(action.payload))\n  },\n\n  [TOGGLE_CONFIGS]: (state, action) => {\n    const configName = action.payload\n    const oriVal = state.get(configName)\n    return state.set(configName, !oriVal)\n  },\n\n}\n","import yamlConfig from \"root/swagger-config.yaml\"\nimport { parseYamlConfig } from \"./helpers\"\nimport * as actions from \"./actions\"\nimport * as specActions from \"./spec-actions\"\nimport * as selectors from \"./selectors\"\nimport reducers from \"./reducers\"\n\nconst specSelectors = {\n  getLocalConfig: () => {\n    return parseYamlConfig(yamlConfig)\n  }\n}\n\n\nexport default function configsPlugin() {\n\n  return {\n    statePlugins: {\n      spec: {\n        actions: specActions,\n        selectors: specSelectors,\n      },\n      configs: {\n        reducers,\n        actions,\n        selectors,\n      }\n    }\n  }\n}\n","export const setHash = (value) => {\n  if(value) {\n    return history.pushState(null, null, `#${value}`)\n  } else {\n    return window.location.hash = \"\"\n  }\n}\n","import { setHash } from \"./helpers\"\nimport zenscroll from \"zenscroll\"\nimport { createDeepLinkPath } from \"core/utils\"\nimport Im, { fromJS } from \"immutable\"\n\nconst SCROLL_TO = \"layout_scroll_to\"\nconst CLEAR_SCROLL_TO = \"layout_clear_scroll\"\n\nexport const show = (ori, { getConfigs, layoutSelectors }) => (...args) => {\n  ori(...args)\n\n  if(!getConfigs().deepLinking) {\n    return\n  }\n\n  try {\n    let [tokenArray, shown] = args\n    //Coerce in to array\n    tokenArray = Array.isArray(tokenArray) ? tokenArray : [tokenArray]\n    // Convert into something we can put in the URL hash\n    // Or return empty, if we cannot\n    const urlHashArray = layoutSelectors.urlHashArrayFromIsShownKey(tokenArray) // Will convert\n\n    // No hash friendly list?\n    if(!urlHashArray.length)\n      return\n\n    const [type, assetName] = urlHashArray\n\n    if (!shown) {\n      return setHash(\"/\")\n    }\n\n    if (urlHashArray.length === 2) {\n      setHash(createDeepLinkPath(`/${encodeURIComponent(type)}/${encodeURIComponent(assetName)}`))\n    } else if (urlHashArray.length === 1) {\n      setHash(createDeepLinkPath(`/${encodeURIComponent(type)}`))\n    }\n\n  } catch (e) {\n    // This functionality is not mission critical, so if something goes wrong\n    // we'll just move on\n    console.error(e) // eslint-disable-line no-console\n  }\n}\n\nexport const scrollTo = (path) => {\n  return {\n    type: SCROLL_TO,\n    payload: Array.isArray(path) ? path : [path]\n  }\n}\n\nexport const parseDeepLinkHash = (rawHash) => ({ layoutActions, layoutSelectors, getConfigs }) => {\n\n  if(!getConfigs().deepLinking) {\n    return\n  }\n\n  if(rawHash) {\n    let hash = rawHash.slice(1) // # is first character\n\n\n    if(hash[0] === \"!\") {\n      // Parse UI 2.x shebangs\n      hash = hash.slice(1)\n    }\n\n    if(hash[0] === \"/\") {\n      // \"/pet/addPet\" => \"pet/addPet\"\n      // makes the split result cleaner\n      // also handles forgotten leading slash\n      hash = hash.slice(1)\n    }\n\n    const hashArray = hash.split(\"/\").map(val => (val || \"\"))\n\n    const isShownKey = layoutSelectors.isShownKeyFromUrlHashArray(hashArray)\n\n    const [type, tagId = \"\", maybeOperationId = \"\"] = isShownKey\n\n    if(type === \"operations\") {\n      // we're going to show an operation, so we need to expand the tag as well\n      const tagIsShownKey = layoutSelectors.isShownKeyFromUrlHashArray([tagId])\n\n      // If an `_` is present, trigger the legacy escaping behavior to be safe\n      // TODO: remove this in v4.0, it is deprecated\n      if(tagId.indexOf(\"_\") > -1) {\n        console.warn(\"Warning: escaping deep link whitespace with `_` will be unsupported in v4.0, use `%20` instead.\")\n        layoutActions.show(tagIsShownKey.map(val => val.replace(/_/g, \" \")), true)\n      }\n\n      layoutActions.show(tagIsShownKey, true)\n    }\n\n    // If an `_` is present, trigger the legacy escaping behavior to be safe\n    // TODO: remove this in v4.0, it is deprecated\n    if (tagId.indexOf(\"_\") > -1 || maybeOperationId.indexOf(\"_\") > -1) {\n      console.warn(\"Warning: escaping deep link whitespace with `_` will be unsupported in v4.0, use `%20` instead.\")\n      layoutActions.show(isShownKey.map(val => val.replace(/_/g, \" \")), true)\n    }\n\n    layoutActions.show(isShownKey, true)\n\n    // Scroll to the newly expanded entity\n    layoutActions.scrollTo(isShownKey)\n  }\n}\n\nexport const readyToScroll = (isShownKey, ref) => (system) => {\n  const scrollToKey = system.layoutSelectors.getScrollToKey()\n\n  if(Im.is(scrollToKey, fromJS(isShownKey))) {\n    system.layoutActions.scrollToElement(ref)\n    system.layoutActions.clearScrollTo()\n  }\n}\n\n// Scroll to \"ref\" (dom node) with the scrollbar on \"container\" or the nearest parent\nexport const scrollToElement = (ref, container) => (system) => {\n  try {\n    container = container || system.fn.getScrollParent(ref)\n    let myScroller = zenscroll.createScroller(container)\n    myScroller.to(ref)\n  } catch(e) {\n    console.error(e) // eslint-disable-line no-console\n  }\n}\n\nexport const clearScrollTo = () => {\n  return {\n    type: CLEAR_SCROLL_TO,\n  }\n}\n\n// From: https://stackoverflow.com/a/42543908/3933724\n// Modified to return html instead of body element as last resort\nfunction getScrollParent(element, includeHidden) {\n  const LAST_RESORT = document.documentElement\n  let style = getComputedStyle(element)\n  const excludeStaticParent = style.position === \"absolute\"\n  const overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/\n\n  if (style.position === \"fixed\")\n    return LAST_RESORT\n  for (let parent = element; (parent = parent.parentElement);) {\n    style = getComputedStyle(parent)\n    if (excludeStaticParent && style.position === \"static\") {\n      continue\n    }\n    if (overflowRegex.test(style.overflow + style.overflowY + style.overflowX))\n      return parent\n  }\n\n  return LAST_RESORT\n}\n\nexport default {\n  fn: {\n    getScrollParent,\n  },\n  statePlugins: {\n    layout: {\n      actions: {\n        scrollToElement,\n        scrollTo,\n        clearScrollTo,\n        readyToScroll,\n        parseDeepLinkHash\n      },\n      selectors: {\n        getScrollToKey(state) {\n          return state.get(\"scrollToKey\")\n        },\n        isShownKeyFromUrlHashArray(state, urlHashArray) {\n          const [tag, operationId] = urlHashArray\n          // We only put operations in the URL\n          if(operationId) {\n            return [\"operations\", tag, operationId]\n          } else if (tag) {\n            return [\"operations-tag\", tag]\n          }\n          return []\n        },\n        urlHashArrayFromIsShownKey(state, isShownKey) {\n          let [type, tag, operationId] = isShownKey\n          // We only put operations in the URL\n          if(type == \"operations\") {\n            return [tag, operationId]\n          } else if (type == \"operations-tag\") {\n            return [tag]\n          }\n          return []\n        },\n      },\n      reducers: {\n        [SCROLL_TO](state, action) {\n          return state.set(\"scrollToKey\", Im.fromJS(action.payload))\n        },\n        [CLEAR_SCROLL_TO](state) {\n          return state.delete(\"scrollToKey\")\n        }\n      },\n      wrapActions: {\n        show\n      }\n    }\n  }\n}\n","import React from \"react\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nconst Wrapper = (Ori, system) => class OperationWrapper extends React.Component {\n\n  static propTypes = {\n    operation: ImPropTypes.map.isRequired,\n  }\n\n  onLoad = (ref) => {\n    const { operation } = this.props\n    const { tag, operationId } = operation.toObject()\n    let { isShownKey } = operation.toObject()\n    isShownKey = isShownKey || [\"operations\", tag, operationId]\n    system.layoutActions.readyToScroll(isShownKey, ref)\n  }\n\n  render() {\n    return (\n      <span ref={this.onLoad}>\n        <Ori {...this.props} />\n      </span>\n    )\n  }\n}\n\nexport default Wrapper\n","import React from \"react\"\nimport { PropTypes } from \"prop-types\"\n\nconst Wrapper = (Ori, system) => class OperationTagWrapper extends React.Component {\n\n  static propTypes = {\n    tag: PropTypes.object.isRequired,\n  }\n\n  onLoad = (ref) => {\n    const { tag } = this.props\n    const isShownKey = [\"operations-tag\", tag]\n    system.layoutActions.readyToScroll(isShownKey, ref)\n  }\n\n  render() {\n    return (\n      <span ref={this.onLoad}>\n        <Ori {...this.props} />\n      </span>\n    )\n  }\n}\n\nexport default Wrapper\n","import layout from \"./layout\"\nimport OperationWrapper from \"./operation-wrapper\"\nimport OperationTagWrapper from \"./operation-tag-wrapper\"\n\nexport default function() {\n  return [layout, {\n    statePlugins: {\n      configs: {\n        wrapActions: {\n          loaded: (ori, system) => (...args) => {\n            ori(...args)\n            // location.hash was an UTF-16 String, here is required UTF-8\n            const hash = decodeURIComponent(window.location.hash)\n            system.layoutActions.parseDeepLinkHash(hash)\n          }\n        }\n      }\n    },\n    wrapComponents: {\n      operation: OperationWrapper,\n      OperationTag: OperationTagWrapper,\n    },\n  }]\n}\n","export default function(taggedOps, phrase) {\n  return taggedOps.filter((tagObj, tag) => tag.indexOf(phrase) !== -1)\n}\n","import opsFilter from \"./opsFilter\"\n\nexport default function() {\n  return {\n    fn: {\n      opsFilter\n    }\n  }\n}\n","let engaged = false\n\nexport default function() {\n\n  return {\n    statePlugins: {\n      spec: {\n        wrapActions: {\n          updateSpec: (ori) => (...args) => {\n            engaged = true\n            return ori(...args)\n          },\n          updateJsonSpec: (ori, system) => (...args) => {\n            const cb = system.getConfigs().onComplete\n            if(engaged && typeof cb === \"function\") {\n              // call `onComplete` on next tick, which allows React to\n              // reconcile the DOM before we notify the user\n              setTimeout(cb, 0)\n              engaged = false\n            }\n\n            return ori(...args)\n          }\n        }\n      }\n    }\n  }\n}\n","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { opId } from \"swagger-client/es/helpers\"\nimport { Iterable, fromJS, Map } from \"immutable\"\n\nexport default class OperationContainer extends PureComponent {\n  constructor(props, context) {\n    super(props, context)\n    this.state = {\n      tryItOutEnabled: false,\n      executeInProgress: false\n    }\n  }\n\n  static propTypes = {\n    op: PropTypes.instanceOf(Iterable).isRequired,\n    tag: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n    operationId: PropTypes.string.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    isShown: PropTypes.bool.isRequired,\n    jumpToKey: PropTypes.string.isRequired,\n    allowTryItOut: PropTypes.bool,\n    displayOperationId: PropTypes.bool,\n    isAuthorized: PropTypes.bool,\n    displayRequestDuration: PropTypes.bool,\n    response: PropTypes.instanceOf(Iterable),\n    request: PropTypes.instanceOf(Iterable),\n    security: PropTypes.instanceOf(Iterable),\n    isDeepLinkingEnabled: PropTypes.bool.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    authActions: PropTypes.object,\n    oas3Actions: PropTypes.object,\n    oas3Selectors: PropTypes.object,\n    authSelectors: PropTypes.object,\n    specActions: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    layoutActions: PropTypes.object.isRequired,\n    layoutSelectors: PropTypes.object.isRequired,\n    fn: PropTypes.object.isRequired,\n    getConfigs: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    showSummary: true,\n    response: null,\n    allowTryItOut: true,\n    displayOperationId: false,\n    displayRequestDuration: false\n  }\n\n  mapStateToProps(nextState, props) {\n    const { op, layoutSelectors, getConfigs } = props\n    const { docExpansion, deepLinking, displayOperationId, displayRequestDuration, supportedSubmitMethods } = getConfigs()\n    const showSummary = layoutSelectors.showSummary()\n    const operationId = op.getIn([\"operation\", \"__originalOperationId\"]) || op.getIn([\"operation\", \"operationId\"]) || opId(op.get(\"operation\"), props.path, props.method) || op.get(\"id\")\n    const isShownKey = [\"operations\", props.tag, operationId]\n    const isDeepLinkingEnabled = deepLinking && deepLinking !== \"false\"\n    const allowTryItOut = supportedSubmitMethods.indexOf(props.method) >= 0 && (typeof props.allowTryItOut === \"undefined\" ?\n      props.specSelectors.allowTryItOutFor(props.path, props.method) : props.allowTryItOut)\n    const security = op.getIn([\"operation\", \"security\"]) || props.specSelectors.security()\n\n    return {\n      operationId,\n      isDeepLinkingEnabled,\n      showSummary,\n      displayOperationId,\n      displayRequestDuration,\n      allowTryItOut,\n      security,\n      isAuthorized: props.authSelectors.isAuthorized(security),\n      isShown: layoutSelectors.isShown(isShownKey, docExpansion === \"full\" ),\n      jumpToKey: `paths.${props.path}.${props.method}`,\n      response: props.specSelectors.responseFor(props.path, props.method),\n      request: props.specSelectors.requestFor(props.path, props.method)\n    }\n  }\n\n  componentDidMount() {\n    const { isShown } = this.props\n    const resolvedSubtree = this.getResolvedSubtree()\n\n    if(isShown && resolvedSubtree === undefined) {\n      this.requestResolvedSubtree()\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { response, isShown } = nextProps\n    const resolvedSubtree = this.getResolvedSubtree()\n\n    if(response !== this.props.response) {\n      this.setState({ executeInProgress: false })\n    }\n\n    if(isShown && resolvedSubtree === undefined) {\n      this.requestResolvedSubtree()\n    }\n  }\n\n  toggleShown =() => {\n    let { layoutActions, tag, operationId, isShown } = this.props\n    const resolvedSubtree = this.getResolvedSubtree()\n    if(!isShown && resolvedSubtree === undefined) {\n      // transitioning from collapsed to expanded\n      this.requestResolvedSubtree()\n    }\n    layoutActions.show([\"operations\", tag, operationId], !isShown)\n  }\n\n  onCancelClick=() => {\n    this.setState({tryItOutEnabled: !this.state.tryItOutEnabled})\n  }\n\n  onTryoutClick =() => {\n    this.setState({tryItOutEnabled: !this.state.tryItOutEnabled})\n  }\n\n  onExecute = () => {\n    this.setState({ executeInProgress: true })\n  }\n\n  getResolvedSubtree = () => {\n    const {\n      specSelectors,\n      path,\n      method,\n      specPath\n    } = this.props\n\n    if(specPath) {\n      return specSelectors.specResolvedSubtree(specPath.toJS())\n    }\n\n    return specSelectors.specResolvedSubtree([\"paths\", path, method])\n  }\n\n  requestResolvedSubtree = () => {\n    const {\n      specActions,\n      path,\n      method,\n      specPath\n    } = this.props\n\n\n    if(specPath) {\n      return specActions.requestResolvedSubtree(specPath.toJS())\n    }\n\n    return specActions.requestResolvedSubtree([\"paths\", path, method])\n  }\n\n  render() {\n    let {\n      op: unresolvedOp,\n      tag,\n      path,\n      method,\n      security,\n      isAuthorized,\n      operationId,\n      showSummary,\n      isShown,\n      jumpToKey,\n      allowTryItOut,\n      response,\n      request,\n      displayOperationId,\n      displayRequestDuration,\n      isDeepLinkingEnabled,\n      specPath,\n      specSelectors,\n      specActions,\n      getComponent,\n      getConfigs,\n      layoutSelectors,\n      layoutActions,\n      authActions,\n      authSelectors,\n      oas3Actions,\n      oas3Selectors,\n      fn\n    } = this.props\n\n    const Operation = getComponent( \"operation\" )\n\n    const resolvedSubtree = this.getResolvedSubtree() || Map()\n\n    const operationProps = fromJS({\n      op: resolvedSubtree,\n      tag,\n      path,\n      summary: unresolvedOp.getIn([\"operation\", \"summary\"]) || \"\",\n      deprecated: resolvedSubtree.get(\"deprecated\") || unresolvedOp.getIn([\"operation\", \"deprecated\"]) || false,\n      method,\n      security,\n      isAuthorized,\n      operationId,\n      originalOperationId: resolvedSubtree.getIn([\"operation\", \"__originalOperationId\"]),\n      showSummary,\n      isShown,\n      jumpToKey,\n      allowTryItOut,\n      request,\n      displayOperationId,\n      displayRequestDuration,\n      isDeepLinkingEnabled,\n      executeInProgress: this.state.executeInProgress,\n      tryItOutEnabled: this.state.tryItOutEnabled\n    })\n\n    return (\n      <Operation\n        operation={operationProps}\n        response={response}\n        request={request}\n        isShown={isShown}\n\n        toggleShown={this.toggleShown}\n        onTryoutClick={this.onTryoutClick}\n        onCancelClick={this.onCancelClick}\n        onExecute={this.onExecute}\n        specPath={specPath}\n\n        specActions={ specActions }\n        specSelectors={ specSelectors }\n        oas3Actions={oas3Actions}\n        oas3Selectors={oas3Selectors}\n        layoutActions={ layoutActions }\n        layoutSelectors={ layoutSelectors }\n        authActions={ authActions }\n        authSelectors={ authSelectors }\n        getComponent={ getComponent }\n        getConfigs={ getConfigs }\n        fn={fn}\n      />\n    )\n  }\n\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class App extends React.Component {\n\n  getLayout() {\n    let { getComponent, layoutSelectors } = this.props\n    const layoutName = layoutSelectors.current()\n    const Component = getComponent(layoutName, true)\n    return Component ? Component : ()=> <h1> No layout defined for &quot;{layoutName}&quot; </h1>\n  }\n\n  render() {\n    const Layout = this.getLayout()\n\n    return (\n      <Layout/>\n    )\n  }\n}\n\nApp.propTypes = {\n  getComponent: PropTypes.func.isRequired,\n  layoutSelectors: PropTypes.object.isRequired,\n}\n\nApp.defaultProps = {\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class AuthorizationPopup extends React.Component {\n  close =() => {\n    let { authActions } = this.props\n\n    authActions.showDefinitions(false)\n  }\n\n  render() {\n    let { authSelectors, authActions, getComponent, errSelectors, specSelectors, fn: { AST = {} } } = this.props\n    let definitions = authSelectors.shownDefinitions()\n    const Auths = getComponent(\"auths\")\n\n    return (\n      <div className=\"dialog-ux\">\n        <div className=\"backdrop-ux\"></div>\n        <div className=\"modal-ux\">\n          <div className=\"modal-dialog-ux\">\n            <div className=\"modal-ux-inner\">\n              <div className=\"modal-ux-header\">\n                <h3>Available authorizations</h3>\n                <button type=\"button\" className=\"close-modal\" onClick={ this.close }>\n                  <svg width=\"20\" height=\"20\">\n                    <use href=\"#close\" xlinkHref=\"#close\" />\n                  </svg>\n                </button>\n              </div>\n              <div className=\"modal-ux-content\">\n\n                {\n                  definitions.valueSeq().map(( definition, key ) => {\n                    return <Auths key={ key }\n                                  AST={AST}\n                                  definitions={ definition }\n                                  getComponent={ getComponent }\n                                  errSelectors={ errSelectors }\n                                  authSelectors={ authSelectors }\n                                  authActions={ authActions }\n                                  specSelectors={ specSelectors }/>\n                  })\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  static propTypes = {\n    fn: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    authSelectors: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    errSelectors: PropTypes.object.isRequired,\n    authActions: PropTypes.object.isRequired,\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class AuthorizeBtn extends React.Component {\n  static propTypes = {\n    onClick: PropTypes.func,\n    isAuthorized: PropTypes.bool,\n    showPopup: PropTypes.bool,\n    getComponent: PropTypes.func.isRequired\n  }\n\n  render() {\n    let { isAuthorized, showPopup, onClick, getComponent } = this.props\n\n    //must be moved out of button component\n    const AuthorizationPopup = getComponent(\"authorizationPopup\", true)\n\n    return (\n      <div className=\"auth-wrapper\">\n        <button className={isAuthorized ? \"btn authorize locked\" : \"btn authorize unlocked\"} onClick={onClick}>\n          <span>Authorize</span>\n          <svg width=\"20\" height=\"20\">\n            <use href={ isAuthorized ? \"#locked\" : \"#unlocked\" } xlinkHref={ isAuthorized ? \"#locked\" : \"#unlocked\" } />\n          </svg>\n        </button>\n      { showPopup && <AuthorizationPopup /> }\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class AuthorizeBtnContainer extends React.Component {\n\n  static propTypes = {\n    specActions: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    authActions: PropTypes.object.isRequired,\n    authSelectors: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired\n  }\n\n  render () {\n    const { authActions, authSelectors, specSelectors, getComponent} = this.props\n    \n    const securityDefinitions = specSelectors.securityDefinitions()\n    const authorizableDefinitions = authSelectors.definitionsToAuthorize()\n\n    const AuthorizeBtn = getComponent(\"authorizeBtn\")\n\n    return securityDefinitions ? (\n      <AuthorizeBtn\n        onClick={() => authActions.showDefinitions(authorizableDefinitions)}\n        isAuthorized={!!authSelectors.authorized().size}\n        showPopup={!!authSelectors.shownDefinitions()}\n        getComponent={getComponent}\n      />\n    ) : null\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class AuthorizeOperationBtn extends React.Component {\n    static propTypes = {\n      isAuthorized: PropTypes.bool.isRequired,\n      onClick: PropTypes.func\n    }\n\n  onClick =(e) => {\n    e.stopPropagation()\n    let { onClick } = this.props\n\n    if(onClick) {\n      onClick()\n    }\n  }\n\n  render() {\n    let { isAuthorized } = this.props\n\n    return (\n      <button className={isAuthorized ? \"authorization__btn locked\" : \"authorization__btn unlocked\"}\n        aria-label={isAuthorized ? \"authorization button locked\" : \"authorization button unlocked\"}\n        onClick={this.onClick}>\n        <svg width=\"20\" height=\"20\">\n          <use href={ isAuthorized ? \"#locked\" : \"#unlocked\" } xlinkHref={ isAuthorized ? \"#locked\" : \"#unlocked\" } />\n        </svg>\n      </button>\n\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class Auths extends React.Component {\n  static propTypes = {\n    definitions: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    authSelectors: PropTypes.object.isRequired,\n    authActions: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {}\n  }\n\n  onAuthChange =(auth) => {\n    let { name } = auth\n\n    this.setState({ [name]: auth })\n  }\n\n  submitAuth =(e) => {\n    e.preventDefault()\n\n    let { authActions } = this.props\n    authActions.authorizeWithPersistOption(this.state)\n  }\n\n  logoutClick =(e) => {\n    e.preventDefault()\n\n    let { authActions, definitions } = this.props\n    let auths = definitions.map( (val, key) => {\n      return key\n    }).toArray()\n\n    this.setState(auths.reduce((prev, auth) => {\n      prev[auth] = \"\"\n      return prev\n    }, {}))\n\n    authActions.logoutWithPersistOption(auths)\n  }\n\n  close =(e) => {\n    e.preventDefault()\n    let { authActions } = this.props\n\n    authActions.showDefinitions(false)\n  }\n\n  render() {\n    let { definitions, getComponent, authSelectors, errSelectors } = this.props\n    const AuthItem = getComponent(\"AuthItem\")\n    const Oauth2 = getComponent(\"oauth2\", true)\n    const Button = getComponent(\"Button\")\n\n    let authorized = authSelectors.authorized()\n\n    let authorizedAuth = definitions.filter( (definition, key) => {\n      return !!authorized.get(key)\n    })\n\n    let nonOauthDefinitions = definitions.filter( schema => schema.get(\"type\") !== \"oauth2\")\n    let oauthDefinitions = definitions.filter( schema => schema.get(\"type\") === \"oauth2\")\n\n    return (\n      <div className=\"auth-container\">\n        {\n          !!nonOauthDefinitions.size && <form onSubmit={ this.submitAuth }>\n            {\n              nonOauthDefinitions.map( (schema, name) => {\n                return <AuthItem\n                  key={name}\n                  schema={schema}\n                  name={name}\n                  getComponent={getComponent}\n                  onAuthChange={this.onAuthChange}\n                  authorized={authorized}\n                  errSelectors={errSelectors}\n                  />\n              }).toArray()\n            }\n            <div className=\"auth-btn-wrapper\">\n              {\n                nonOauthDefinitions.size === authorizedAuth.size ? <Button className=\"btn modal-btn auth\" onClick={ this.logoutClick }>Logout</Button>\n              : <Button type=\"submit\" className=\"btn modal-btn auth authorize\">Authorize</Button>\n              }\n              <Button className=\"btn modal-btn auth btn-done\" onClick={ this.close }>Close</Button>\n            </div>\n          </form>\n        }\n\n        {\n          oauthDefinitions && oauthDefinitions.size ? <div>\n          <div className=\"scope-def\">\n            <p>Scopes are used to grant an application different levels of access to data on behalf of the end user. Each API may declare one or more scopes.</p>\n            <p>API requires the following scopes. Select which ones you want to grant to Swagger UI.</p>\n          </div>\n            {\n              definitions.filter( schema => schema.get(\"type\") === \"oauth2\")\n                .map( (schema, name) =>{\n                  return (<div key={ name }>\n                    <Oauth2 authorized={ authorized }\n                            schema={ schema }\n                            name={ name } />\n                  </div>)\n                }\n                ).toArray()\n            }\n          </div> : null\n        }\n\n      </div>\n    )\n  }\n\n  static propTypes = {\n    errSelectors: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    authSelectors: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    authActions: PropTypes.object.isRequired,\n    definitions: ImPropTypes.iterable.isRequired\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class Auths extends React.Component {\n  static propTypes = {\n    schema: ImPropTypes.orderedMap.isRequired,\n    name: PropTypes.string.isRequired,\n    onAuthChange: PropTypes.func.isRequired,\n    authorized: ImPropTypes.orderedMap.isRequired\n  }\n\n  render() {\n    let {\n      schema,\n      name,\n      getComponent,\n      onAuthChange,\n      authorized,\n      errSelectors\n    } = this.props\n    const ApiKeyAuth = getComponent(\"apiKeyAuth\")\n    const BasicAuth = getComponent(\"basicAuth\")\n\n    let authEl\n\n    const type = schema.get(\"type\")\n\n    switch(type) {\n      case \"apiKey\": authEl = <ApiKeyAuth key={ name }\n                                        schema={ schema }\n                                        name={ name }\n                                        errSelectors={ errSelectors }\n                                        authorized={ authorized }\n                                        getComponent={ getComponent }\n                                        onChange={ onAuthChange } />\n        break\n      case \"basic\": authEl = <BasicAuth key={ name }\n                                      schema={ schema }\n                                      name={ name }\n                                      errSelectors={ errSelectors }\n                                      authorized={ authorized }\n                                      getComponent={ getComponent }\n                                      onChange={ onAuthChange } />\n        break\n      default: authEl = <div key={ name }>Unknown security definition type { type }</div>\n    }\n\n    return (<div key={`${name}-jump`}>\n      { authEl }\n    </div>)\n  }\n\n  static propTypes = {\n    errSelectors: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    authSelectors: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    authActions: PropTypes.object.isRequired,\n    definitions: ImPropTypes.iterable.isRequired\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class AuthError extends React.Component {\n\n  static propTypes = {\n    error: PropTypes.object.isRequired\n  }\n\n  render() {\n    let { error } = this.props\n\n    let level = error.get(\"level\")\n    let message = error.get(\"message\")\n    let source = error.get(\"source\")\n\n    return (\n      <div className=\"errors\">\n        <b>{ source } { level }</b>\n        <span>{ message }</span>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class ApiKeyAuth extends React.Component {\n  static propTypes = {\n    authorized: PropTypes.object,\n    getComponent: PropTypes.func.isRequired,\n    errSelectors: PropTypes.object.isRequired,\n    schema: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    let { name, schema } = this.props\n    let value = this.getValue()\n\n    this.state = {\n      name: name,\n      schema: schema,\n      value: value\n    }\n  }\n\n  getValue () {\n    let { name, authorized } = this.props\n\n    return authorized && authorized.getIn([name, \"value\"])\n  }\n\n  onChange =(e) => {\n    let { onChange } = this.props\n    let value = e.target.value\n    let newState = Object.assign({}, this.state, { value: value })\n\n    this.setState(newState)\n    onChange(newState)\n  }\n\n  render() {\n    let { schema, getComponent, errSelectors, name } = this.props\n    const Input = getComponent(\"Input\")\n    const Row = getComponent(\"Row\")\n    const Col = getComponent(\"Col\")\n    const AuthError = getComponent(\"authError\")\n    const Markdown = getComponent(\"Markdown\", true)\n    const JumpToPath = getComponent(\"JumpToPath\", true)\n    let value = this.getValue()\n    let errors = errSelectors.allErrors().filter( err => err.get(\"authId\") === name)\n\n    return (\n      <div>\n        <h4>\n          <code>{ name || schema.get(\"name\") }</code>&nbsp;\n          (apiKey)\n          <JumpToPath path={[ \"securityDefinitions\", name ]} />\n        </h4>\n        { value && <h6>Authorized</h6>}\n        <Row>\n          <Markdown source={ schema.get(\"description\") } />\n        </Row>\n        <Row>\n          <p>Name: <code>{ schema.get(\"name\") }</code></p>\n        </Row>\n        <Row>\n          <p>In: <code>{ schema.get(\"in\") }</code></p>\n        </Row>\n        <Row>\n          <label>Value:</label>\n          {\n            value ? <code> ****** </code>\n                  : <Col><Input type=\"text\" onChange={ this.onChange }/></Col>\n          }\n        </Row>\n        {\n          errors.valueSeq().map( (error, key) => {\n            return <AuthError error={ error }\n                              key={ key }/>\n          } )\n        }\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class BasicAuth extends React.Component {\n  static propTypes = {\n    authorized: PropTypes.object,\n    getComponent: PropTypes.func.isRequired,\n    schema: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    let { schema, name } = this.props\n\n    let value = this.getValue()\n    let username = value.username\n\n    this.state = {\n      name: name,\n      schema: schema,\n      value: !username ? {} : {\n        username: username\n      }\n    }\n  }\n\n  getValue () {\n    let { authorized, name } = this.props\n\n    return authorized && authorized.getIn([name, \"value\"]) || {}\n  }\n\n  onChange =(e) => {\n    let { onChange } = this.props\n    let { value, name } = e.target\n\n    let newValue = this.state.value\n    newValue[name] = value\n\n    this.setState({ value: newValue })\n\n    onChange(this.state)\n  }\n\n  render() {\n    let { schema, getComponent, name, errSelectors } = this.props\n    const Input = getComponent(\"Input\")\n    const Row = getComponent(\"Row\")\n    const Col = getComponent(\"Col\")\n    const AuthError = getComponent(\"authError\")\n    const JumpToPath = getComponent(\"JumpToPath\", true)\n    const Markdown = getComponent(\"Markdown\", true)\n    let username = this.getValue().username\n    let errors = errSelectors.allErrors().filter( err => err.get(\"authId\") === name)\n\n    return (\n      <div>\n        <h4>Basic authorization<JumpToPath path={[ \"securityDefinitions\", name ]} /></h4>\n        { username && <h6>Authorized</h6> }\n        <Row>\n          <Markdown source={ schema.get(\"description\") } />\n        </Row>\n        <Row>\n          <label>Username:</label>\n          {\n            username ? <code> { username } </code>\n                     : <Col><Input type=\"text\" required=\"required\" name=\"username\" onChange={ this.onChange }/></Col>\n          }\n        </Row>\n        <Row>\n          <label>Password:</label>\n            {\n              username ? <code> ****** </code>\n                       : <Col><Input autoComplete=\"new-password\"\n                                     name=\"password\"\n                                     type=\"password\"\n                                     onChange={ this.onChange }/></Col>\n            }\n        </Row>\n        {\n          errors.valueSeq().map( (error, key) => {\n            return <AuthError error={ error }\n                              key={ key }/>\n          } )\n        }\n      </div>\n    )\n  }\n\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    errSelectors: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n    schema: ImPropTypes.map,\n    authorized: ImPropTypes.map\n  }\n}\n","/**\n * @prettier\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { stringify } from \"core/utils\"\n\nexport default function Example(props) {\n  const { example, showValue, getComponent, getConfigs } = props\n\n  const Markdown = getComponent(\"Markdown\", true)\n  const HighlightCode = getComponent(\"highlightCode\")\n\n  if(!example) return null\n\n  return (\n    <div className=\"example\">\n      {example.get(\"description\") ? (\n        <section className=\"example__section\">\n          <div className=\"example__section-header\">Example Description</div>\n          <p>\n            <Markdown source={example.get(\"description\")} />\n          </p>\n        </section>\n      ) : null}\n      {showValue && example.has(\"value\") ? (\n        <section className=\"example__section\">\n          <div className=\"example__section-header\">Example Value</div>\n          <HighlightCode getConfigs={ getConfigs } value={stringify(example.get(\"value\"))} />\n        </section>\n      ) : null}\n    </div>\n  )\n}\n\nExample.propTypes = {\n  example: ImPropTypes.map.isRequired,\n  showValue: PropTypes.bool,\n  getComponent: PropTypes.func.isRequired,\n  getConfigs: PropTypes.func.getConfigs,\n}\n","/**\n * @prettier\n */\n\nimport React from \"react\"\nimport Im from \"immutable\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class ExamplesSelect extends React.PureComponent {\n  static propTypes = {\n    examples: ImPropTypes.map.isRequired,\n    onSelect: PropTypes.func,\n    currentExampleKey: PropTypes.string,\n    isModifiedValueAvailable: PropTypes.bool,\n    isValueModified: PropTypes.bool,\n    showLabels: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    examples: Im.Map({}),\n    onSelect: (...args) =>\n      console.log( // eslint-disable-line no-console\n        // FIXME: remove before merging to master...\n        `DEBUG: ExamplesSelect was not given an onSelect callback`,\n        ...args\n      ),\n    currentExampleKey: null,\n    showLabels: true,\n  }\n\n  _onSelect = (key, { isSyntheticChange = false } = {}) => {\n    if (typeof this.props.onSelect === \"function\") {\n      this.props.onSelect(key, {\n        isSyntheticChange,\n      })\n    }\n  }\n\n  _onDomSelect = e => {\n    if (typeof this.props.onSelect === \"function\") {\n      const element = e.target.selectedOptions[0]\n      const key = element.getAttribute(\"value\")\n\n      this._onSelect(key, {\n        isSyntheticChange: false,\n      })\n    }\n  }\n\n  getCurrentExample = () => {\n    const { examples, currentExampleKey } = this.props\n\n    const currentExamplePerProps = examples.get(currentExampleKey)\n\n    const firstExamplesKey = examples.keySeq().first()\n    const firstExample = examples.get(firstExamplesKey)\n\n    return currentExamplePerProps || firstExample || Map({})\n  }\n\n  componentDidMount() {\n    // this is the not-so-great part of ExamplesSelect... here we're\n    // artificially kicking off an onSelect event in order to set a default\n    // value in state. the consumer has the option to avoid this by checking\n    // `isSyntheticEvent`, but we should really be doing this in a selector.\n    // TODO: clean this up\n    // FIXME: should this only trigger if `currentExamplesKey` is nullish?\n    const { onSelect, examples } = this.props\n\n    if (typeof onSelect === \"function\") {\n      const firstExample = examples.first()\n      const firstExampleKey = examples.keyOf(firstExample)\n\n      this._onSelect(firstExampleKey, {\n        isSyntheticChange: true,\n      })\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { currentExampleKey, examples } = nextProps\n    if (examples !== this.props.examples && !examples.has(currentExampleKey)) {\n      // examples have changed from under us, and the currentExampleKey is no longer\n      // valid.\n      const firstExample = examples.first()\n      const firstExampleKey = examples.keyOf(firstExample)\n\n      this._onSelect(firstExampleKey, {\n        isSyntheticChange: true,\n      })\n    }\n  }\n\n  render() {\n    const {\n      examples,\n      currentExampleKey,\n      isValueModified,\n      isModifiedValueAvailable,\n      showLabels,\n    } = this.props\n\n    return (\n      <div className=\"examples-select\">\n        {\n          showLabels ? (\n            <span className=\"examples-select__section-label\">Examples: </span>\n          ) : null\n        }\n        <select\n          onChange={this._onDomSelect}\n          value={\n            isModifiedValueAvailable && isValueModified\n              ? \"__MODIFIED__VALUE__\"\n              : (currentExampleKey || \"\")\n          }\n        >\n          {isModifiedValueAvailable ? (\n            <option value=\"__MODIFIED__VALUE__\">[Modified value]</option>\n          ) : null}\n          {examples\n            .map((example, exampleName) => {\n              return (\n                <option\n                  key={exampleName} // for React\n                  value={exampleName} // for matching to select's `value`\n                >\n                  {example.get(\"summary\") || exampleName}\n                </option>\n              )\n            })\n            .valueSeq()}\n        </select>\n      </div>\n    )\n  }\n}\n","/**\n * @prettier\n */\nimport React from \"react\"\nimport { Map, List } from \"immutable\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nimport { stringify } from \"core/utils\"\n\n// This stateful component lets us avoid writing competing values (user\n// modifications vs example values) into global state, and the mess that comes\n// with that: tracking which of the two values are currently used for\n// Try-It-Out, which example a modified value came from, etc...\n//\n// The solution here is to retain the last user-modified value in\n// ExamplesSelectValueRetainer's component state, so that our global state can stay\n// clean, always simply being the source of truth for what value should be both\n// displayed to the user and used as a value during request execution.\n//\n// This approach/tradeoff was chosen in order to encapsulate the particular\n// logic of Examples within the Examples component tree, and to avoid\n// regressions within our current implementation elsewhere (non-Examples\n// definitions, OpenAPI 2.0, etc). A future refactor to global state might make\n// this component unnecessary.\n//\n// TL;DR: this is not our usual approach, but the choice was made consciously.\n\n// Note that `currentNamespace` isn't currently used anywhere!\n\nconst stringifyUnlessList = input =>\n  List.isList(input) ? input : stringify(input)\n\nexport default class ExamplesSelectValueRetainer extends React.PureComponent {\n  static propTypes = {\n    examples: ImPropTypes.map,\n    onSelect: PropTypes.func,\n    updateValue: PropTypes.func, // mechanism to update upstream value\n    getComponent: PropTypes.func.isRequired,\n    currentUserInputValue: PropTypes.any,\n    currentKey: PropTypes.string,\n    currentNamespace: PropTypes.string,\n    // (also proxies props for Examples)\n  }\n\n  static defaultProps = {\n    examples: Map({}),\n    currentNamespace: \"__DEFAULT__NAMESPACE__\",\n    onSelect: (...args) =>\n      console.log( // eslint-disable-line no-console\n        \"ExamplesSelectValueRetainer: no `onSelect` function was provided\",\n        ...args\n      ),\n    updateValue: (...args) =>\n      console.log( // eslint-disable-line no-console\n        \"ExamplesSelectValueRetainer: no `updateValue` function was provided\",\n        ...args\n      ),\n  }\n\n  constructor(props) {\n    super(props)\n\n    const valueFromExample = this._getCurrentExampleValue()\n\n    this.state = {\n      // user edited: last value that came from the world around us, and didn't\n      // match the current example's value\n      // internal: last value that came from user selecting an Example\n      [props.currentNamespace]: Map({\n        lastUserEditedValue: this.props.currentUserInputValue,\n        lastDownstreamValue: valueFromExample,\n        isModifiedValueSelected:\n          // valueFromExample !== undefined &&\n          this.props.currentUserInputValue !== valueFromExample,\n      }),\n    }\n  }\n\n  _getStateForCurrentNamespace = () => {\n    const { currentNamespace } = this.props\n\n    return (this.state[currentNamespace] || Map()).toObject()\n  }\n\n  _setStateForCurrentNamespace = obj => {\n    const { currentNamespace } = this.props\n\n    return this._setStateForNamespace(currentNamespace, obj)\n  }\n\n  _setStateForNamespace = (namespace, obj) => {\n    const oldStateForNamespace = this.state[namespace] || Map()\n    const newStateForNamespace = oldStateForNamespace.mergeDeep(obj)\n    return this.setState({\n      [namespace]: newStateForNamespace,\n    })\n  }\n\n  _isCurrentUserInputSameAsExampleValue = () => {\n    const { currentUserInputValue } = this.props\n\n    const valueFromExample = this._getCurrentExampleValue()\n\n    return valueFromExample === currentUserInputValue\n  }\n\n  _getValueForExample = (exampleKey, props) => {\n    // props are accepted so that this can be used in componentWillReceiveProps,\n    // which has access to `nextProps`\n    const { examples } = props || this.props\n    return stringifyUnlessList(\n      (examples || Map({})).getIn([exampleKey, \"value\"])\n    )\n  }\n\n  _getCurrentExampleValue = props => {\n    // props are accepted so that this can be used in componentWillReceiveProps,\n    // which has access to `nextProps`\n    const { currentKey } = props || this.props\n    return this._getValueForExample(currentKey, props || this.props)\n  }\n\n  _onExamplesSelect = (key, { isSyntheticChange } = {}, ...otherArgs) => {\n    const { onSelect, updateValue, currentUserInputValue } = this.props\n    const { lastUserEditedValue } = this._getStateForCurrentNamespace()\n\n    const valueFromExample = this._getValueForExample(key)\n\n    if (key === \"__MODIFIED__VALUE__\") {\n      updateValue(stringifyUnlessList(lastUserEditedValue))\n      return this._setStateForCurrentNamespace({\n        isModifiedValueSelected: true,\n      })\n    }\n\n    if (typeof onSelect === \"function\") {\n      onSelect(key, { isSyntheticChange }, ...otherArgs)\n    }\n\n    this._setStateForCurrentNamespace({\n      lastDownstreamValue: valueFromExample,\n      isModifiedValueSelected:\n        isSyntheticChange &&\n        !!currentUserInputValue &&\n        currentUserInputValue !== valueFromExample,\n    })\n\n    // we never want to send up value updates from synthetic changes\n    if (isSyntheticChange) return\n\n    if (typeof updateValue === \"function\") {\n      updateValue(stringifyUnlessList(valueFromExample))\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // update `lastUserEditedValue` as new currentUserInput values come in\n\n    const { currentUserInputValue: newValue, examples, onSelect } = nextProps\n\n    const {\n      lastUserEditedValue,\n      lastDownstreamValue,\n    } = this._getStateForCurrentNamespace()\n\n    const valueFromCurrentExample = this._getValueForExample(\n      nextProps.currentKey,\n      nextProps\n    )\n\n    const exampleMatchingNewValue = examples.find(\n      example =>\n        example.get(\"value\") === newValue ||\n        // sometimes data is stored as a string (e.g. in Request Bodies), so\n        // let's check against a stringified version of our example too\n        stringify(example.get(\"value\")) === newValue\n    )\n\n    if (exampleMatchingNewValue) {\n      onSelect(examples.keyOf(exampleMatchingNewValue), {\n        isSyntheticChange: true,\n      })\n    } else if (\n      newValue !== this.props.currentUserInputValue && // value has changed\n      newValue !== lastUserEditedValue && // value isn't already tracked\n      newValue !== lastDownstreamValue // value isn't what we've seen on the other side\n    ) {\n      this._setStateForNamespace(nextProps.currentNamespace, {\n        lastUserEditedValue: nextProps.currentUserInputValue,\n        isModifiedValueSelected: newValue !== valueFromCurrentExample,\n      })\n    }\n  }\n\n  render() {\n    const { currentUserInputValue, examples, currentKey, getComponent } = this.props\n    const {\n      lastDownstreamValue,\n      lastUserEditedValue,\n      isModifiedValueSelected,\n    } = this._getStateForCurrentNamespace()\n\n    const ExamplesSelect = getComponent(\"ExamplesSelect\")\n\n    return (\n      <ExamplesSelect\n        examples={examples}\n        currentExampleKey={currentKey}\n        onSelect={this._onExamplesSelect}\n        isModifiedValueAvailable={\n          !!lastUserEditedValue && lastUserEditedValue !== lastDownstreamValue\n        }\n        isValueModified={\n          currentUserInputValue !== undefined &&\n          isModifiedValueSelected &&\n          currentUserInputValue !== this._getCurrentExampleValue()\n        }\n      />\n    )\n  }\n}\n","import win from \"core/window\"\nimport Im from \"immutable\"\nimport { btoa, sanitizeUrl, generateCodeVerifier, createCodeChallenge } from \"core/utils\"\n\nexport default function authorize ( { auth, authActions, errActions, configs, authConfigs={} } ) {\n  let { schema, scopes, name, clientId } = auth\n  let flow = schema.get(\"flow\")\n  let query = []\n\n  switch (flow) {\n    case \"password\":\n      authActions.authorizePassword(auth)\n      return\n\n    case \"application\":\n      authActions.authorizeApplication(auth)\n      return\n\n    case \"accessCode\":\n      query.push(\"response_type=code\")\n      break\n\n    case \"implicit\":\n      query.push(\"response_type=token\")\n      break\n\n    case \"clientCredentials\":\n      // OAS3\n      authActions.authorizeApplication(auth)\n      return\n\n    case \"authorizationCode\":\n      // OAS3\n      query.push(\"response_type=code\")\n      break\n  }\n\n  if (typeof clientId === \"string\") {\n    query.push(\"client_id=\" + encodeURIComponent(clientId))\n  }\n\n  let redirectUrl = configs.oauth2RedirectUrl\n\n  // todo move to parser\n  if (typeof redirectUrl === \"undefined\") {\n    errActions.newAuthErr( {\n      authId: name,\n      source: \"validation\",\n      level: \"error\",\n      message: \"oauth2RedirectUrl configuration is not passed. Oauth2 authorization cannot be performed.\"\n    })\n    return\n  }\n  query.push(\"redirect_uri=\" + encodeURIComponent(redirectUrl))\n\n  let scopesArray = []\n  if (Array.isArray(scopes)) {\n    scopesArray = scopes\n  } else if (Im.List.isList(scopes)) {\n    scopesArray = scopes.toArray()\n  }\n\n  if (scopesArray.length > 0)  {\n    let scopeSeparator = authConfigs.scopeSeparator || \" \"\n\n    query.push(\"scope=\" + encodeURIComponent(scopesArray.join(scopeSeparator)))\n  }\n\n  let state = btoa(new Date())\n\n  query.push(\"state=\" + encodeURIComponent(state))\n\n  if (typeof authConfigs.realm !== \"undefined\") {\n    query.push(\"realm=\" + encodeURIComponent(authConfigs.realm))\n  }\n\n  if (flow === \"authorizationCode\" && authConfigs.usePkceWithAuthorizationCodeGrant) {\n      const codeVerifier = generateCodeVerifier()\n      const codeChallenge = createCodeChallenge(codeVerifier)\n\n      query.push(\"code_challenge=\" + codeChallenge)\n      query.push(\"code_challenge_method=S256\")\n\n      // storing the Code Verifier so it can be sent to the token endpoint\n      // when exchanging the Authorization Code for an Access Token\n      auth.codeVerifier = codeVerifier\n  }\n\n  let { additionalQueryStringParams } = authConfigs\n\n  for (let key in additionalQueryStringParams) {\n    if (typeof additionalQueryStringParams[key] !== \"undefined\") {\n      query.push([key, additionalQueryStringParams[key]].map(encodeURIComponent).join(\"=\"))\n    }\n  }\n\n  const authorizationUrl = schema.get(\"authorizationUrl\")\n  const sanitizedAuthorizationUrl = sanitizeUrl(authorizationUrl)\n  let url = [sanitizedAuthorizationUrl, query.join(\"&\")].join(authorizationUrl.indexOf(\"?\") === -1 ? \"?\" : \"&\")\n\n  // pass action authorizeOauth2 and authentication data through window\n  // to authorize with oauth2\n\n  let callback\n  if (flow === \"implicit\") {\n    callback = authActions.preAuthorizeImplicit\n  } else if (authConfigs.useBasicAuthenticationWithAccessCodeGrant) {\n    callback = authActions.authorizeAccessCodeWithBasicAuthentication\n  } else {\n    callback = authActions.authorizeAccessCodeWithFormParams\n  }\n\n  win.swaggerUIRedirectOauth2 = {\n    auth: auth,\n    state: state,\n    redirectUrl: redirectUrl,\n    callback: callback,\n    errCb: errActions.newAuthErr\n  }\n\n  win.open(url)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport oauth2Authorize from \"core/oauth2-authorize\"\n\nexport default class Oauth2 extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    authorized: PropTypes.object,\n    getComponent: PropTypes.func.isRequired,\n    schema: PropTypes.object.isRequired,\n    authSelectors: PropTypes.object.isRequired,\n    authActions: PropTypes.object.isRequired,\n    errSelectors: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    errActions: PropTypes.object.isRequired,\n    getConfigs: PropTypes.any\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    let { name, schema, authorized, authSelectors } = this.props\n    let auth = authorized && authorized.get(name)\n    let authConfigs = authSelectors.getConfigs() || {}\n    let username = auth && auth.get(\"username\") || \"\"\n    let clientId = auth && auth.get(\"clientId\") || authConfigs.clientId || \"\"\n    let clientSecret = auth && auth.get(\"clientSecret\") || authConfigs.clientSecret || \"\"\n    let passwordType = auth && auth.get(\"passwordType\") || \"basic\"\n    let scopes = auth && auth.get(\"scopes\") || authConfigs.scopes || []\n    if (typeof scopes === \"string\") {\n      scopes = scopes.split(authConfigs.scopeSeparator || \" \")\n    }\n\n    this.state = {\n      appName: authConfigs.appName,\n      name: name,\n      schema: schema,\n      scopes: scopes,\n      clientId: clientId,\n      clientSecret: clientSecret,\n      username: username,\n      password: \"\",\n      passwordType: passwordType\n    }\n  }\n\n  close = (e) => {\n    e.preventDefault()\n    let { authActions } = this.props\n\n    authActions.showDefinitions(false)\n  }\n\n  authorize =() => {\n    let { authActions, errActions, getConfigs, authSelectors } = this.props\n    let configs = getConfigs()\n    let authConfigs = authSelectors.getConfigs()\n\n    errActions.clear({authId: name,type: \"auth\", source: \"auth\"})\n    oauth2Authorize({auth: this.state, authActions, errActions, configs, authConfigs })\n  }\n\n  onScopeChange =(e) => {\n    let { target } = e\n    let { checked } = target\n    let scope = target.dataset.value\n\n    if ( checked && this.state.scopes.indexOf(scope) === -1 ) {\n      let newScopes = this.state.scopes.concat([scope])\n      this.setState({ scopes: newScopes })\n    } else if ( !checked && this.state.scopes.indexOf(scope) > -1) {\n      this.setState({ scopes: this.state.scopes.filter((val) => val !== scope) })\n    }\n  }\n\n  onInputChange =(e) => {\n    let { target : { dataset : { name }, value } } = e\n    let state = {\n      [name]: value\n    }\n\n    this.setState(state)\n  }\n\n  selectScopes =(e) => {\n    if (e.target.dataset.all) {\n      this.setState({\n        scopes: Array.from((this.props.schema.get(\"allowedScopes\") || this.props.schema.get(\"scopes\")).keys())\n      })\n    } else {\n      this.setState({ scopes: [] })\n    }\n  }\n\n  logout =(e) => {\n    e.preventDefault()\n    let { authActions, errActions, name } = this.props\n\n    errActions.clear({authId: name, type: \"auth\", source: \"auth\"})\n    authActions.logoutWithPersistOption([ name ])\n  }\n\n  render() {\n    let {\n      schema, getComponent, authSelectors, errSelectors, name, specSelectors\n    } = this.props\n    const Input = getComponent(\"Input\")\n    const Row = getComponent(\"Row\")\n    const Col = getComponent(\"Col\")\n    const Button = getComponent(\"Button\")\n    const AuthError = getComponent(\"authError\")\n    const JumpToPath = getComponent(\"JumpToPath\", true)\n    const Markdown = getComponent(\"Markdown\", true)\n    const InitializedInput = getComponent(\"InitializedInput\")\n\n    const { isOAS3 } = specSelectors\n\n    // Auth type consts\n    const IMPLICIT = \"implicit\"\n    const PASSWORD = \"password\"\n    const ACCESS_CODE = isOAS3() ? \"authorizationCode\" : \"accessCode\"\n    const APPLICATION = isOAS3() ? \"clientCredentials\" : \"application\"\n\n    let flow = schema.get(\"flow\")\n    let scopes = schema.get(\"allowedScopes\") || schema.get(\"scopes\")\n    let authorizedAuth = authSelectors.authorized().get(name)\n    let isAuthorized = !!authorizedAuth\n    let errors = errSelectors.allErrors().filter( err => err.get(\"authId\") === name)\n    let isValid = !errors.filter( err => err.get(\"source\") === \"validation\").size\n    let description = schema.get(\"description\")\n\n    return (\n      <div>\n        <h4>{name} (OAuth2, { schema.get(\"flow\") }) <JumpToPath path={[ \"securityDefinitions\", name ]} /></h4>\n        { !this.state.appName ? null : <h5>Application: { this.state.appName } </h5> }\n        { description && <Markdown source={ schema.get(\"description\") } /> }\n\n        { isAuthorized && <h6>Authorized</h6> }\n\n        { ( flow === IMPLICIT || flow === ACCESS_CODE ) && <p>Authorization URL: <code>{ schema.get(\"authorizationUrl\") }</code></p> }\n        { ( flow === PASSWORD || flow === ACCESS_CODE || flow === APPLICATION ) && <p>Token URL:<code> { schema.get(\"tokenUrl\") }</code></p> }\n        <p className=\"flow\">Flow: <code>{ schema.get(\"flow\") }</code></p>\n\n        {\n          flow !== PASSWORD ? null\n            : <Row>\n              <Row>\n                <label htmlFor=\"oauth_username\">username:</label>\n                {\n                  isAuthorized ? <code> { this.state.username } </code>\n                    : <Col tablet={10} desktop={10}>\n                      <input id=\"oauth_username\" type=\"text\" data-name=\"username\" onChange={ this.onInputChange }/>\n                    </Col>\n                }\n              </Row>\n              {\n\n              }\n              <Row>\n                <label htmlFor=\"oauth_password\">password:</label>\n                {\n                  isAuthorized ? <code> ****** </code>\n                    : <Col tablet={10} desktop={10}>\n                      <input id=\"oauth_password\" type=\"password\" data-name=\"password\" onChange={ this.onInputChange }/>\n                    </Col>\n                }\n              </Row>\n              <Row>\n                <label htmlFor=\"password_type\">Client credentials location:</label>\n                {\n                  isAuthorized ? <code> { this.state.passwordType } </code>\n                    : <Col tablet={10} desktop={10}>\n                      <select id=\"password_type\" data-name=\"passwordType\" onChange={ this.onInputChange }>\n                        <option value=\"basic\">Authorization header</option>\n                        <option value=\"request-body\">Request body</option>\n                      </select>\n                    </Col>\n                }\n              </Row>\n            </Row>\n        }\n        {\n          ( flow === APPLICATION || flow === IMPLICIT || flow === ACCESS_CODE || flow === PASSWORD ) &&\n          ( !isAuthorized || isAuthorized && this.state.clientId) && <Row>\n            <label htmlFor=\"client_id\">client_id:</label>\n            {\n              isAuthorized ? <code> ****** </code>\n                           : <Col tablet={10} desktop={10}>\n                               <InitializedInput id=\"client_id\"\n                                      type=\"text\"\n                                      required={ flow === PASSWORD }\n                                      initialValue={ this.state.clientId }\n                                      data-name=\"clientId\"\n                                      onChange={ this.onInputChange }/>\n                             </Col>\n            }\n          </Row>\n        }\n\n        {\n          ( (flow === APPLICATION || flow === ACCESS_CODE || flow === PASSWORD) && <Row>\n            <label htmlFor=\"client_secret\">client_secret:</label>\n            {\n              isAuthorized ? <code> ****** </code>\n                           : <Col tablet={10} desktop={10}>\n                               <InitializedInput id=\"client_secret\"\n                                      initialValue={ this.state.clientSecret }\n                                      type=\"password\"\n                                      data-name=\"clientSecret\"\n                                      onChange={ this.onInputChange }/>\n                             </Col>\n            }\n\n          </Row>\n        )}\n\n        {\n          !isAuthorized && scopes && scopes.size ? <div className=\"scopes\">\n            <h2>\n              Scopes:\n              <a onClick={this.selectScopes} data-all={true}>select all</a>\n              <a onClick={this.selectScopes}>select none</a>\n            </h2>\n            { scopes.map((description, name) => {\n              return (\n                <Row key={ name }>\n                  <div className=\"checkbox\">\n                    <Input data-value={ name }\n                          id={`${name}-${flow}-checkbox-${this.state.name}`}\n                           disabled={ isAuthorized }\n                           checked={ this.state.scopes.includes(name) }\n                           type=\"checkbox\"\n                           onChange={ this.onScopeChange }/>\n                         <label htmlFor={`${name}-${flow}-checkbox-${this.state.name}`}>\n                           <span className=\"item\"></span>\n                           <div className=\"text\">\n                             <p className=\"name\">{name}</p>\n                             <p className=\"description\">{description}</p>\n                           </div>\n                         </label>\n                  </div>\n                </Row>\n              )\n              }).toArray()\n            }\n          </div> : null\n        }\n\n        {\n          errors.valueSeq().map( (error, key) => {\n            return <AuthError error={ error }\n                              key={ key }/>\n          } )\n        }\n        <div className=\"auth-btn-wrapper\">\n        { isValid &&\n          ( isAuthorized ? <Button className=\"btn modal-btn auth authorize\" onClick={ this.logout }>Logout</Button>\n        : <Button className=\"btn modal-btn auth authorize\" onClick={ this.authorize }>Authorize</Button>\n          )\n        }\n          <Button className=\"btn modal-btn auth btn-done\" onClick={ this.close }>Close</Button>\n        </div>\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class Clear extends Component {\n\n  onClick =() => {\n    let { specActions, path, method } = this.props\n    specActions.clearResponse( path, method )\n    specActions.clearRequest( path, method )\n  }\n\n  render(){\n    return (\n      <button className=\"btn btn-clear opblock-control__btn\" onClick={ this.onClick }>\n        Clear\n      </button>\n    )\n  }\n\n  static propTypes = {\n    specActions: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { Iterable } from \"immutable\"\n\nconst Headers = ( { headers } )=>{\n  return (\n    <div>\n      <h5>Response headers</h5>\n      <pre className=\"microlight\">{headers}</pre>\n    </div>)\n}\nHeaders.propTypes = {\n  headers: PropTypes.array.isRequired\n}\n\nconst Duration = ( { duration } ) => {\n  return (\n    <div>\n      <h5>Request duration</h5>\n      <pre className=\"microlight\">{duration} ms</pre>\n    </div>\n  )\n}\nDuration.propTypes = {\n  duration: PropTypes.number.isRequired\n}\n\n\nexport default class LiveResponse extends React.Component {\n  static propTypes = {\n    response: PropTypes.instanceOf(Iterable).isRequired,\n    path: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n    displayRequestDuration: PropTypes.bool.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired\n  }\n\n  shouldComponentUpdate(nextProps) {\n    // BUG: props.response is always coming back as a new Immutable instance\n    // same issue as responses.jsx (tryItOutResponse)\n    return this.props.response !== nextProps.response\n      || this.props.path !== nextProps.path\n      || this.props.method !== nextProps.method\n      || this.props.displayRequestDuration !== nextProps.displayRequestDuration\n  }\n\n  render() {\n    const { response, getComponent, getConfigs, displayRequestDuration, specSelectors, path, method } = this.props\n    const { showMutatedRequest } = getConfigs()\n\n    const curlRequest = showMutatedRequest ? specSelectors.mutatedRequestFor(path, method) : specSelectors.requestFor(path, method)\n    const status = response.get(\"status\")\n    const url = curlRequest.get(\"url\")\n    const headers = response.get(\"headers\").toJS()\n    const notDocumented = response.get(\"notDocumented\")\n    const isError = response.get(\"error\")\n    const body = response.get(\"text\")\n    const duration = response.get(\"duration\")\n    const headersKeys = Object.keys(headers)\n    const contentType = headers[\"content-type\"] || headers[\"Content-Type\"]\n\n    const Curl = getComponent(\"curl\")\n    const ResponseBody = getComponent(\"responseBody\")\n    const returnObject = headersKeys.map(key => {\n      return <span className=\"headerline\" key={key}> {key}: {headers[key]} </span>\n    })\n    const hasHeaders = returnObject.length !== 0\n\n    return (\n      <div>\n        { curlRequest && <Curl request={ curlRequest } getConfigs={ getConfigs } /> }\n        { url && <div>\n            <h4>Request URL</h4>\n            <div className=\"request-url\">\n              <pre className=\"microlight\">{url}</pre>\n            </div>\n          </div>\n        }\n        <h4>Server response</h4>\n        <table className=\"responses-table live-responses-table\">\n          <thead>\n          <tr className=\"responses-header\">\n            <td className=\"col_header response-col_status\">Code</td>\n            <td className=\"col_header response-col_description\">Details</td>\n          </tr>\n          </thead>\n          <tbody>\n            <tr className=\"response\">\n              <td className=\"response-col_status\">\n                { status }\n                {\n                  notDocumented ? <div className=\"response-undocumented\">\n                                    <i> Undocumented </i>\n                                  </div>\n                                : null\n                }\n              </td>\n              <td className=\"response-col_description\">\n                {\n                  isError ? <span>\n                              {`${response.get(\"name\")}: ${response.get(\"message\")}`}\n                            </span>\n                          : null\n                }\n                {\n                  body ? <ResponseBody content={ body }\n                                       contentType={ contentType }\n                                       url={ url }\n                                       headers={ headers }\n                                       getConfigs={ getConfigs }\n                                       getComponent={ getComponent }/>\n                       : null\n                }\n                {\n                  hasHeaders ? <Headers headers={ returnObject }/> : null\n                }\n                {\n                  displayRequestDuration && duration ? <Duration duration={ duration } /> : null\n                }\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n\n  static propTypes = {\n    getComponent: PropTypes.func.isRequired,\n    response: ImPropTypes.map\n  }\n}\n","import React from \"react\"\nimport URL from \"url-parse\"\n\nimport PropTypes from \"prop-types\"\nimport { sanitizeUrl, requiresValidationURL } from \"core/utils\"\nimport win from \"core/window\"\n\nexport default class OnlineValidatorBadge extends React.Component {\n    static propTypes = {\n      getComponent: PropTypes.func.isRequired,\n      getConfigs: PropTypes.func.isRequired,\n      specSelectors: PropTypes.object.isRequired\n    }\n\n    constructor(props, context) {\n        super(props, context)\n        let { getConfigs } = props\n        let { validatorUrl } = getConfigs()\n        this.state = {\n            url: this.getDefinitionUrl(),\n            validatorUrl: validatorUrl === undefined ? \"https://validator.swagger.io/validator\" : validatorUrl\n        }\n    }\n\n    getDefinitionUrl = () => {\n      // TODO: test this behavior by stubbing `window.location` in an Enzyme/JSDom env\n      let { specSelectors } = this.props\n\n      const urlObject = new URL(specSelectors.url(), win.location)\n      return urlObject.toString()\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let { getConfigs } = nextProps\n        let { validatorUrl } = getConfigs()\n\n        this.setState({\n            url: this.getDefinitionUrl(),\n            validatorUrl: validatorUrl === undefined ? \"https://validator.swagger.io/validator\" : validatorUrl\n        })\n    }\n\n    render() {\n        let { getConfigs } = this.props\n        let { spec } = getConfigs()\n\n        let sanitizedValidatorUrl = sanitizeUrl(this.state.validatorUrl)\n\n        if ( typeof spec === \"object\" && Object.keys(spec).length) return null\n\n        if (!this.state.url || !requiresValidationURL(this.state.validatorUrl)\n                            || !requiresValidationURL(this.state.url)) {\n          return null\n        }\n\n        return (<span className=\"float-right\">\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${ sanitizedValidatorUrl }/debug?url=${ encodeURIComponent(this.state.url) }`}>\n                    <ValidatorImage src={`${ sanitizedValidatorUrl }?url=${ encodeURIComponent(this.state.url) }`} alt=\"Online validator badge\"/>\n                </a>\n            </span>)\n    }\n}\n\n\nclass ValidatorImage extends React.Component {\n  static propTypes = {\n    src: PropTypes.string,\n    alt: PropTypes.string\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      loaded: false,\n      error: false\n    }\n  }\n\n  componentDidMount() {\n    const img = new Image()\n    img.onload = () => {\n      this.setState({\n        loaded: true\n      })\n    }\n    img.onerror = () => {\n      this.setState({\n        error: true\n      })\n    }\n    img.src = this.props.src\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.src !== this.props.src) {\n      const img = new Image()\n      img.onload = () => {\n        this.setState({\n          loaded: true\n        })\n      }\n      img.onerror = () => {\n        this.setState({\n          error: true\n        })\n      }\n      img.src = nextProps.src\n    }\n  }\n\n  render() {\n    if (this.state.error) {\n      return <img alt={\"Error\"} />\n    } else if (!this.state.loaded) {\n      return null\n    }\n    return <img src={this.props.src} alt={this.props.alt} />\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Im from \"immutable\"\n\nconst SWAGGER2_OPERATION_METHODS = [\n  \"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\"\n]\n\nconst OAS3_OPERATION_METHODS = SWAGGER2_OPERATION_METHODS.concat([\"trace\"])\n\n\nexport default class Operations extends React.Component {\n\n  static propTypes = {\n    specSelectors: PropTypes.object.isRequired,\n    specActions: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    oas3Selectors: PropTypes.func.isRequired,\n    layoutSelectors: PropTypes.object.isRequired,\n    layoutActions: PropTypes.object.isRequired,\n    authActions: PropTypes.object.isRequired,\n    authSelectors: PropTypes.object.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    fn: PropTypes.func.isRequired\n  };\n\n  render() {\n    let {\n      specSelectors,\n      getComponent,\n      oas3Selectors,\n      layoutSelectors,\n      layoutActions,\n      getConfigs,\n      fn\n    } = this.props\n\n    let taggedOps = specSelectors.taggedOperations()\n\n    const OperationContainer = getComponent(\"OperationContainer\", true)\n    const OperationTag = getComponent(\"OperationTag\")\n\n    let {\n      maxDisplayedTags,\n    } = getConfigs()\n\n    let filter = layoutSelectors.currentFilter()\n\n    if (filter) {\n      if (filter !== true && filter !== \"true\" && filter !== \"false\") {\n        taggedOps = fn.opsFilter(taggedOps, filter)\n      }\n    }\n\n    if (maxDisplayedTags && !isNaN(maxDisplayedTags) && maxDisplayedTags >= 0) {\n      taggedOps = taggedOps.slice(0, maxDisplayedTags)\n    }\n\n    return (\n        <div>\n          {\n            taggedOps.map( (tagObj, tag) => {\n              const operations = tagObj.get(\"operations\")\n              return (\n                <OperationTag\n                  key={\"operation-\" + tag}\n                  tagObj={tagObj}\n                  tag={tag}\n                  oas3Selectors={oas3Selectors}\n                  layoutSelectors={layoutSelectors}\n                  layoutActions={layoutActions}\n                  getConfigs={getConfigs}\n                  getComponent={getComponent}\n                  specUrl={specSelectors.url()}>\n                  {\n                    operations.map( op => {\n                      const path = op.get(\"path\")\n                      const method = op.get(\"method\")\n                      const specPath = Im.List([\"paths\", path, method])\n\n\n                      // FIXME: (someday) this logic should probably be in a selector,\n                      // but doing so would require further opening up\n                      // selectors to the plugin system, to allow for dynamic\n                      // overriding of low-level selectors that other selectors\n                      // rely on. --KS, 12/17\n                      const validMethods = specSelectors.isOAS3() ?\n                            OAS3_OPERATION_METHODS : SWAGGER2_OPERATION_METHODS\n\n                      if(validMethods.indexOf(method) === -1) {\n                        return null\n                      }\n\n                      return <OperationContainer\n                                 key={`${path}-${method}`}\n                                 specPath={specPath}\n                                 op={op}\n                                 path={path}\n                                 method={method}\n                                 tag={tag}\n                                 />\n                    }).toArray()\n                  }\n\n\n                </OperationTag>\n              )\n            }).toArray()\n          }\n\n          { taggedOps.size < 1 ? <h3> No operations defined in spec! </h3> : null }\n        </div>\n    )\n  }\n\n}\n\nOperations.propTypes = {\n  layoutActions: PropTypes.object.isRequired,\n  specSelectors: PropTypes.object.isRequired,\n  specActions: PropTypes.object.isRequired,\n  layoutSelectors: PropTypes.object.isRequired,\n  getComponent: PropTypes.func.isRequired,\n  fn: PropTypes.object.isRequired\n}\n","export function isAbsoluteUrl(url) {\n  return url.match(/^(?:[a-z]+:)?\\/\\//i) // Matches http://, HTTP://, https://, ftp://, //example.com,\n}\n\nexport function addProtocol(url) {\n  if(!url.match(/^\\/\\//i)) return url // Checks if protocol is missing e.g. //example.com\n  return `${window.location.protocol}${url}`\n}\n\nexport function buildBaseUrl(selectedServer, specUrl) {\n  if(!selectedServer) return specUrl\n  if(isAbsoluteUrl(selectedServer)) return addProtocol(selectedServer)\n  \n  return new URL(selectedServer, specUrl).href    \n}\n\nexport function buildUrl(url, specUrl, { selectedServer=\"\" } = {}) {  \n  if(!url) return\n  if(isAbsoluteUrl(url)) return url\n\n  const baseUrl = buildBaseUrl(selectedServer, specUrl)\n  return new URL(url, baseUrl).href\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport Im from \"immutable\"\nimport { createDeepLinkPath, escapeDeepLinkPath, sanitizeUrl } from \"core/utils\"\nimport { buildUrl } from \"core/utils/url\"\nimport { isFunc } from \"core/utils\"\n\nexport default class OperationTag extends React.Component {\n\n  static defaultProps = {\n    tagObj: Im.fromJS({}),\n    tag: \"\",\n  }\n\n  static propTypes = {\n    tagObj: ImPropTypes.map.isRequired,\n    tag: PropTypes.string.isRequired,\n\n    oas3Selectors: PropTypes.func.isRequired,\n    layoutSelectors: PropTypes.object.isRequired,\n    layoutActions: PropTypes.object.isRequired,\n\n    getConfigs: PropTypes.func.isRequired,\n    getComponent: PropTypes.func.isRequired,\n\n    specUrl: PropTypes.string.isRequired,\n\n    children: PropTypes.element,\n  }\n\n  render() {\n    const {\n      tagObj,\n      tag,\n      children,\n      oas3Selectors,\n      layoutSelectors,\n      layoutActions,\n      getConfigs,\n      getComponent,\n      specUrl,\n    } = this.props\n\n    let {\n      docExpansion,\n      deepLinking,\n    } = getConfigs()\n\n    const isDeepLinkingEnabled = deepLinking && deepLinking !== \"false\"\n\n    const Collapse = getComponent(\"Collapse\")\n    const Markdown = getComponent(\"Markdown\", true)\n    const DeepLink = getComponent(\"DeepLink\")\n    const Link = getComponent(\"Link\")\n\n    let tagDescription = tagObj.getIn([\"tagDetails\", \"description\"], null)\n    let tagExternalDocsDescription = tagObj.getIn([\"tagDetails\", \"externalDocs\", \"description\"])\n    let rawTagExternalDocsUrl = tagObj.getIn([\"tagDetails\", \"externalDocs\", \"url\"])\n    let tagExternalDocsUrl\n    if (isFunc(oas3Selectors) && isFunc(oas3Selectors.selectedServer)) {\n      tagExternalDocsUrl = buildUrl( rawTagExternalDocsUrl, specUrl, { selectedServer: oas3Selectors.selectedServer() } )\n    }    \n\n    let isShownKey = [\"operations-tag\", tag]\n    let showTag = layoutSelectors.isShown(isShownKey, docExpansion === \"full\" || docExpansion === \"list\")\n\n    return (\n      <div className={showTag ? \"opblock-tag-section is-open\" : \"opblock-tag-section\"} >\n\n        <h4\n          onClick={() => layoutActions.show(isShownKey, !showTag)}\n          className={!tagDescription ? \"opblock-tag no-desc\" : \"opblock-tag\" }\n          id={isShownKey.map(v => escapeDeepLinkPath(v)).join(\"-\")}\n          data-tag={tag}\n          data-is-open={showTag}\n          >\n          <DeepLink\n            enabled={isDeepLinkingEnabled}\n            isShown={showTag}\n            path={createDeepLinkPath(tag)}\n            text={tag} />\n          { !tagDescription ? <small></small> :\n            <small>\n                <Markdown source={tagDescription} />\n              </small>\n            }\n\n            <div>\n              { !tagExternalDocsDescription ? null :\n                <small>\n                    { tagExternalDocsDescription }\n                      { tagExternalDocsUrl ? \": \" : null }\n                      { tagExternalDocsUrl ?\n                        <Link\n                            href={sanitizeUrl(tagExternalDocsUrl)}\n                            onClick={(e) => e.stopPropagation()}\n                            target=\"_blank\"\n                            >{tagExternalDocsUrl}</Link> : null\n                          }\n                  </small>\n                }\n            </div>\n\n            <button\n              className=\"expand-operation\"\n              title={showTag ? \"Collapse operation\": \"Expand operation\"}\n              onClick={() => layoutActions.show(isShownKey, !showTag)}>\n\n              <svg className=\"arrow\" width=\"20\" height=\"20\">\n                <use href={showTag ? \"#large-arrow-down\" : \"#large-arrow\"} xlinkHref={showTag ? \"#large-arrow-down\" : \"#large-arrow\"} />\n              </svg>\n            </button>\n        </h4>\n\n        <Collapse isOpened={showTag}>\n          {children}\n        </Collapse>\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { getList } from \"core/utils\"\nimport { getExtensions, sanitizeUrl, escapeDeepLinkPath } from \"core/utils\"\nimport { buildUrl } from \"core/utils/url\"\nimport { Iterable, List } from \"immutable\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\n\nexport default class Operation extends PureComponent {\n  static propTypes = {\n    specPath: ImPropTypes.list.isRequired,\n    operation: PropTypes.instanceOf(Iterable).isRequired,\n    summary: PropTypes.string,\n    response: PropTypes.instanceOf(Iterable),\n    request: PropTypes.instanceOf(Iterable),\n\n    toggleShown: PropTypes.func.isRequired,\n    onTryoutClick: PropTypes.func.isRequired,\n    onCancelClick: PropTypes.func.isRequired,\n    onExecute: PropTypes.func.isRequired,\n\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    authActions: PropTypes.object,\n    authSelectors: PropTypes.object,\n    specActions: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    oas3Selectors: PropTypes.object.isRequired,\n    layoutActions: PropTypes.object.isRequired,\n    layoutSelectors: PropTypes.object.isRequired,\n    fn: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    operation: null,\n    response: null,\n    request: null,\n    specPath: List(),\n    summary: \"\"\n  }\n\n  render() {\n    let {\n      specPath,\n      response,\n      request,\n      toggleShown,\n      onTryoutClick,\n      onCancelClick,\n      onExecute,\n      fn,\n      getComponent,\n      getConfigs,\n      specActions,\n      specSelectors,\n      authActions,\n      authSelectors,\n      oas3Actions,\n      oas3Selectors\n    } = this.props\n    let operationProps = this.props.operation\n\n    let {\n      deprecated,\n      isShown,\n      path,\n      method,\n      op,\n      tag,\n      operationId,\n      allowTryItOut,\n      displayRequestDuration,\n      tryItOutEnabled,\n      executeInProgress\n    } = operationProps.toJS()\n\n    let {\n      description,\n      externalDocs,\n      schemes\n    } = op\n\n    const externalDocsUrl = externalDocs ? buildUrl(externalDocs.url, specSelectors.url(), { selectedServer: oas3Selectors.selectedServer() }) : \"\"\n    let operation = operationProps.getIn([\"op\"])\n    let responses = operation.get(\"responses\")\n    let parameters = getList(operation, [\"parameters\"])\n    let operationScheme = specSelectors.operationScheme(path, method)\n    let isShownKey = [\"operations\", tag, operationId]\n    let extensions = getExtensions(operation)\n\n    const Responses = getComponent(\"responses\")\n    const Parameters = getComponent( \"parameters\" )\n    const Execute = getComponent( \"execute\" )\n    const Clear = getComponent( \"clear\" )\n    const Collapse = getComponent( \"Collapse\" )\n    const Markdown = getComponent(\"Markdown\", true)\n    const Schemes = getComponent( \"schemes\" )\n    const OperationServers = getComponent( \"OperationServers\" )\n    const OperationExt = getComponent( \"OperationExt\" )\n    const OperationSummary = getComponent( \"OperationSummary\" )\n    const Link = getComponent( \"Link\" )\n\n    const { showExtensions } = getConfigs()\n\n    // Merge in Live Response\n    if(responses && response && response.size > 0) {\n      let notDocumented = !responses.get(String(response.get(\"status\"))) && !responses.get(\"default\")\n      response = response.set(\"notDocumented\", notDocumented)\n    }\n\n    let onChangeKey = [ path, method ] // Used to add values to _this_ operation ( indexed by path and method )\n\n    return (\n        <div className={deprecated ? \"opblock opblock-deprecated\" : isShown ? `opblock opblock-${method} is-open` : `opblock opblock-${method}`} id={escapeDeepLinkPath(isShownKey.join(\"-\"))} >\n        <OperationSummary operationProps={operationProps} toggleShown={toggleShown} getComponent={getComponent} authActions={authActions} authSelectors={authSelectors} specPath={specPath} />\n          <Collapse isOpened={isShown}>\n            <div className=\"opblock-body\">\n              { (operation && operation.size) || operation === null ? null :\n                <img height={\"32px\"} width={\"32px\"} src={require(\"core/../img/rolling-load.svg\")} className=\"opblock-loading-animation\" />\n              }\n              { deprecated && <h4 className=\"opblock-title_normal\"> Warning: Deprecated</h4>}\n              { description &&\n                <div className=\"opblock-description-wrapper\">\n                  <div className=\"opblock-description\">\n                    <Markdown source={ description } />\n                  </div>\n                </div>\n              }\n              {\n                externalDocsUrl ?\n                <div className=\"opblock-external-docs-wrapper\">\n                  <h4 className=\"opblock-title_normal\">Find more details</h4>\n                  <div className=\"opblock-external-docs\">\n                    <span className=\"opblock-external-docs__description\">\n                      <Markdown source={ externalDocs.description } />\n                    </span>\n                    <Link target=\"_blank\" className=\"opblock-external-docs__link\" href={sanitizeUrl(externalDocsUrl)}>{externalDocsUrl}</Link>\n                  </div>\n                </div> : null\n              }\n\n              { !operation || !operation.size ? null :\n                <Parameters\n                  parameters={parameters}\n                  specPath={specPath.push(\"parameters\")}\n                  operation={operation}\n                  onChangeKey={onChangeKey}\n                  onTryoutClick = { onTryoutClick }\n                  onCancelClick = { onCancelClick }\n                  tryItOutEnabled = { tryItOutEnabled }\n                  allowTryItOut={allowTryItOut}\n\n                  fn={fn}\n                  getComponent={ getComponent }\n                  specActions={ specActions }\n                  specSelectors={ specSelectors }\n                  pathMethod={ [path, method] }\n                  getConfigs={ getConfigs }\n                  oas3Actions={ oas3Actions }\n                  oas3Selectors={ oas3Selectors }\n                />\n              }\n\n              { !tryItOutEnabled ? null :\n                <OperationServers\n                  getComponent={getComponent}\n                  path={path}\n                  method={method}\n                  operationServers={operation.get(\"servers\")}\n                  pathServers={specSelectors.paths().getIn([path, \"servers\"])}\n                  getSelectedServer={oas3Selectors.selectedServer}\n                  setSelectedServer={oas3Actions.setSelectedServer}\n                  setServerVariableValue={oas3Actions.setServerVariableValue}\n                  getServerVariable={oas3Selectors.serverVariableValue}\n                  getEffectiveServerValue={oas3Selectors.serverEffectiveValue}\n                />\n              }\n\n              {!tryItOutEnabled || !allowTryItOut ? null : schemes && schemes.size ? <div className=\"opblock-schemes\">\n                    <Schemes schemes={ schemes }\n                             path={ path }\n                             method={ method }\n                             specActions={ specActions }\n                             currentScheme={ operationScheme } />\n                  </div> : null\n              }\n\n            <div className={(!tryItOutEnabled || !response || !allowTryItOut) ? \"execute-wrapper\" : \"btn-group\"}>\n              { !tryItOutEnabled || !allowTryItOut ? null :\n\n                  <Execute\n                    operation={ operation }\n                    specActions={ specActions }\n                    specSelectors={ specSelectors }\n                    oas3Selectors={ oas3Selectors }\n                    oas3Actions={ oas3Actions }\n                    path={ path }\n                    method={ method }\n                    onExecute={ onExecute } />\n              }\n\n              { (!tryItOutEnabled || !response || !allowTryItOut) ? null :\n                  <Clear\n                    specActions={ specActions }\n                    path={ path }\n                    method={ method }/>\n              }\n            </div>\n\n            {executeInProgress ? <div className=\"loading-container\"><div className=\"loading\"></div></div> : null}\n\n              { !responses ? null :\n                  <Responses\n                    responses={ responses }\n                    request={ request }\n                    tryItOutResponse={ response }\n                    getComponent={ getComponent }\n                    getConfigs={ getConfigs }\n                    specSelectors={ specSelectors }\n                    oas3Actions={oas3Actions}\n                    oas3Selectors={oas3Selectors}\n                    specActions={ specActions }\n                    produces={specSelectors.producesOptionsFor([path, method]) }\n                    producesValue={ specSelectors.currentProducesFor([path, method]) }\n                    specPath={specPath.push(\"responses\")}\n                    path={ path }\n                    method={ method }\n                    displayRequestDuration={ displayRequestDuration }\n                    fn={fn} />\n              }\n\n              { !showExtensions || !extensions.size ? null :\n                <OperationExt extensions={ extensions } getComponent={ getComponent } />\n              }\n            </div>\n          </Collapse>\n        </div>\n    )\n  }\n\n}\n","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Iterable, List } from \"immutable\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport toString from \"lodash/toString\"\n\n\nexport default class OperationSummary extends PureComponent {\n\n  static propTypes = {\n    specPath: ImPropTypes.list.isRequired,\n    operationProps: PropTypes.instanceOf(Iterable).isRequired,\n    toggleShown: PropTypes.func.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    authActions: PropTypes.object,\n    authSelectors: PropTypes.object,\n  }\n\n  static defaultProps = {\n    operationProps: null,\n    specPath: List(),\n    summary: \"\"\n  }\n\n  render() {\n\n    let {\n      toggleShown,\n      getComponent,\n      authActions,\n      authSelectors,\n      operationProps,\n      specPath,\n    } = this.props\n\n    let {\n      summary,\n      isAuthorized,\n      method,\n      op,\n      showSummary,\n      operationId,\n      originalOperationId,\n      displayOperationId,\n    } = operationProps.toJS()\n\n    let {\n      summary: resolvedSummary,\n    } = op\n\n    let security = operationProps.get(\"security\")\n\n    const AuthorizeOperationBtn = getComponent(\"authorizeOperationBtn\")\n    const OperationSummaryMethod = getComponent(\"OperationSummaryMethod\")\n    const OperationSummaryPath = getComponent(\"OperationSummaryPath\")\n    const JumpToPath = getComponent(\"JumpToPath\", true)\n\n    return (\n\n      <div className={`opblock-summary opblock-summary-${method}`} onClick={toggleShown} >\n        <OperationSummaryMethod method={method} />\n        <OperationSummaryPath getComponent={getComponent} operationProps={operationProps} specPath={specPath} />\n\n        {!showSummary ? null :\n          <div className=\"opblock-summary-description\">\n            {toString(resolvedSummary || summary)}\n          </div>\n        }\n\n        {displayOperationId && (originalOperationId || operationId) ? <span className=\"opblock-summary-operation-id\">{originalOperationId || operationId}</span> : null}\n\n        {\n          (!security || !security.count()) ? null :\n            <AuthorizeOperationBtn\n              isAuthorized={isAuthorized}\n              onClick={() => {\n                const applicableDefinitions = authSelectors.definitionsForRequirements(security)\n                authActions.showDefinitions(applicableDefinitions)\n              }}\n            />\n        }\n        <JumpToPath path={specPath} />{/* TODO: use wrapComponents here, swagger-ui doesn't care about jumpToPath */}\n      </div>\n    )\n\n  }\n}\n","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Iterable } from \"immutable\"\n\nexport default class OperationSummaryMethod extends PureComponent {\n\n  static propTypes = {\n    operationProps: PropTypes.instanceOf(Iterable).isRequired,\n    method: PropTypes.string.isRequired,\n  }\n\n  static defaultProps = {\n    operationProps: null,\n  }\n  render() {\n\n    let {\n      method,\n    } = this.props\n\n    return (\n      <span className=\"opblock-summary-method\">{method.toUpperCase()}</span>\n    )\n  }\n}\n","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Iterable } from \"immutable\"\nimport { createDeepLinkPath } from \"core/utils\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class OperationSummaryPath extends PureComponent{\n\n  static propTypes = {\n    specPath: ImPropTypes.list.isRequired,\n    operationProps: PropTypes.instanceOf(Iterable).isRequired,\n    getComponent: PropTypes.func.isRequired,\n  }\n\n  onCopyCapture = (e) => {\n    // strips injected zero-width spaces (`\\u200b`) from copied content\n    e.clipboardData.setData(\"text/plain\", this.props.operationProps.get(\"path\"))\n    e.preventDefault()\n  }\n\n  render(){\n    let {\n      getComponent,\n      operationProps,\n    } = this.props\n\n\n    let {\n      deprecated,\n      isShown,\n      path,\n      tag,\n      operationId,\n      isDeepLinkingEnabled,\n    } = operationProps.toJS()\n\n    const DeepLink = getComponent( \"DeepLink\" )\n\n    return(\n      <span className={ deprecated ? \"opblock-summary-path__deprecated\" : \"opblock-summary-path\" } \n        onCopyCapture={this.onCopyCapture}\n        data-path={path}>\n        <DeepLink\n            enabled={isDeepLinkingEnabled}\n            isShown={isShown}\n            path={createDeepLinkPath(`${tag}/${operationId}`)}\n            text={path.replace(/\\//g, \"\\u200b/\")} />\n      </span>\n\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const OperationExt = ({ extensions, getComponent }) => {\n    let OperationExtRow = getComponent(\"OperationExtRow\")\n    return (\n      <div className=\"opblock-section\">\n        <div className=\"opblock-section-header\">\n          <h4>Extensions</h4>\n        </div>\n        <div className=\"table-container\">\n\n          <table>\n            <thead>\n              <tr>\n                <td className=\"col_header\">Field</td>\n                <td className=\"col_header\">Value</td>\n              </tr>\n            </thead>\n            <tbody>\n                {\n                    extensions.entrySeq().map(([k, v]) => <OperationExtRow key={`${k}-${v}`} xKey={k} xVal={v} />)\n                }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n}\nOperationExt.propTypes = {\n  extensions: PropTypes.object.isRequired,\n  getComponent: PropTypes.func.isRequired\n}\n\nexport default OperationExt\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const OperationExtRow = ({ xKey, xVal }) => {\n  const xNormalizedValue = !xVal ? null : xVal.toJS ? xVal.toJS() : xVal\n\n    return (<tr>\n        <td>{ xKey }</td>\n        <td>{ JSON.stringify(xNormalizedValue) }</td>\n    </tr>)\n}\nOperationExtRow.propTypes = {\n  xKey: PropTypes.string,\n  xVal: PropTypes.any\n}\n\nexport default OperationExtRow\n","import { Light as SyntaxHighlighter } from \"react-syntax-highlighter\"\n\nimport js from \"react-syntax-highlighter/dist/esm/languages/hljs/javascript\"\nimport json from \"react-syntax-highlighter/dist/esm/languages/hljs/json\"\nimport xml from \"react-syntax-highlighter/dist/esm/languages/hljs/xml\"\nimport bash from \"react-syntax-highlighter/dist/esm/languages/hljs/bash\"\nimport yaml from \"react-syntax-highlighter/dist/esm/languages/hljs/yaml\"\nimport http from \"react-syntax-highlighter/dist/esm/languages/hljs/http\"\n\nimport agate from \"react-syntax-highlighter/dist/esm/styles/hljs/agate\"\nimport arta from \"react-syntax-highlighter/dist/esm/styles/hljs/arta\"\nimport monokai from \"react-syntax-highlighter/dist/esm/styles/hljs/monokai\"\nimport nord from \"react-syntax-highlighter/dist/esm/styles/hljs/nord\"\nimport obsidian from \"react-syntax-highlighter/dist/esm/styles/hljs/obsidian\"\nimport tomorrowNight from \"react-syntax-highlighter/dist/esm/styles/hljs/tomorrow-night\"\n\nSyntaxHighlighter.registerLanguage(\"json\", json)\nSyntaxHighlighter.registerLanguage(\"js\", js)\nSyntaxHighlighter.registerLanguage(\"xml\", xml)\nSyntaxHighlighter.registerLanguage(\"yaml\", yaml)\nSyntaxHighlighter.registerLanguage(\"http\", http)\nSyntaxHighlighter.registerLanguage(\"bash\", bash)\n\nconst styles = {agate, arta, monokai, nord, obsidian, \"tomorrow-night\": tomorrowNight}\nexport const availableStyles = Object.keys(styles)\n\nexport const getStyle = name => {\n    if (!availableStyles.includes(name)) {\n        console.warn(`Request style '${name}' is not available, returning default instead`)\n        return agate\n    }\n    return styles[name]\n}\n\nexport {SyntaxHighlighter, styles}\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport {SyntaxHighlighter, getStyle} from \"core/syntax-highlighting\"\nimport get from \"lodash/get\"\nimport saveAs from \"js-file-download\"\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\n\nexport default class HighlightCode extends Component {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    downloadable: PropTypes.bool,\n    fileName: PropTypes.string,\n    canCopy: PropTypes.bool\n  }\n\n  downloadText = () => {\n    saveAs(this.props.value, this.props.fileName || \"response.txt\")\n  }\n\n  preventYScrollingBeyondElement = (e) => {\n    const target = e.target\n\n    var deltaY = e.nativeEvent.deltaY\n    var contentHeight = target.scrollHeight\n    var visibleHeight = target.offsetHeight\n    var scrollTop = target.scrollTop\n\n    const scrollOffset = visibleHeight + scrollTop\n\n    const isElementScrollable = contentHeight > visibleHeight\n    const isScrollingPastTop = scrollTop === 0 && deltaY < 0\n    const isScrollingPastBottom = scrollOffset >= contentHeight && deltaY > 0\n\n    if (isElementScrollable && (isScrollingPastTop || isScrollingPastBottom)) {\n      e.preventDefault()\n    }\n  }\n\n  render () {\n    let { value, className, downloadable, getConfigs, canCopy } = this.props\n\n    const config = getConfigs ? getConfigs() : {syntaxHighlight: {activated: true, theme: \"agate\"}}\n\n    className = className || \"\"\n\n    const codeBlock = get(config, \"syntaxHighlight.activated\")\n      ? <SyntaxHighlighter\n          className={className + \" microlight\"}\n          onWheel={this.preventYScrollingBeyondElement}\n          style={getStyle(get(config, \"syntaxHighlight.theme\"))}\n          >\n          {value}\n        </SyntaxHighlighter>\n      : <pre onWheel={this.preventYScrollingBeyondElement} className={className + \" microlight\"}>{value}</pre>\n\n    return (\n      <div className=\"highlight-code\">\n        { !downloadable ? null :\n          <div className=\"download-contents\" onClick={this.downloadText}>\n            Download\n          </div>\n        }\n\n        { !canCopy ? null :\n          <div className=\"copy-to-clipboard\">\n            <CopyToClipboard text={value}><button/></CopyToClipboard>\n          </div>\n        }\n\n        { codeBlock }\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport { fromJS, Iterable } from \"immutable\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { defaultStatusCode, getAcceptControllingResponse } from \"core/utils\"\n\nexport default class Responses extends React.Component {\n  static propTypes = {\n    tryItOutResponse: PropTypes.instanceOf(Iterable),\n    responses: PropTypes.instanceOf(Iterable).isRequired,\n    produces: PropTypes.instanceOf(Iterable),\n    producesValue: PropTypes.any,\n    displayRequestDuration: PropTypes.bool.isRequired,\n    path: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    specActions: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    oas3Selectors: PropTypes.object.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n    fn: PropTypes.object.isRequired\n  }\n\n  static defaultProps = {\n    tryItOutResponse: null,\n    produces: fromJS([\"application/json\"]),\n    displayRequestDuration: false\n  }\n\n  // These performance-enhancing checks were disabled as part of Multiple Examples\n  // because they were causing data-consistency issues\n  //\n  // shouldComponentUpdate(nextProps) {\n  //   // BUG: props.tryItOutResponse is always coming back as a new Immutable instance\n  //   let render = this.props.tryItOutResponse !== nextProps.tryItOutResponse\n  //   || this.props.responses !== nextProps.responses\n  //   || this.props.produces !== nextProps.produces\n  //   || this.props.producesValue !== nextProps.producesValue\n  //   || this.props.displayRequestDuration !== nextProps.displayRequestDuration\n  //   || this.props.path !== nextProps.path\n  //   || this.props.method !== nextProps.method\n  //   return render\n  // }\n\n\tonChangeProducesWrapper = ( val ) => this.props.specActions.changeProducesValue([this.props.path, this.props.method], val)\n\n  onResponseContentTypeChange = ({ controlsAcceptHeader, value }) => {\n    const { oas3Actions, path, method } = this.props\n    if(controlsAcceptHeader) {\n      oas3Actions.setResponseContentType({\n        value,\n        path,\n        method\n      })\n    }\n  }\n\n  render() {\n    let {\n      responses,\n      tryItOutResponse,\n      getComponent,\n      getConfigs,\n      specSelectors,\n      fn,\n      producesValue,\n      displayRequestDuration,\n      specPath,\n      path,\n      method,\n      oas3Selectors,\n      oas3Actions,\n    } = this.props\n    let defaultCode = defaultStatusCode( responses )\n\n    const ContentType = getComponent( \"contentType\" )\n    const LiveResponse = getComponent( \"liveResponse\" )\n    const Response = getComponent( \"response\" )\n\n    let produces = this.props.produces && this.props.produces.size ? this.props.produces : Responses.defaultProps.produces\n\n    const isSpecOAS3 = specSelectors.isOAS3()\n\n    const acceptControllingResponse = isSpecOAS3 ?\n      getAcceptControllingResponse(responses) : null\n\n    return (\n      <div className=\"responses-wrapper\">\n        <div className=\"opblock-section-header\">\n          <h4>Responses</h4>\n            { specSelectors.isOAS3() ? null : <label>\n              <span>Response content type</span>\n              <ContentType value={producesValue}\n                         onChange={this.onChangeProducesWrapper}\n                         contentTypes={produces}\n                         className=\"execute-content-type\"/>\n                     </label> }\n        </div>\n        <div className=\"responses-inner\">\n          {\n            !tryItOutResponse ? null\n                              : <div>\n                                  <LiveResponse response={ tryItOutResponse }\n                                                getComponent={ getComponent }\n                                                getConfigs={ getConfigs }\n                                                specSelectors={ specSelectors }\n                                                path={ this.props.path }\n                                                method={ this.props.method }\n                                                displayRequestDuration={ displayRequestDuration } />\n                                  <h4>Responses</h4>\n                                </div>\n\n          }\n\n          <table className=\"responses-table\">\n            <thead>\n              <tr className=\"responses-header\">\n                <td className=\"col_header response-col_status\">Code</td>\n                <td className=\"col_header response-col_description\">Description</td>\n                { specSelectors.isOAS3() ? <td className=\"col col_header response-col_links\">Links</td> : null }\n              </tr>\n            </thead>\n            <tbody>\n              {\n                responses.entrySeq().map( ([code, response]) => {\n\n                  let className = tryItOutResponse && tryItOutResponse.get(\"status\") == code ? \"response_current\" : \"\"\n                  return (\n                    <Response key={ code }\n                              path={path}\n                              method={method}\n                              specPath={specPath.push(code)}\n                              isDefault={defaultCode === code}\n                              fn={fn}\n                              className={ className }\n                              code={ code }\n                              response={ response }\n                              specSelectors={ specSelectors }\n                              controlsAcceptHeader={response === acceptControllingResponse}\n                              onContentTypeChange={this.onResponseContentTypeChange}\n                              contentType={ producesValue }\n                              getConfigs={ getConfigs }\n                              activeExamplesKey={oas3Selectors.activeExamplesMember(\n                                path,\n                                method,\n                                \"responses\",\n                                code\n                              )}\n                              oas3Actions={oas3Actions}\n                              getComponent={ getComponent }/>\n                    )\n                }).toArray()\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport cx from \"classnames\"\nimport { fromJS, Seq, Iterable, List, Map } from \"immutable\"\nimport { getSampleSchema, fromJSOrdered, stringify } from \"core/utils\"\n\nconst getExampleComponent = ( sampleResponse, HighlightCode, getConfigs ) => {\n  if (\n    sampleResponse !== undefined &&\n    sampleResponse !== null\n  ) { return <div>\n      <HighlightCode className=\"example\" getConfigs={ getConfigs } value={ stringify(sampleResponse) } />\n    </div>\n  }\n  return null\n}\n\nexport default class Response extends React.Component {\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      responseContentType: \"\",\n    }\n  }\n\n  static propTypes = {\n    path: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n    code: PropTypes.string.isRequired,\n    response: PropTypes.instanceOf(Iterable),\n    className: PropTypes.string,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n    fn: PropTypes.object.isRequired,\n    contentType: PropTypes.string,\n    activeExamplesKey: PropTypes.string,\n    controlsAcceptHeader: PropTypes.bool,\n    onContentTypeChange: PropTypes.func\n  }\n\n  static defaultProps = {\n    response: fromJS({}),\n    onContentTypeChange: () => {}\n  };\n\n  _onContentTypeChange = (value) => {\n    const { onContentTypeChange, controlsAcceptHeader } = this.props\n    this.setState({ responseContentType: value })\n    onContentTypeChange({\n      value: value,\n      controlsAcceptHeader\n    })\n  }\n\n  getTargetExamplesKey = () => {\n    const { response, contentType, activeExamplesKey } = this.props\n\n    const activeContentType = this.state.responseContentType || contentType\n    const activeMediaType = response.getIn([\"content\", activeContentType], Map({}))\n    const examplesForMediaType = activeMediaType.get(\"examples\", null)\n\n    const firstExamplesKey = examplesForMediaType.keySeq().first()\n    return activeExamplesKey || firstExamplesKey\n  }\n\n  render() {\n    let {\n      path,\n      method,\n      code,\n      response,\n      className,\n      specPath,\n      fn,\n      getComponent,\n      getConfigs,\n      specSelectors,\n      contentType,\n      controlsAcceptHeader,\n      oas3Actions,\n    } = this.props\n\n    let { inferSchema } = fn\n    let isOAS3 = specSelectors.isOAS3()\n\n    let headers = response.get(\"headers\")\n    let links = response.get(\"links\")\n    const Headers = getComponent(\"headers\")\n    const HighlightCode = getComponent(\"highlightCode\")\n    const ModelExample = getComponent(\"modelExample\")\n    const Markdown = getComponent(\"Markdown\", true)\n    const OperationLink = getComponent(\"operationLink\")\n    const ContentType = getComponent(\"contentType\")\n    const ExamplesSelect = getComponent(\"ExamplesSelect\")\n    const Example = getComponent(\"Example\")\n\n\n    var sampleResponse\n    var schema, specPathWithPossibleSchema\n\n    const activeContentType = this.state.responseContentType || contentType\n    const activeMediaType = response.getIn([\"content\", activeContentType], Map({}))\n    const examplesForMediaType = activeMediaType.get(\"examples\", null)\n\n    // Goal: find a schema value for `schema`\n    if(isOAS3) {\n      const oas3SchemaForContentType = activeMediaType.get(\"schema\")\n\n      schema = oas3SchemaForContentType ? inferSchema(oas3SchemaForContentType.toJS()) : null\n      specPathWithPossibleSchema = oas3SchemaForContentType ? List([\"content\", this.state.responseContentType, \"schema\"]) : specPath\n    } else {\n      schema = response.get(\"schema\")\n      specPathWithPossibleSchema = response.has(\"schema\") ? specPath.push(\"schema\") : specPath\n    }\n\n    // Goal: find an example value for `sampleResponse`\n    if(isOAS3) {\n      const oas3SchemaForContentType = activeMediaType.get(\"schema\", Map({}))\n\n      if(examplesForMediaType) {\n        const targetExamplesKey = this.getTargetExamplesKey()\n        const targetExample = examplesForMediaType.get(targetExamplesKey, Map({}))\n        sampleResponse = stringify(targetExample.get(\"value\"))\n      } else if(activeMediaType.get(\"example\") !== undefined) {\n        // use the example key's value\n        sampleResponse = stringify(activeMediaType.get(\"example\"))\n      } else {\n        // use an example value generated based on the schema\n        sampleResponse = getSampleSchema(oas3SchemaForContentType.toJS(), this.state.responseContentType, {\n          includeReadOnly: true\n        })\n      }\n    } else {\n      if(response.getIn([\"examples\", activeContentType])) {\n        sampleResponse = response.getIn([\"examples\", activeContentType])\n      } else {\n        sampleResponse = schema ? getSampleSchema(\n          schema.toJS(),\n          activeContentType,\n          {\n            includeReadOnly: true,\n            includeWriteOnly: true // writeOnly has no filtering effect in swagger 2.0\n          }\n        ) : null\n      }\n    }\n\n    let example = getExampleComponent( sampleResponse, HighlightCode, getConfigs )\n\n    return (\n      <tr className={ \"response \" + ( className || \"\") } data-code={code}>\n        <td className=\"response-col_status\">\n          { code }\n        </td>\n        <td className=\"response-col_description\">\n\n          <div className=\"response-col_description__inner\">\n            <Markdown source={ response.get( \"description\" ) } />\n          </div>\n\n          {isOAS3 && response.get(\"content\") ? (\n            <section className=\"response-controls\">\n              <div\n                className={cx(\"response-control-media-type\", {\n                  \"response-control-media-type--accept-controller\": controlsAcceptHeader\n                })}\n              >\n                <small className=\"response-control-media-type__title\">\n                  Media type\n                </small>\n                <ContentType\n                  value={this.state.responseContentType}\n                  contentTypes={\n                    response.get(\"content\")\n                      ? response.get(\"content\").keySeq()\n                      : Seq()\n                  }\n                  onChange={this._onContentTypeChange}\n                />\n                {controlsAcceptHeader ? (\n                  <small className=\"response-control-media-type__accept-message\">\n                    Controls <code>Accept</code> header.\n                  </small>\n                ) : null}\n              </div>\n              {examplesForMediaType ? (\n                <div className=\"response-control-examples\">\n                  <small className=\"response-control-examples__title\">\n                    Examples\n                  </small>\n                  <ExamplesSelect\n                    examples={examplesForMediaType}\n                    currentExampleKey={this.getTargetExamplesKey()}\n                    onSelect={key =>\n                      oas3Actions.setActiveExamplesMember({\n                        name: key,\n                        pathMethod: [path, method],\n                        contextType: \"responses\",\n                        contextName: code\n                      })\n                    }\n                    showLabels={false}\n                  />\n                </div>\n              ) : null}\n            </section>\n          ) : null}\n\n          { example || schema ? (\n            <ModelExample\n              specPath={specPathWithPossibleSchema}\n              getComponent={ getComponent }\n              getConfigs={ getConfigs }\n              specSelectors={ specSelectors }\n              schema={ fromJSOrdered(schema) }\n              example={ example }\n              includeReadOnly={ true }/>\n          ) : null }\n\n          { isOAS3 && examplesForMediaType ? (\n              <Example\n                example={examplesForMediaType.get(this.getTargetExamplesKey(), Map({}))}\n                getComponent={getComponent}\n                getConfigs={getConfigs}\n                omitValue={true}\n              />\n          ) : null}\n\n          { headers ? (\n            <Headers\n              headers={ headers }\n              getComponent={ getComponent }\n            />\n          ) : null}\n\n        </td>\n        {isOAS3 ? <td className=\"response-col_links\">\n          { links ?\n            links.toSeq().map((link, key) => {\n              return <OperationLink key={key} name={key} link={ link } getComponent={getComponent}/>\n            })\n          : <i>No links</i>}\n        </td> : null}\n      </tr>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport formatXml from \"xml-but-prettier\"\nimport toLower from \"lodash/toLower\"\nimport { extractFileNameFromContentDispositionHeader } from \"core/utils\"\nimport win from \"core/window\"\n\nexport default class ResponseBody extends React.PureComponent {\n  state = {\n    parsedContent: null\n  }\n\n  static propTypes = {\n    content: PropTypes.any.isRequired,\n    contentType: PropTypes.string,\n    getConfigs: PropTypes.func.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    headers: PropTypes.object,\n    url: PropTypes.string\n  }\n\n  updateParsedContent = (prevContent) => {\n    const { content } = this.props\n\n    if(prevContent === content) {\n      return\n    }\n\n    if(content && content instanceof Blob) {\n      var reader = new FileReader()\n      reader.onload = () => {\n        this.setState({\n          parsedContent: reader.result\n        })\n      }\n      reader.readAsText(content)\n    } else {\n      this.setState({\n        parsedContent: content.toString()\n      })\n    }\n  }\n\n  componentDidMount() {\n    this.updateParsedContent(null)\n  }\n\n  componentDidUpdate(prevProps) {\n    this.updateParsedContent(prevProps.content)\n  }\n\n  render() {\n    let { content, contentType, url, headers={}, getConfigs, getComponent } = this.props\n    const { parsedContent } = this.state\n    const HighlightCode = getComponent(\"highlightCode\")\n    const downloadName = \"response_\" + new Date().getTime()\n    let body, bodyEl\n    url = url || \"\"\n\n    if (\n      /^application\\/octet-stream/i.test(contentType) ||\n      (headers[\"Content-Disposition\"] && (/attachment/i).test(headers[\"Content-Disposition\"])) ||\n      (headers[\"content-disposition\"] && (/attachment/i).test(headers[\"content-disposition\"])) ||\n      (headers[\"Content-Description\"] && (/File Transfer/i).test(headers[\"Content-Description\"])) ||\n      (headers[\"content-description\"] && (/File Transfer/i).test(headers[\"content-description\"]))) {\n      // Download\n\n      if (\"Blob\" in window) {\n        let type = contentType || \"text/html\"\n        let blob = (content instanceof Blob) ? content : new Blob([content], {type: type})\n        let href = window.URL.createObjectURL(blob)\n        let fileName = url.substr(url.lastIndexOf(\"/\") + 1)\n        let download = [type, fileName, href].join(\":\")\n\n        // Use filename from response header,\n        // First check if filename is quoted (e.g. contains space), if no, fallback to not quoted check\n        let disposition = headers[\"content-disposition\"] || headers[\"Content-Disposition\"]\n        if (typeof disposition !== \"undefined\") {\n          let responseFilename = extractFileNameFromContentDispositionHeader(disposition)\n          if (responseFilename !== null) {\n            download = responseFilename\n          }\n        }\n\n        if(win.navigator && win.navigator.msSaveOrOpenBlob) {\n            bodyEl = <div><a href={ href } onClick={() => win.navigator.msSaveOrOpenBlob(blob, download)}>{ \"Download file\" }</a></div>\n        } else {\n            bodyEl = <div><a href={ href } download={ download }>{ \"Download file\" }</a></div>\n        }\n      } else {\n        bodyEl = <pre className=\"microlight\">Download headers detected but your browser does not support downloading binary via XHR (Blob).</pre>\n      }\n\n      // Anything else (CORS)\n    } else if (/json/i.test(contentType)) {\n      // JSON\n      try {\n        body = JSON.stringify(JSON.parse(content), null, \"  \")\n      } catch (error) {\n        body = \"can't parse JSON.  Raw result:\\n\\n\" + content\n      }\n\n      bodyEl = <HighlightCode downloadable fileName={`${downloadName}.json`} value={ body } getConfigs={ getConfigs } canCopy />\n\n      // XML\n    } else if (/xml/i.test(contentType)) {\n      body = formatXml(content, {\n        textNodesOnSameLine: true,\n        indentor: \"  \"\n      })\n      bodyEl = <HighlightCode downloadable fileName={`${downloadName}.xml`} value={ body } getConfigs={ getConfigs } canCopy />\n\n      // HTML or Plain Text\n    } else if (toLower(contentType) === \"text/html\" || /text\\/plain/.test(contentType)) {\n      bodyEl = <HighlightCode downloadable fileName={`${downloadName}.html`} value={ content } getConfigs={ getConfigs } canCopy />\n\n      // Image\n    } else if (/^image\\//i.test(contentType)) {\n      if(contentType.includes(\"svg\")) {\n        bodyEl = <div> { content } </div>\n      } else {\n        bodyEl = <img className=\"full-width\" src={ window.URL.createObjectURL(content) } />\n      }\n\n      // Audio\n    } else if (/^audio\\//i.test(contentType)) {\n      bodyEl = <pre className=\"microlight\"><audio controls><source src={ url } type={ contentType } /></audio></pre>\n    } else if (typeof content === \"string\") {\n      bodyEl = <HighlightCode downloadable fileName={`${downloadName}.txt`} value={ content } getConfigs={ getConfigs } canCopy />\n    } else if ( content.size > 0 ) {\n      // We don't know the contentType, but there was some content returned\n      if(parsedContent) {\n        // We were able to squeeze something out of content\n        // in `updateParsedContent`, so let's display it\n        bodyEl = <div>\n          <p className=\"i\">\n            Unrecognized response type; displaying content as text.\n          </p>\n          <HighlightCode downloadable fileName={`${downloadName}.txt`} value={ parsedContent } getConfigs={ getConfigs } canCopy />\n        </div>\n\n      } else {\n        // Give up\n        bodyEl = <p className=\"i\">\n          Unrecognized response type; unable to display.\n        </p>\n      }\n    } else {\n      // We don't know the contentType and there was no content returned\n      bodyEl = null\n    }\n\n    return ( !bodyEl ? null : <div>\n        <h5>Response body</h5>\n        { bodyEl }\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport Im, { Map, List } from \"immutable\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\n// More readable, just iterate over maps, only\nconst eachMap = (iterable, fn) => iterable.valueSeq().filter(Im.Map.isMap).map(fn)\n\nexport default class Parameters extends Component {\n\n  constructor(props) {\n   super(props)\n   this.state = {\n     callbackVisible: false,\n     parametersVisible: true\n   }\n }\n\n  static propTypes = {\n    parameters: ImPropTypes.list.isRequired,\n    operation: PropTypes.object.isRequired,\n    specActions: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    oas3Selectors: PropTypes.object.isRequired,\n    fn: PropTypes.object.isRequired,\n    tryItOutEnabled: PropTypes.bool,\n    allowTryItOut: PropTypes.bool,\n    onTryoutClick: PropTypes.func,\n    onCancelClick: PropTypes.func,\n    onChangeKey: PropTypes.array,\n    pathMethod: PropTypes.array.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n  }\n\n\n  static defaultProps = {\n    onTryoutClick: Function.prototype,\n    onCancelClick: Function.prototype,\n    tryItOutEnabled: false,\n    allowTryItOut: true,\n    onChangeKey: [],\n    specPath: [],\n  }\n\n  onChange = ( param, value, isXml ) => {\n    let {\n      specActions: { changeParamByIdentity },\n      onChangeKey,\n    } = this.props\n\n    changeParamByIdentity(onChangeKey, param, value, isXml)\n  }\n\n  onChangeConsumesWrapper = ( val ) => {\n    let {\n      specActions: { changeConsumesValue },\n      onChangeKey\n    } = this.props\n\n    changeConsumesValue(onChangeKey, val)\n  }\n\n  toggleTab = (tab) => {\n    if(tab === \"parameters\"){\n      return this.setState({\n        parametersVisible: true,\n        callbackVisible: false\n      })\n    }else if(tab === \"callbacks\"){\n      return this.setState({\n        callbackVisible: true,\n        parametersVisible: false\n      })\n    }\n  }\n\n  render(){\n\n    let {\n      onTryoutClick,\n      onCancelClick,\n      parameters,\n      allowTryItOut,\n      tryItOutEnabled,\n      specPath,\n\n      fn,\n      getComponent,\n      getConfigs,\n      specSelectors,\n      specActions,\n      pathMethod,\n      oas3Actions,\n      oas3Selectors,\n      operation\n    } = this.props\n\n    const ParameterRow = getComponent(\"parameterRow\")\n    const TryItOutButton = getComponent(\"TryItOutButton\")\n    const ContentType = getComponent(\"contentType\")\n    const Callbacks = getComponent(\"Callbacks\", true)\n    const RequestBody = getComponent(\"RequestBody\", true)\n\n    const isExecute = tryItOutEnabled && allowTryItOut\n    const isOAS3 = specSelectors.isOAS3()\n\n\n    const requestBody = operation.get(\"requestBody\")\n    return (\n      <div className=\"opblock-section\">\n        <div className=\"opblock-section-header\">\n          { isOAS3 ? (\n          <div className=\"tab-header\">\n              <div onClick={() => this.toggleTab(\"parameters\")} className={`tab-item ${this.state.parametersVisible && \"active\"}`}>\n                <h4 className=\"opblock-title\"><span>Parameters</span></h4>\n              </div>\n              { operation.get(\"callbacks\") ?\n                (\n                  <div onClick={() => this.toggleTab(\"callbacks\")} className={`tab-item ${this.state.callbackVisible && \"active\"}`}>\n                    <h4 className=\"opblock-title\"><span>Callbacks</span></h4>\n                  </div>\n                ) : null\n              }\n            </div>\n          ) : (\n            <div className=\"tab-header\">\n            <h4 className=\"opblock-title\">Parameters</h4>\n          </div>\n          )}\n            { allowTryItOut ? (\n              <TryItOutButton enabled={ tryItOutEnabled } onCancelClick={ onCancelClick } onTryoutClick={ onTryoutClick } />\n            ) : null }\n        </div>\n        {this.state.parametersVisible ? <div className=\"parameters-container\">\n        { !parameters.count() ? <div className=\"opblock-description-wrapper\"><p>No parameters</p></div> :\n          <div className=\"table-container\">\n            <table className=\"parameters\">\n              <thead>\n                <tr>\n                  <th className=\"col_header parameters-col_name\">Name</th>\n                  <th className=\"col_header parameters-col_description\">Description</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  eachMap(parameters, (parameter, i) => (\n                    <ParameterRow\n                      fn={ fn }\n                      specPath={specPath.push(i.toString())}\n                      getComponent={ getComponent }\n                      getConfigs={ getConfigs }\n                      rawParam={ parameter }\n                      param={ specSelectors.parameterWithMetaByIdentity(pathMethod, parameter) }\n                      key={ `${parameter.get( \"in\" )}.${parameter.get(\"name\")}` }\n                      onChange={ this.onChange }\n                      onChangeConsumes={this.onChangeConsumesWrapper}\n                      specSelectors={ specSelectors }\n                      specActions={specActions}\n                      oas3Actions={oas3Actions}\n                      oas3Selectors={oas3Selectors}\n                      pathMethod={ pathMethod }\n                      isExecute={ isExecute }/>\n                  )).toArray()\n                }\n              </tbody>\n            </table>\n          </div>\n        }\n        </div> : null }\n\n        {this.state.callbackVisible ? <div className=\"callbacks-container opblock-description-wrapper\">\n          <Callbacks\n            callbacks={Map(operation.get(\"callbacks\"))}\n            specPath={specPath.slice(0, -1).push(\"callbacks\")}\n          />\n        </div> : null }\n        {\n          isOAS3 && requestBody && this.state.parametersVisible &&\n          <div className=\"opblock-section opblock-section-request-body\">\n            <div className=\"opblock-section-header\">\n              <h4 className={`opblock-title parameter__name ${requestBody.get(\"required\") && \"required\"}`}>Request body</h4>\n              <label>\n                <ContentType\n                  value={oas3Selectors.requestContentType(...pathMethod)}\n                  contentTypes={ requestBody.get(\"content\", List()).keySeq() }\n                  onChange={(value) => {\n                    oas3Actions.setRequestContentType({ value, pathMethod })\n                    oas3Actions.initRequestBodyValidateError({ pathMethod })\n                  }}\n                  className=\"body-param-content-type\" />\n              </label>\n            </div>\n            <div className=\"opblock-description-wrapper\">\n              <RequestBody\n                specPath={specPath.slice(0, -1).push(\"requestBody\")}\n                requestBody={requestBody}\n                requestBodyValue={oas3Selectors.requestBodyValue(...pathMethod)}\n                requestBodyInclusionSetting={oas3Selectors.requestBodyInclusionSetting(...pathMethod)}\n                requestBodyErrors={oas3Selectors.requestBodyErrors(...pathMethod)}\n                isExecute={isExecute}\n                getConfigs={getConfigs}\n                activeExamplesKey={oas3Selectors.activeExamplesMember(\n                  ...pathMethod,\n                  \"requestBody\",\n                  \"requestBody\" // RBs are currently not stored per-mediaType\n                )}\n                updateActiveExamplesKey={key => {\n                  this.props.oas3Actions.setActiveExamplesMember({\n                    name: key,\n                    pathMethod: this.props.pathMethod,\n                    contextType: \"requestBody\",\n                    contextName: \"requestBody\" // RBs are currently not stored per-mediaType\n                  })\n                }\n                }\n                onChange={(value, path) => {\n                  if(path) {\n                    const lastValue = oas3Selectors.requestBodyValue(...pathMethod)\n                    const usableValue = Map.isMap(lastValue) ? lastValue : Map()\n                    return oas3Actions.setRequestBodyValue({\n                      pathMethod,\n                      value: usableValue.setIn(path, value)\n                    })\n                  }\n                  oas3Actions.setRequestBodyValue({ value, pathMethod })\n                }}\n                onChangeIncludeEmpty={(name, value) => {\n                  oas3Actions.setRequestBodyInclusion({\n                    pathMethod,\n                    value,\n                    name,\n                  })\n                }}\n                contentType={oas3Selectors.requestContentType(...pathMethod)}/>\n            </div>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const ParameterExt = ({ xKey, xVal }) => {\n    return <div className=\"parameter__extension\">{ xKey }: { String(xVal) }</div>\n}\nParameterExt.propTypes = {\n  xKey: PropTypes.string,\n  xVal: PropTypes.any\n}\n\nexport default ParameterExt\n","import React, { Component } from \"react\"\nimport cx from \"classnames\"\nimport PropTypes from \"prop-types\"\n\n\nconst noop = () => { }\n\nconst ParameterIncludeEmptyPropTypes = {\n  isIncluded: PropTypes.bool.isRequired,\n  isDisabled: PropTypes.bool.isRequired,\n  isIncludedOptions: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n}\n\nconst ParameterIncludeEmptyDefaultProps = {\n  onChange: noop,\n  isIncludedOptions: {},\n}\nexport default class ParameterIncludeEmpty extends Component {\n  static propTypes = ParameterIncludeEmptyPropTypes\n  static defaultProps = ParameterIncludeEmptyDefaultProps\n\n  componentDidMount() {\n    const { isIncludedOptions, onChange } = this.props\n    const { shouldDispatchInit, defaultValue } = isIncludedOptions\n    if (shouldDispatchInit) {\n      onChange(defaultValue)\n    }\n  }\n\n  onCheckboxChange = e => {\n    const { onChange } = this.props\n    onChange(e.target.checked)\n  }\n\n  render() {\n    let { isIncluded, isDisabled } = this.props\n\n    return (\n      <div>\n        <label className={cx(\"parameter__empty_value_toggle\", {\n          \"disabled\": isDisabled\n        })}>\n          <input type=\"checkbox\" \n            disabled={isDisabled}\n            checked={!isDisabled && isIncluded}\n            onChange={this.onCheckboxChange} />\n          Send empty value\n        </label>\n      </div>\n    )\n  }\n}\n","import React, { Component } from \"react\"\nimport { Map, List } from \"immutable\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport win from \"core/window\"\nimport { getSampleSchema, getExtensions, getCommonExtensions, numberToString, stringify, isEmptyValue } from \"core/utils\"\nimport getParameterSchema from \"../../helpers/get-parameter-schema.js\"\n\nexport default class ParameterRow extends Component {\n  static propTypes = {\n    onChange: PropTypes.func.isRequired,\n    param: PropTypes.object.isRequired,\n    rawParam: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    fn: PropTypes.object.isRequired,\n    isExecute: PropTypes.bool,\n    onChangeConsumes: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    specActions: PropTypes.object.isRequired,\n    pathMethod: PropTypes.array.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    oas3Selectors: PropTypes.object.isRequired,\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.setDefaultValue()\n  }\n\n  componentWillReceiveProps(props) {\n    let { specSelectors, pathMethod, rawParam } = props\n    let isOAS3 = specSelectors.isOAS3()\n\n    let parameterWithMeta = specSelectors.parameterWithMetaByIdentity(pathMethod, rawParam) || new Map()\n    // fallback, if the meta lookup fails\n    parameterWithMeta = parameterWithMeta.isEmpty() ? rawParam : parameterWithMeta\n\n    let enumValue\n\n    if(isOAS3) {\n      let { schema } = getParameterSchema(parameterWithMeta, { isOAS3 })\n      enumValue = schema ? schema.get(\"enum\") : undefined\n    } else {\n      enumValue = parameterWithMeta ? parameterWithMeta.get(\"enum\") : undefined\n    }\n    let paramValue = parameterWithMeta ? parameterWithMeta.get(\"value\") : undefined\n\n    let value\n\n    if ( paramValue !== undefined ) {\n      value = paramValue\n    } else if ( rawParam.get(\"required\") && enumValue && enumValue.size ) {\n      value = enumValue.first()\n    }\n\n    if ( value !== undefined && value !== paramValue ) {\n      this.onChangeWrapper(numberToString(value))\n    }\n    // todo: could check if schema here; if not, do not call. impact?\n    this.setDefaultValue()\n  }\n\n  onChangeWrapper = (value, isXml = false) => {\n    let { onChange, rawParam } = this.props\n    let valueForUpstream\n\n    // Coerce empty strings and empty Immutable objects to null\n    if(value === \"\" || (value && value.size === 0)) {\n      valueForUpstream = null\n    } else {\n      valueForUpstream = value\n    }\n\n    return onChange(rawParam, valueForUpstream, isXml)\n  }\n\n  _onExampleSelect = (key, /* { isSyntheticChange } = {} */) => {\n    this.props.oas3Actions.setActiveExamplesMember({\n      name: key,\n      pathMethod: this.props.pathMethod,\n      contextType: \"parameters\",\n      contextName: this.getParamKey()\n    })\n  }\n\n  onChangeIncludeEmpty = (newValue) => {\n    let { specActions, param, pathMethod } = this.props\n    const paramName = param.get(\"name\")\n    const paramIn = param.get(\"in\")\n    return specActions.updateEmptyParamInclusion(pathMethod, paramName, paramIn, newValue)\n  }\n\n  setDefaultValue = () => {\n    let { specSelectors, pathMethod, rawParam, oas3Selectors } = this.props\n\n    const paramWithMeta = specSelectors.parameterWithMetaByIdentity(pathMethod, rawParam) || Map()\n    const { schema } = getParameterSchema(paramWithMeta, { isOAS3: specSelectors.isOAS3() })\n    const parameterMediaType = paramWithMeta\n      .get(\"content\", Map())\n      .keySeq()\n      .first()\n\n    // getSampleSchema could return null\n    const generatedSampleValue = schema ? getSampleSchema(schema.toJS(), parameterMediaType, {\n\n      includeWriteOnly: true\n    }) : null\n\n    if (!paramWithMeta || paramWithMeta.get(\"value\") !== undefined) {\n      return\n    }\n\n    if( paramWithMeta.get(\"in\") !== \"body\" ) {\n      let initialValue\n\n      //// Find an initial value\n\n      if (specSelectors.isSwagger2()) {\n        initialValue =\n          paramWithMeta.get(\"x-example\") !== undefined\n          ? paramWithMeta.get(\"x-example\")\n          : paramWithMeta.getIn([\"schema\", \"example\"]) !== undefined\n          ? paramWithMeta.getIn([\"schema\", \"example\"])\n          : (schema && schema.getIn([\"default\"]))\n      } else if (specSelectors.isOAS3()) {\n        const currentExampleKey = oas3Selectors.activeExamplesMember(...pathMethod, \"parameters\", this.getParamKey())\n        initialValue = \n          paramWithMeta.getIn([\"examples\", currentExampleKey, \"value\"]) !== undefined\n          ? paramWithMeta.getIn([\"examples\", currentExampleKey, \"value\"])\n          : paramWithMeta.getIn([\"content\", parameterMediaType, \"example\"]) !== undefined\n          ? paramWithMeta.getIn([\"content\", parameterMediaType, \"example\"])\n          : paramWithMeta.get(\"example\") !== undefined\n          ? paramWithMeta.get(\"example\")\n          : (schema && schema.get(\"example\")) !== undefined\n          ? (schema && schema.get(\"example\"))\n          : (schema && schema.get(\"default\")) !== undefined\n          ? (schema && schema.get(\"default\"))\n          : paramWithMeta.get(\"default\") // ensures support for `parameterMacro`\n      }\n\n      //// Process the initial value\n\n      if(initialValue !== undefined && !List.isList(initialValue)) {\n        // Stringify if it isn't a List\n        initialValue = stringify(initialValue)\n      }\n\n      //// Dispatch the initial value\n\n      if(initialValue !== undefined) {\n        this.onChangeWrapper(initialValue)\n      } else if(\n        schema && schema.get(\"type\") === \"object\"\n        && generatedSampleValue\n        && !paramWithMeta.get(\"examples\")\n      ) {\n        // Object parameters get special treatment.. if the user doesn't set any\n        // default or example values, we'll provide initial values generated from\n        // the schema.\n        // However, if `examples` exist for the parameter, we won't do anything,\n        // so that the appropriate `examples` logic can take over.\n        this.onChangeWrapper(\n          List.isList(generatedSampleValue) ? (\n            generatedSampleValue\n          ) : (\n            stringify(generatedSampleValue)\n          )\n        )\n      }\n    }\n  }\n\n  getParamKey() {\n    const { param } = this.props\n\n    if(!param) return null\n\n    return `${param.get(\"name\")}-${param.get(\"in\")}`\n  }\n\n  render() {\n    let {param, rawParam, getComponent, getConfigs, isExecute, fn, onChangeConsumes, specSelectors, pathMethod, specPath, oas3Selectors} = this.props\n\n    let isOAS3 = specSelectors.isOAS3()\n\n    const { showExtensions, showCommonExtensions } = getConfigs()\n\n    if(!param) {\n      param = rawParam\n    }\n\n    if(!rawParam) return null\n\n    // const onChangeWrapper = (value) => onChange(param, value)\n    const JsonSchemaForm = getComponent(\"JsonSchemaForm\")\n    const ParamBody = getComponent(\"ParamBody\")\n    let inType = param.get(\"in\")\n    let bodyParam = inType !== \"body\" ? null\n      : <ParamBody getComponent={getComponent}\n                   getConfigs={ getConfigs }\n                   fn={fn}\n                   param={param}\n                   consumes={ specSelectors.consumesOptionsFor(pathMethod) }\n                   consumesValue={ specSelectors.contentTypeValues(pathMethod).get(\"requestContentType\") }\n                   onChange={this.onChangeWrapper}\n                   onChangeConsumes={onChangeConsumes}\n                   isExecute={ isExecute }\n                   specSelectors={ specSelectors }\n                   pathMethod={ pathMethod }\n      />\n\n    const ModelExample = getComponent(\"modelExample\")\n    const Markdown = getComponent(\"Markdown\", true)\n    const ParameterExt = getComponent(\"ParameterExt\")\n    const ParameterIncludeEmpty = getComponent(\"ParameterIncludeEmpty\")\n    const ExamplesSelectValueRetainer = getComponent(\"ExamplesSelectValueRetainer\")\n    const Example = getComponent(\"Example\")\n\n    let { schema } = getParameterSchema(param, { isOAS3 })\n    let paramWithMeta = specSelectors.parameterWithMetaByIdentity(pathMethod, rawParam) || Map()\n\n    let format = schema ? schema.get(\"format\") : null\n    let type = schema ? schema.get(\"type\") : null\n    let itemType = schema ? schema.getIn([\"items\", \"type\"]) : null\n    let isFormData = inType === \"formData\"\n    let isFormDataSupported = \"FormData\" in win\n    let required = param.get(\"required\")\n\n    let value = paramWithMeta ? paramWithMeta.get(\"value\") : \"\"\n    let commonExt = showCommonExtensions ? getCommonExtensions(schema) : null\n    let extensions = showExtensions ? getExtensions(param) : null\n\n    let paramItems // undefined\n    let paramEnum // undefined\n    let paramDefaultValue // undefined\n    let paramExample // undefined\n    let isDisplayParamEnum = false\n\n    if ( param !== undefined && schema ) {\n      paramItems = schema.get(\"items\")\n    }\n\n    if (paramItems !== undefined) {\n      paramEnum = paramItems.get(\"enum\")\n      paramDefaultValue = paramItems.get(\"default\")\n    } else if (schema) {\n      paramEnum = schema.get(\"enum\")\n    }\n\n    if ( paramEnum && paramEnum.size && paramEnum.size > 0) {\n      isDisplayParamEnum = true\n    }\n\n    // Default and Example Value for readonly doc\n    if ( param !== undefined ) {\n      if (schema) {\n        paramDefaultValue = schema.get(\"default\")\n      }\n      if (paramDefaultValue === undefined) {\n        paramDefaultValue = param.get(\"default\")\n      }\n      paramExample = param.get(\"example\")\n      if (paramExample === undefined) {\n        paramExample = param.get(\"x-example\")\n      }\n    }\n\n    return (\n      <tr data-param-name={param.get(\"name\")} data-param-in={param.get(\"in\")}>\n        <td className=\"parameters-col_name\">\n          <div className={required ? \"parameter__name required\" : \"parameter__name\"}>\n            { param.get(\"name\") }\n            { !required ? null : <span>&nbsp;*</span> }\n          </div>\n          <div className=\"parameter__type\">\n            { type }\n            { itemType && `[${itemType}]` }\n            { format && <span className=\"prop-format\">(${format})</span>}\n          </div>\n          <div className=\"parameter__deprecated\">\n            { isOAS3 && param.get(\"deprecated\") ? \"deprecated\": null }\n          </div>\n          <div className=\"parameter__in\">({ param.get(\"in\") })</div>\n          { !showCommonExtensions || !commonExt.size ? null : commonExt.entrySeq().map(([key, v]) => <ParameterExt key={`${key}-${v}`} xKey={key} xVal={v} /> )}\n          { !showExtensions || !extensions.size ? null : extensions.map((v, key) => <ParameterExt key={`${key}-${v}`} xKey={key} xVal={v} /> )}\n        </td>\n\n        <td className=\"parameters-col_description\">\n          { param.get(\"description\") ? <Markdown source={ param.get(\"description\") }/> : null }\n\n          { (bodyParam || !isExecute) && isDisplayParamEnum ?\n            <Markdown className=\"parameter__enum\" source={\n                \"<i>Available values</i> : \" + paramEnum.map(function(item) {\n                    return item\n                  }).toArray().join(\", \")}/>\n            : null\n          }\n\n          { (bodyParam || !isExecute) && paramDefaultValue !== undefined ?\n            <Markdown className=\"parameter__default\" source={\"<i>Default value</i> : \" + paramDefaultValue}/>\n            : null\n          }\n\n          { (bodyParam || !isExecute) && paramExample !== undefined ?\n            <Markdown source={\"<i>Example</i> : \" + paramExample}/>\n            : null\n          }\n\n          {(isFormData && !isFormDataSupported) && <div>Error: your browser does not support FormData</div>}\n\n          {\n            isOAS3 && param.get(\"examples\") ? (\n              <section className=\"parameter-controls\">\n                <ExamplesSelectValueRetainer\n                  examples={param.get(\"examples\")}\n                  onSelect={this._onExampleSelect}\n                  updateValue={this.onChangeWrapper}\n                  getComponent={getComponent}\n                  defaultToFirstExample={true}\n                  currentKey={oas3Selectors.activeExamplesMember(...pathMethod, \"parameters\", this.getParamKey())}\n                  currentUserInputValue={value}\n                />\n              </section>\n            ) : null\n          }\n\n          { bodyParam ? null\n            : <JsonSchemaForm fn={fn}\n                              getComponent={getComponent}\n                              value={ value }\n                              required={ required }\n                              disabled={!isExecute}\n                              description={param.get(\"description\") ? `${param.get(\"name\")} - ${param.get(\"description\")}` : `${param.get(\"name\")}`}\n                              onChange={ this.onChangeWrapper }\n                              errors={ paramWithMeta.get(\"errors\") }\n                              schema={ schema }/>\n          }\n\n\n          {\n            bodyParam && schema ? <ModelExample getComponent={ getComponent }\n                                                specPath={specPath.push(\"schema\")}\n                                                getConfigs={ getConfigs }\n                                                isExecute={ isExecute }\n                                                specSelectors={ specSelectors }\n                                                schema={ schema }\n                                                example={ bodyParam }\n                                                includeWriteOnly={ true }/>\n              : null\n          }\n\n          {\n            !bodyParam && isExecute && param.get(\"allowEmptyValue\") ?\n            <ParameterIncludeEmpty\n              onChange={this.onChangeIncludeEmpty}\n              isIncluded={specSelectors.parameterInclusionSettingFor(pathMethod, param.get(\"name\"), param.get(\"in\"))}\n              isDisabled={!isEmptyValue(value)} />\n            : null\n          }\n\n          {\n            isOAS3 && param.get(\"examples\") ? (\n              <Example\n                example={param.getIn([\n                  \"examples\",\n                  oas3Selectors.activeExamplesMember(...pathMethod, \"parameters\", this.getParamKey())\n                ])}\n                getComponent={getComponent}\n                getConfigs={getConfigs}\n              />\n            ) : null\n          }\n\n        </td>\n\n      </tr>\n    )\n\n  }\n\n}\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class Execute extends Component {\n\n  static propTypes = {\n    specSelectors: PropTypes.object.isRequired,\n    specActions: PropTypes.object.isRequired,\n    operation: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n    oas3Selectors: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    onExecute: PropTypes.func\n  }\n\n  handleValidateParameters = () => {\n    let { specSelectors, specActions, path, method } = this.props\n    specActions.validateParams([path, method])\n    return specSelectors.validateBeforeExecute([path, method])\n  }\n\n  handleValidateRequestBody = () => {\n    let { path, method, specSelectors, oas3Selectors, oas3Actions } = this.props\n    let validationErrors = {\n      missingBodyValue: false,\n      missingRequiredKeys: [] \n    }\n    // context: reset errors, then (re)validate\n    oas3Actions.clearRequestBodyValidateError({ path, method })\n    let oas3RequiredRequestBodyContentType = specSelectors.getOAS3RequiredRequestBodyContentType([path, method])\n    let oas3RequestBodyValue = oas3Selectors.requestBodyValue(path, method)\n    let oas3ValidateBeforeExecuteSuccess = oas3Selectors.validateBeforeExecute([path, method])\n\n    if (!oas3ValidateBeforeExecuteSuccess) {\n      validationErrors.missingBodyValue = true\n      oas3Actions.setRequestBodyValidateError({ path, method, validationErrors })\n      return false\n    }\n    if (!oas3RequiredRequestBodyContentType) {\n      return true\n    }\n    let missingRequiredKeys = oas3Selectors.validateShallowRequired({ oas3RequiredRequestBodyContentType, oas3RequestBodyValue })\n    if (!missingRequiredKeys || missingRequiredKeys.length < 1) {\n      return true\n    }\n    missingRequiredKeys.forEach((missingKey) => {\n      validationErrors.missingRequiredKeys.push(missingKey)\n    })\n    oas3Actions.setRequestBodyValidateError({ path, method, validationErrors })\n    return false\n  }\n\n  handleValidationResultPass = () => {\n    let { specActions, operation, path, method } = this.props\n    if (this.props.onExecute) {\n      // loading spinner\n      this.props.onExecute()\n    }\n    specActions.execute({ operation, path, method })\n  }\n\n  handleValidationResultFail = () => {\n    let { specActions, path, method } = this.props\n    // deferred by 40ms, to give element class change time to settle.\n    specActions.clearValidateParams([path, method])\n    setTimeout(() => {\n      specActions.validateParams([path, method])\n    }, 40)\n  }\n\n  handleValidationResult = (isPass) => {\n    if (isPass) {\n      this.handleValidationResultPass()\n    } else {\n      this.handleValidationResultFail()\n    }\n  }\n\n  onClick = () => {\n    let paramsResult = this.handleValidateParameters()\n    let requestBodyResult = this.handleValidateRequestBody()\n    let isPass = paramsResult && requestBodyResult\n    this.handleValidationResult(isPass)\n  }\n\n  onChangeProducesWrapper = ( val ) => this.props.specActions.changeProducesValue([this.props.path, this.props.method], val)\n\n  render(){\n    return (\n        <button className=\"btn execute opblock-control__btn\" onClick={ this.onClick }>\n          Execute\n        </button>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Im from \"immutable\"\n\nconst propClass = \"header-example\"\n\nexport default class Headers extends React.Component {\n  static propTypes = {\n    headers: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired\n  };\n\n  render() {\n    let { headers, getComponent } = this.props\n\n    const Property = getComponent(\"Property\")\n    const Markdown = getComponent(\"Markdown\", true)\n\n    if ( !headers || !headers.size )\n      return null\n\n      return (\n      <div className=\"headers-wrapper\">\n        <h4 className=\"headers__title\">Headers:</h4>\n        <table className=\"headers\">\n          <thead>\n            <tr className=\"header-row\">\n              <th className=\"header-col\">Name</th>\n              <th className=\"header-col\">Description</th>\n              <th className=\"header-col\">Type</th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n            headers.entrySeq().map( ([ key, header ]) => {\n              if(!Im.Map.isMap(header)) {\n                return null\n              }\n\n              const description = header.get(\"description\")\n              const type = header.getIn([\"schema\"]) ? header.getIn([\"schema\", \"type\"]) : header.getIn([\"type\"])\n              const schemaExample = header.getIn([\"schema\", \"example\"])\n\n              return (<tr key={ key }>\n                <td className=\"header-col\">{ key }</td>\n                <td className=\"header-col\">{\n                  !description ? null : <Markdown source={ description } />\n                }</td>\n                <td className=\"header-col\">{ type } { schemaExample ? <Property propKey={ \"Example\" } propVal={ schemaExample } propClass={ propClass } /> : null }</td>\n              </tr>)\n            }).toArray()\n          }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { List } from \"immutable\"\n\nexport default class Errors extends React.Component {\n\n  static propTypes = {\n    editorActions: PropTypes.object,\n    errSelectors: PropTypes.object.isRequired,\n    layoutSelectors: PropTypes.object.isRequired,\n    layoutActions: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n  }\n\n  render() {\n    let { editorActions, errSelectors, layoutSelectors, layoutActions, getComponent } = this.props\n\n    const Collapse = getComponent(\"Collapse\")\n\n    if(editorActions && editorActions.jumpToLine) {\n      var jumpToLine = editorActions.jumpToLine\n    }\n\n    let errors = errSelectors.allErrors()\n\n    // all thrown errors, plus error-level everything else\n    let allErrorsToDisplay = errors.filter(err => err.get(\"type\") === \"thrown\" ? true :err.get(\"level\") === \"error\")\n\n    if(!allErrorsToDisplay || allErrorsToDisplay.count() < 1) {\n      return null\n    }\n\n    let isVisible = layoutSelectors.isShown([\"errorPane\"], true)\n    let toggleVisibility = () => layoutActions.show([\"errorPane\"], !isVisible)\n\n    let sortedJSErrors = allErrorsToDisplay.sortBy(err => err.get(\"line\"))\n\n    return (\n      <pre className=\"errors-wrapper\">\n        <hgroup className=\"error\">\n          <h4 className=\"errors__title\">Errors</h4>\n          <button className=\"btn errors__clear-btn\" onClick={ toggleVisibility }>{ isVisible ? \"Hide\" : \"Show\" }</button>\n        </hgroup>\n        <Collapse isOpened={ isVisible } animated >\n          <div className=\"errors\">\n            { sortedJSErrors.map((err, i) => {\n              let type = err.get(\"type\")\n              if(type === \"thrown\" || type === \"auth\") {\n                return <ThrownErrorItem key={ i } error={ err.get(\"error\") || err } jumpToLine={jumpToLine} />\n              }\n              if(type === \"spec\") {\n                return <SpecErrorItem key={ i } error={ err } jumpToLine={jumpToLine} />\n              }\n            }) }\n          </div>\n        </Collapse>\n      </pre>\n      )\n    }\n}\n\nconst ThrownErrorItem = ( { error, jumpToLine } ) => {\n  if(!error) {\n    return null\n  }\n  let errorLine = error.get(\"line\")\n\n  return (\n    <div className=\"error-wrapper\">\n      { !error ? null :\n        <div>\n          <h4>{ (error.get(\"source\") && error.get(\"level\")) ?\n            toTitleCase(error.get(\"source\")) + \" \" + error.get(\"level\") : \"\" }\n          { error.get(\"path\") ? <small> at {error.get(\"path\")}</small>: null }</h4>\n          <span className=\"message thrown\">\n            { error.get(\"message\") }\n          </span>\n          <div className=\"error-line\">\n            { errorLine && jumpToLine ? <a onClick={jumpToLine.bind(null, errorLine)}>Jump to line { errorLine }</a> : null }\n          </div>\n        </div>\n      }\n    </div>\n    )\n  }\n\nconst SpecErrorItem = ( { error, jumpToLine } ) => {\n  let locationMessage = null\n\n  if(error.get(\"path\")) {\n    if(List.isList(error.get(\"path\"))) {\n      locationMessage = <small>at { error.get(\"path\").join(\".\") }</small>\n    } else {\n      locationMessage = <small>at { error.get(\"path\") }</small>\n    }\n  } else if(error.get(\"line\") && !jumpToLine) {\n    locationMessage = <small>on line { error.get(\"line\") }</small>\n  }\n\n  return (\n    <div className=\"error-wrapper\">\n      { !error ? null :\n        <div>\n          <h4>{ toTitleCase(error.get(\"source\")) + \" \" + error.get(\"level\") }&nbsp;{ locationMessage }</h4>\n          <span className=\"message\">{ error.get(\"message\") }</span>\n          <div className=\"error-line\">\n            { jumpToLine ? (\n              <a onClick={jumpToLine.bind(null, error.get(\"line\"))}>Jump to line { error.get(\"line\") }</a>\n            ) : null }\n          </div>\n        </div>\n      }\n    </div>\n    )\n  }\n\nfunction toTitleCase(str) {\n  return (str || \"\")\n    .split(\" \")\n    .map(substr => substr[0].toUpperCase() + substr.slice(1))\n    .join(\" \")\n}\n\nThrownErrorItem.propTypes = {\n  error: PropTypes.object.isRequired,\n  jumpToLine: PropTypes.func\n}\n\nThrownErrorItem.defaultProps = {\n  jumpToLine: null\n}\n\nSpecErrorItem.propTypes = {\n  error: PropTypes.object.isRequired,\n  jumpToLine: PropTypes.func\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { fromJS } from \"immutable\"\n\nconst noop = ()=>{}\n\nexport default class ContentType extends React.Component {\n\n  static propTypes = {\n    contentTypes: PropTypes.oneOfType([ImPropTypes.list, ImPropTypes.set, ImPropTypes.seq]),\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    className: PropTypes.string\n  }\n\n  static defaultProps = {\n    onChange: noop,\n    value: null,\n    contentTypes: fromJS([\"application/json\"]),\n  }\n\n  componentDidMount() {\n    // Needed to populate the form, initially\n    if(this.props.contentTypes) {\n      this.props.onChange(this.props.contentTypes.first())\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(!nextProps.contentTypes || !nextProps.contentTypes.size) {\n      return\n    }\n\n    if(!nextProps.contentTypes.includes(nextProps.value)) {\n      nextProps.onChange(nextProps.contentTypes.first())\n    }\n  }\n\n  onChangeWrapper = e => this.props.onChange(e.target.value)\n\n  render() {\n    let { contentTypes, className, value } = this.props\n\n    if ( !contentTypes || !contentTypes.size )\n      return null\n\n    return (\n      <div className={ \"content-type-wrapper \" + ( className || \"\" ) }>\n        <select className=\"content-type\" value={value || \"\"} onChange={this.onChangeWrapper} >\n          { contentTypes.map( (val) => {\n            return <option key={ val } value={ val }>{ val }</option>\n          }).toArray()}\n        </select>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nfunction xclass(...args) {\n  return args.filter(a => !!a).join(\" \").trim()\n}\n\nexport class Container extends React.Component {\n  render() {\n    let { fullscreen, full, ...rest } = this.props\n    // Normal element\n\n    if(fullscreen)\n      return <section {...rest}/>\n\n    let containerClass = \"swagger-container\" + (full ? \"-full\" : \"\")\n    return (\n      <section {...rest} className={xclass(rest.className, containerClass)}/>\n    )\n  }\n}\n\nContainer.propTypes = {\n  fullscreen: PropTypes.bool,\n  full: PropTypes.bool,\n  className: PropTypes.string\n}\n\nconst DEVICES = {\n  \"mobile\": \"\",\n  \"tablet\": \"-tablet\",\n  \"desktop\": \"-desktop\",\n  \"large\": \"-hd\"\n}\n\nexport class Col extends React.Component {\n\n  render() {\n    const {\n      hide,\n      keepContents,\n      /* we don't want these in the `rest` object that passes to the final component,\n         since React now complains. So we extract them */\n      /* eslint-disable no-unused-vars */\n      mobile,\n      tablet,\n      desktop,\n      large,\n      /* eslint-enable no-unused-vars */\n      ...rest\n    } = this.props\n\n    if(hide && !keepContents)\n      return <span/>\n\n    let classesAr = []\n\n    for (let device in DEVICES) {\n      if (!DEVICES.hasOwnProperty(device)) {\n        continue\n      }\n      let deviceClass = DEVICES[device]\n      if(device in this.props) {\n        let val = this.props[device]\n\n        if(val < 1) {\n          classesAr.push(\"none\" + deviceClass)\n          continue\n        }\n\n        classesAr.push(\"block\" + deviceClass)\n        classesAr.push(\"col-\" + val + deviceClass)\n      }\n    }\n\n    if (hide) {\n      classesAr.push(\"hidden\")\n    }\n\n    let classes = xclass(rest.className, ...classesAr)\n\n    return (\n      <section {...rest} className={classes}/>\n    )\n  }\n\n}\n\nCol.propTypes = {\n  hide: PropTypes.bool,\n  keepContents: PropTypes.bool,\n  mobile: PropTypes.number,\n  tablet: PropTypes.number,\n  desktop: PropTypes.number,\n  large: PropTypes.number,\n  className: PropTypes.string\n}\n\nexport class Row extends React.Component {\n\n  render() {\n    return <div {...this.props} className={xclass(this.props.className, \"wrapper\")} />\n  }\n\n}\n\nRow.propTypes = {\n  className: PropTypes.string\n}\n\nexport class Button extends React.Component {\n\n  static propTypes = {\n    className: PropTypes.string\n  }\n\n  static defaultProps = {\n    className: \"\"\n  }\n\n  render() {\n    return <button {...this.props} className={xclass(this.props.className, \"button\")} />\n  }\n\n}\n\n\nexport const TextArea = (props) => <textarea {...props} />\n\nexport const Input = (props) => <input {...props} />\n\nexport class Select extends React.Component {\n  static propTypes = {\n    allowedValues: PropTypes.array,\n    value: PropTypes.any,\n    onChange: PropTypes.func,\n    multiple: PropTypes.bool,\n    allowEmptyValue: PropTypes.bool,\n    className: PropTypes.string,\n    disabled: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    multiple: false,\n    allowEmptyValue: true\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    let value\n\n    if (props.value) {\n      value = props.value\n    } else {\n      value = props.multiple ? [\"\"] : \"\"\n    }\n\n    this.state = { value: value }\n  }\n\n  onChange = (e) => {\n    let { onChange, multiple } = this.props\n    let options = [].slice.call(e.target.options)\n    let value\n\n\n    if (multiple) {\n      value = options.filter(function (option) {\n          return option.selected\n        })\n        .map(function (option){\n          return option.value\n        })\n    } else {\n      value = e.target.value\n    }\n\n    this.setState({value: value})\n\n    onChange && onChange(value)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // TODO: this puts us in a weird area btwn un/controlled selection... review\n    if(nextProps.value !== this.props.value) {\n      this.setState({ value: nextProps.value })\n    }\n  }\n\n  render(){\n    let { allowedValues, multiple, allowEmptyValue, disabled } = this.props\n    let value = this.state.value?.toJS?.() || this.state.value\n\n    return (\n      <select className={this.props.className} multiple={ multiple } value={value} onChange={ this.onChange } disabled={disabled} >\n        { allowEmptyValue ? <option value=\"\">--</option> : null }\n        {\n          allowedValues.map(function (item, key) {\n            return <option key={ key } value={ String(item) }>{ String(item) }</option>\n          })\n        }\n      </select>\n    )\n  }\n}\n\nexport class Link extends React.Component {\n\n  render() {\n    return <a {...this.props} rel=\"noopener noreferrer\" className={xclass(this.props.className, \"link\")}/>\n  }\n\n}\n\nLink.propTypes = {\n  className: PropTypes.string\n}\n\nconst NoMargin = ({children}) => <div className=\"no-margin\"> {children} </div>\n\nNoMargin.propTypes = {\n  children: PropTypes.node\n}\n\nexport class Collapse extends React.Component {\n\n  static propTypes = {\n    isOpened: PropTypes.bool,\n    children: PropTypes.node.isRequired,\n    animated: PropTypes.bool\n  }\n\n  static defaultProps = {\n    isOpened: false,\n    animated: false\n  }\n\n  renderNotAnimated() {\n    if(!this.props.isOpened)\n      return <noscript/>\n    return (\n      <NoMargin>\n        {this.props.children}\n      </NoMargin>\n    )\n  }\n\n  render() {\n    let { animated, isOpened, children } = this.props\n\n    if(!animated)\n      return this.renderNotAnimated()\n\n    children = isOpened ? children : null\n    return (\n      <NoMargin>\n        {children}\n      </NoMargin>\n    )\n  }\n\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"core/components/layout-utils\"\n\nexport default class Overview extends React.Component {\n\n  constructor(...args) {\n    super(...args)\n    this.setTagShown = this._setTagShown.bind(this)\n  }\n\n  _setTagShown(showTagId, shown) {\n    this.props.layoutActions.show(showTagId, shown)\n  }\n\n  showOp(key, shown) {\n    let { layoutActions } = this.props\n    layoutActions.show(key, shown)\n  }\n\n  render() {\n    let { specSelectors, layoutSelectors, layoutActions, getComponent } = this.props\n    let taggedOps = specSelectors.taggedOperations()\n\n    const Collapse = getComponent(\"Collapse\")\n\n    return (\n        <div>\n          <h4 className=\"overview-title\">Overview</h4>\n\n          {\n            taggedOps.map( (tagObj, tag) => {\n              let operations = tagObj.get(\"operations\")\n\n              let showTagId = [\"overview-tags\", tag]\n              let showTag = layoutSelectors.isShown(showTagId, true)\n              let toggleShow = ()=> layoutActions.show(showTagId, !showTag)\n\n              return (\n                <div key={\"overview-\"+tag}>\n\n\n                  <h4 onClick={toggleShow} className=\"link overview-tag\"> {showTag ? \"-\" : \"+\"}{tag}</h4>\n\n                  <Collapse isOpened={showTag} animated>\n                    {\n                      operations.map( op => {\n                        let { path, method, id } = op.toObject() // toObject is shallow\n                        let showOpIdPrefix = \"operations\"\n                        let showOpId = id\n                        let shown = layoutSelectors.isShown([showOpIdPrefix, showOpId])\n                        return <OperationLink key={id}\n                                              path={path}\n                                              method={method}\n                                              id={path + \"-\" + method}\n                                              shown={shown}\n                                              showOpId={showOpId}\n                                              showOpIdPrefix={showOpIdPrefix}\n                                              href={`#operation-${showOpId}`}\n                                              onClick={layoutActions.show} />\n                      }).toArray()\n                    }\n                  </Collapse>\n\n                </div>\n                )\n            }).toArray()\n          }\n\n          { taggedOps.size < 1 && <h3> No operations defined in spec! </h3> }\n        </div>\n    )\n  }\n\n}\n\nOverview.propTypes = {\n  layoutSelectors: PropTypes.object.isRequired,\n  specSelectors: PropTypes.object.isRequired,\n  layoutActions: PropTypes.object.isRequired,\n  getComponent: PropTypes.func.isRequired\n}\n\nexport class OperationLink extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.onClick = this._onClick.bind(this)\n  }\n\n  _onClick() {\n    let { showOpId, showOpIdPrefix, onClick, shown } = this.props\n    onClick([showOpIdPrefix, showOpId], !shown)\n  }\n\n  render() {\n    let { id, method, shown, href } = this.props\n\n    return (\n      <Link href={ href } onClick={this.onClick} className={`block opblock-link ${shown ? \"shown\" : \"\"}`}>\n        <div>\n          <small className={`bold-label-${method}`}>{method.toUpperCase()}</small>\n          <span className=\"bold-label\" >{id}</span>\n        </div>\n      </Link>\n    )\n  }\n\n}\n\nOperationLink.propTypes = {\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  id: PropTypes.string.isRequired,\n  method: PropTypes.string.isRequired,\n  shown: PropTypes.bool.isRequired,\n  showOpId: PropTypes.string.isRequired,\n  showOpIdPrefix: PropTypes.string.isRequired\n}\n","// This component provides an interface that feels like an uncontrolled input\n// to consumers, while providing a `defaultValue` interface that initializes\n// the input's value using JavaScript value property APIs instead of React's \n// vanilla[0] implementation that uses HTML value attributes.\n//\n// This is useful in situations where we don't want to surface an input's value\n// into the HTML/CSS-exposed side of the DOM, for example to avoid sequential\n// input chaining attacks[1].\n// \n// [0]: https://github.com/facebook/react/blob/baff5cc2f69d30589a5dc65b089e47765437294b/fixtures/dom/src/components/fixtures/text-inputs/README.md\n// [1]: https://github.com/d0nutptr/sic\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class InitializedInput extends React.Component {\n  componentDidMount() {\n    // Set the element's `value` property (*not* the `value` attribute)\n    // once, on mount, if an `initialValue` is provided.\n    if(this.props.initialValue) {\n      this.inputRef.value = this.props.initialValue\n    }\n  }\n\n  render() {\n    // Filter out `value` and `defaultValue`, since we have our own\n    // `initialValue` interface that we provide.\n    // eslint-disable-next-line no-unused-vars, react/prop-types\n    const { value, defaultValue, ...otherProps } = this.props\n    return <input {...otherProps} ref={c => this.inputRef = c} />\n  }\n}\n\nInitializedInput.propTypes = {\n  initialValue: PropTypes.string\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { sanitizeUrl } from \"core/utils\"\nimport { buildUrl } from \"core/utils/url\"\n\n\nexport class InfoBasePath extends React.Component {\n  static propTypes = {\n    host: PropTypes.string,\n    basePath: PropTypes.string\n  }\n\n  render() {\n    let { host, basePath } = this.props\n\n    return (\n      <pre className=\"base-url\">\n        [ Base URL: {host}{basePath} ]\n      </pre>\n    )\n  }\n}\n\n\nclass Contact extends React.Component {\n  static propTypes = {\n    data: PropTypes.object,\n    getComponent: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    selectedServer: PropTypes.string,\n    url: PropTypes.string.isRequired,\n  }\n\n  render(){\n    let { data, getComponent, selectedServer, url: specUrl} = this.props\n    let name = data.get(\"name\") || \"the developer\"\n    let url = buildUrl(data.get(\"url\"), specUrl, {selectedServer})\n    let email = data.get(\"email\")\n\n    const Link = getComponent(\"Link\")\n\n    return (\n      <div className=\"info__contact\">\n        { url && <div><Link href={ sanitizeUrl(url) } target=\"_blank\">{ name } - Website</Link></div> }\n        { email &&\n          <Link href={sanitizeUrl(`mailto:${email}`)}>\n            { url ? `Send email to ${name}` : `Contact ${name}`}\n          </Link>\n        }\n      </div>\n    )\n  }\n}\n\nclass License extends React.Component {\n  static propTypes = {\n    license: PropTypes.object,\n    getComponent: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    selectedServer: PropTypes.string,\n    url: PropTypes.string.isRequired,\n  }\n\n  render(){\n    let { license, getComponent, selectedServer, url: specUrl } = this.props\n\n    const Link = getComponent(\"Link\")\n    let name = license.get(\"name\") || \"License\"  \n    let url = buildUrl(license.get(\"url\"), specUrl, {selectedServer})\n\n    return (\n      <div className=\"info__license\">\n        {\n          url ? <Link target=\"_blank\" href={ sanitizeUrl(url) }>{ name }</Link>\n        : <span>{ name }</span>\n        }\n      </div>\n    )\n  }\n}\n\nexport class InfoUrl extends React.PureComponent {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    getComponent: PropTypes.func.isRequired\n  }\n\n\n  render() {\n    const { url, getComponent } = this.props\n\n    const Link = getComponent(\"Link\")\n\n    return <Link target=\"_blank\" href={ sanitizeUrl(url) }><span className=\"url\"> { url }</span></Link>\n  }\n}\n\nexport default class Info extends React.Component {\n  static propTypes = {\n    info: PropTypes.object,\n    url: PropTypes.string,\n    host: PropTypes.string,\n    basePath: PropTypes.string,\n    externalDocs: ImPropTypes.map,\n    getComponent: PropTypes.func.isRequired,\n    oas3selectors: PropTypes.func,\n    selectedServer: PropTypes.string,\n  }\n\n  render() {\n    let { info, url, host, basePath, getComponent, externalDocs, selectedServer, url: specUrl } = this.props\n    let version = info.get(\"version\")\n    let description = info.get(\"description\")\n    let title = info.get(\"title\")\n    let termsOfServiceUrl = buildUrl(info.get(\"termsOfService\"), specUrl, {selectedServer})\n    let contact = info.get(\"contact\")\n    let license = info.get(\"license\")\n    let rawExternalDocsUrl = externalDocs && externalDocs.get(\"url\")\n    let externalDocsUrl = buildUrl(rawExternalDocsUrl, specUrl, {selectedServer})\n    let externalDocsDescription = externalDocs && externalDocs.get(\"description\")\n\n    const Markdown = getComponent(\"Markdown\", true)\n    const Link = getComponent(\"Link\")\n    const VersionStamp = getComponent(\"VersionStamp\")\n    const InfoUrl = getComponent(\"InfoUrl\")\n    const InfoBasePath = getComponent(\"InfoBasePath\")\n\n    return (\n      <div className=\"info\">\n        <hgroup className=\"main\">\n          <h2 className=\"title\" >{ title }\n            { version && <VersionStamp version={version}></VersionStamp> }\n          </h2>\n          { host || basePath ? <InfoBasePath host={ host } basePath={ basePath } /> : null }\n          { url && <InfoUrl getComponent={getComponent} url={url} /> }\n        </hgroup>\n\n        <div className=\"description\">\n          <Markdown source={ description } />\n        </div>\n\n        {\n          termsOfServiceUrl && <div className=\"info__tos\">\n            <Link target=\"_blank\" href={ sanitizeUrl(termsOfServiceUrl) }>Terms of service</Link>\n          </div>\n        }\n\n        {contact && contact.size ? <Contact getComponent={getComponent} data={ contact } selectedServer={selectedServer} url={url} /> : null }\n        {license && license.size ? <License getComponent={getComponent} license={ license } selectedServer={selectedServer} url={url}/> : null }\n        { externalDocs ?\n            <Link className=\"info__extdocs\" target=\"_blank\" href={sanitizeUrl(externalDocsUrl)}>{externalDocsDescription || externalDocsUrl}</Link>\n        : null }\n\n      </div>\n    )\n  }\n\n}\n\nInfo.propTypes = {\n  title: PropTypes.any,\n  description: PropTypes.any,\n  version: PropTypes.any,\n  url: PropTypes.string\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class InfoContainer extends React.Component {\n\n  static propTypes = {\n    specActions: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    oas3Selectors: PropTypes.func.isRequired,\n  }\n\n  render () {\n    const {specSelectors, getComponent, oas3Selectors} = this.props\n\n    const info = specSelectors.info()\n    const url = specSelectors.url()\n    const basePath = specSelectors.basePath()\n    const host = specSelectors.host()\n    const externalDocs = specSelectors.externalDocs()\n    const selectedServer = oas3Selectors.selectedServer()\n\n    const Info = getComponent(\"info\")\n\n    return (\n      <div>\n        {info && info.count() ? (\n          <Info info={info} url={url} host={host} basePath={basePath} externalDocs={externalDocs}\n                getComponent={getComponent} selectedServer={selectedServer} />\n        ) : null}\n      </div>\n    )\n  }\n}\n","import React from \"react\"\n\n// Nothing by default- component can be overridden by another plugin.\n\nexport default class JumpToPath extends React.Component {\n  render() {\n    return null\n  }\n}\n","import React from \"react\"\n\nexport default class Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"footer\"></div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class FilterContainer extends React.Component {\n\n  static propTypes = {\n    specSelectors: PropTypes.object.isRequired,\n    layoutSelectors: PropTypes.object.isRequired,\n    layoutActions: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n  }\n\n  onFilterChange = (e) => {\n    const {target: {value}} = e\n    this.props.layoutActions.updateFilter(value)\n  }\n\n  render () {\n    const {specSelectors, layoutSelectors, getComponent} = this.props\n    const Col = getComponent(\"Col\")\n\n    const isLoading = specSelectors.loadingStatus() === \"loading\"\n    const isFailed = specSelectors.loadingStatus() === \"failed\"\n    const filter = layoutSelectors.currentFilter()\n\n    const classNames = [\"operation-filter-input\"]\n    if (isFailed) classNames.push(\"failed\")\n    if (isLoading) classNames.push(\"loading\")\n\n    return (\n      <div>\n        {filter === null || filter === false || filter === \"false\" ? null :\n          <div className=\"filter-container\">\n            <Col className=\"filter wrapper\" mobile={12}>\n              <input className={classNames.join(\" \")} placeholder=\"Filter by tag\" type=\"text\"\n                     onChange={this.onFilterChange} value={filter === true || filter === \"true\" ? \"\" : filter}\n                     disabled={isLoading}/>\n            </Col>\n          </div>\n        }\n      </div>\n    )\n  }\n}\n","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { fromJS, List } from \"immutable\"\nimport { getSampleSchema } from \"core/utils\"\n\nconst NOOP = Function.prototype\n\nexport default class ParamBody extends PureComponent {\n\n  static propTypes = {\n    param: PropTypes.object,\n    onChange: PropTypes.func,\n    onChangeConsumes: PropTypes.func,\n    consumes: PropTypes.object,\n    consumesValue: PropTypes.string,\n    fn: PropTypes.object.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    isExecute: PropTypes.bool,\n    specSelectors: PropTypes.object.isRequired,\n    pathMethod: PropTypes.array.isRequired\n  };\n\n  static defaultProp = {\n    consumes: fromJS([\"application/json\"]),\n    param: fromJS({}),\n    onChange: NOOP,\n    onChangeConsumes: NOOP,\n  };\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      isEditBox: false,\n      value: \"\"\n    }\n\n  }\n\n  componentDidMount() {\n    this.updateValues.call(this, this.props)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.updateValues.call(this, nextProps)\n  }\n\n  updateValues = (props) => {\n    let { param, isExecute, consumesValue=\"\" } = props\n    let isXml = /xml/i.test(consumesValue)\n    let isJson = /json/i.test(consumesValue)\n    let paramValue = isXml ? param.get(\"value_xml\") : param.get(\"value\")\n\n    if ( paramValue !== undefined ) {\n      let val = !paramValue && isJson ? \"{}\" : paramValue\n      this.setState({ value: val })\n      this.onChange(val, {isXml: isXml, isEditBox: isExecute})\n    } else {\n      if (isXml) {\n        this.onChange(this.sample(\"xml\"), {isXml: isXml, isEditBox: isExecute})\n      } else {\n        this.onChange(this.sample(), {isEditBox: isExecute})\n      }\n    }\n  }\n\n  sample = (xml) => {\n    let { param, fn:{inferSchema} } = this.props\n    let schema = inferSchema(param.toJS())\n\n    return getSampleSchema(schema, xml, {\n      includeWriteOnly: true\n    })\n  }\n\n  onChange = (value, { isEditBox, isXml }) => {\n    this.setState({value, isEditBox})\n    this._onChange(value, isXml)\n  }\n\n  _onChange = (val, isXml) => { (this.props.onChange || NOOP)(val, isXml) }\n\n  handleOnChange = e => {\n    const {consumesValue} = this.props\n    const isXml = /xml/i.test(consumesValue)\n    const inputValue = e.target.value\n    this.onChange(inputValue, {isXml})\n  }\n\n  toggleIsEditBox = () => this.setState( state => ({isEditBox: !state.isEditBox}))\n\n  render() {\n    let {\n      onChangeConsumes,\n      param,\n      isExecute,\n      specSelectors,\n      pathMethod,\n      getConfigs,\n      getComponent,\n    } = this.props\n\n    const Button = getComponent(\"Button\")\n    const TextArea = getComponent(\"TextArea\")\n    const HighlightCode = getComponent(\"highlightCode\")\n    const ContentType = getComponent(\"contentType\")\n    // for domains where specSelectors not passed\n    let parameter = specSelectors ? specSelectors.parameterWithMetaByIdentity(pathMethod, param) : param\n    let errors = parameter.get(\"errors\", List())\n    let consumesValue = specSelectors.contentTypeValues(pathMethod).get(\"requestContentType\")\n    let consumes = this.props.consumes && this.props.consumes.size ? this.props.consumes : ParamBody.defaultProp.consumes\n\n    let { value, isEditBox } = this.state\n\n    return (\n      <div className=\"body-param\" data-param-name={param.get(\"name\")} data-param-in={param.get(\"in\")}>\n        {\n          isEditBox && isExecute\n            ? <TextArea className={ \"body-param__text\" + ( errors.count() ? \" invalid\" : \"\")} value={value} onChange={ this.handleOnChange }/>\n            : (value && <HighlightCode className=\"body-param__example\"\n                               getConfigs={ getConfigs }\n                               value={ value }/>)\n        }\n        <div className=\"body-param-options\">\n          {\n            !isExecute ? null\n                       : <div className=\"body-param-edit\">\n                        <Button className={isEditBox ? \"btn cancel body-param__example-edit\" : \"btn edit body-param__example-edit\"}\n                                 onClick={this.toggleIsEditBox}>{ isEditBox ? \"Cancel\" : \"Edit\"}\n                         </Button>\n                         </div>\n          }\n          <label htmlFor=\"\">\n            <span>Parameter content type</span>\n            <ContentType value={ consumesValue } contentTypes={ consumes } onChange={onChangeConsumes} className=\"body-param-content-type\" />\n          </label>\n        </div>\n\n      </div>\n    )\n\n  }\n}\n","import win from \"./window\"\nimport { Map } from \"immutable\"\n\n/**\n * if duplicate key name existed from FormData entries,\n * we mutated the key name by appending a hashIdx\n * @param {String} k - possibly mutated key name\n * @return {String} - src key name\n */\nconst extractKey = (k) => {\n  const hashIdx = \"_**[]\"\n  if (k.indexOf(hashIdx) < 0) {\n    return k\n  }\n  return k.split(hashIdx)[0].trim()\n}\n\nexport default function curl( request ){\n  let curlified = []\n  let isMultipartFormDataRequest = false\n  let headers = request.get(\"headers\")\n  curlified.push( \"curl\" )\n\n  if (request.get(\"curlOptions\")) {\n    curlified.push(...request.get(\"curlOptions\"))\n  }\n\n  curlified.push( \"-X\", request.get(\"method\") )\n  curlified.push( `\"${request.get(\"url\")}\"`)\n\n  if ( headers && headers.size ) {\n    for( let p of request.get(\"headers\").entries() ){\n      let [ h,v ] = p\n      curlified.push( \"-H \" )\n      curlified.push( `\"${h}: ${v.replace(/\\$/g, \"\\\\$\")}\"` )\n      isMultipartFormDataRequest = isMultipartFormDataRequest || /^content-type$/i.test(h) && /^multipart\\/form-data$/i.test(v)\n    }\n  }\n\n  if ( request.get(\"body\") ){\n    if (isMultipartFormDataRequest && [\"POST\", \"PUT\", \"PATCH\"].includes(request.get(\"method\"))) {\n      for( let [ k,v ] of request.get(\"body\").entrySeq()) {\n        let extractedKey = extractKey(k)\n        curlified.push( \"-F\" )\n        if (v instanceof win.File) {\n          curlified.push(`\"${extractedKey}=@${v.name}${v.type ? `;type=${v.type}` : \"\"}\"` )\n        } else {\n          curlified.push(`\"${extractedKey}=${v}\"` )\n        }\n      }\n    } else {\n      curlified.push( \"-d\" )\n      let reqBody = request.get(\"body\")\n      if (!Map.isMap(reqBody)) {\n        curlified.push( JSON.stringify( request.get(\"body\") ).replace(/\\\\n/g, \"\").replace(/\\$/g, \"\\\\$\") )\n      } else {\n        let curlifyToJoin = []\n        for (let [k, v] of request.get(\"body\").entrySeq()) {\n          let extractedKey = extractKey(k)\n          if (v instanceof win.File) {\n            curlifyToJoin.push(`\"${extractedKey}\":{\"name\":\"${v.name}\"${v.type ? `,\"type\":\"${v.type}\"` : \"\"}}`)\n          } else {\n            curlifyToJoin.push(`\"${extractedKey}\":${JSON.stringify(v).replace(/\\\\n/g, \"\").replace(\"$\", \"\\\\$\")}`)\n          }\n        }\n        curlified.push(`{${curlifyToJoin.join()}}`)\n      }\n    }\n  } else if(!request.get(\"body\") && request.get(\"method\") === \"POST\") {\n    curlified.push( \"-d\" )\n    curlified.push( \"\\\"\\\"\" )\n  }\n\n  return curlified.join( \" \" )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport curlify from \"core/curlify\"\nimport { CopyToClipboard } from \"react-copy-to-clipboard\"\nimport {SyntaxHighlighter, getStyle} from \"core/syntax-highlighting\"\nimport get from \"lodash/get\"\n\nexport default class Curl extends React.Component {\n  static propTypes = {\n    getConfigs: PropTypes.func.isRequired,\n    request: PropTypes.object.isRequired\n  }\n\n  render() {\n    let { request, getConfigs } = this.props\n    let curl = curlify(request)\n\n    const config = getConfigs()\n\n    const curlBlock = get(config, \"syntaxHighlight.activated\")\n      ? <SyntaxHighlighter\n          language=\"bash\"\n          className=\"curl microlight\"\n          onWheel={this.preventYScrollingBeyondElement}\n          style={getStyle(get(config, \"syntaxHighlight.theme\"))}\n          >\n          {curl}\n        </SyntaxHighlighter>\n      :\n      <textarea readOnly={true} className=\"curl\" value={curl}></textarea>\n\n    return (\n      <div className=\"curl-command\">\n        <h4>Curl</h4>\n        <div className=\"copy-to-clipboard\">\n            <CopyToClipboard text={curl}><button/></CopyToClipboard>\n        </div>\n        <div>\n          {curlBlock}\n        </div>\n      </div>\n    )\n  }\n\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class Schemes extends React.Component {\n\n  static propTypes = {\n    specActions: PropTypes.object.isRequired,\n    schemes: PropTypes.object.isRequired,\n    currentScheme: PropTypes.string.isRequired,\n    path: PropTypes.string,\n    method: PropTypes.string,\n  }\n\n  componentWillMount() {\n    let { schemes } = this.props\n\n    //fire 'change' event to set default 'value' of select\n    this.setScheme(schemes.first())\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ( !this.props.currentScheme || !nextProps.schemes.includes(this.props.currentScheme) ) {\n      // if we don't have a selected currentScheme or if our selected scheme is no longer an option,\n      // then fire 'change' event and select the first scheme in the list of options\n      this.setScheme(nextProps.schemes.first())\n    }\n  }\n\n  onChange =( e ) => {\n    this.setScheme( e.target.value )\n  }\n\n  setScheme = ( value ) => {\n    let { path, method, specActions } = this.props\n\n    specActions.setScheme( value, path, method )\n  }\n\n  render() {\n    let { schemes, currentScheme } = this.props\n\n    return (\n      <label htmlFor=\"schemes\">\n        <span className=\"schemes-title\">Schemes</span>\n        <select onChange={ this.onChange } value={currentScheme}>\n          { schemes.valueSeq().map(\n            ( scheme ) => <option value={ scheme } key={ scheme }>{ scheme }</option>\n          ).toArray()}\n        </select>\n      </label>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class SchemesContainer extends React.Component {\n\n  static propTypes = {\n    specActions: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired\n  }\n\n  render () {\n    const {specActions, specSelectors, getComponent} = this.props\n\n    const currentScheme = specSelectors.operationScheme()\n    const schemes = specSelectors.schemes()\n\n    const Schemes = getComponent(\"schemes\")\n\n    const schemesArePresent = schemes && schemes.size\n\n    return schemesArePresent ? (\n        <Schemes\n          currentScheme={currentScheme}\n          schemes={schemes}\n          specActions={specActions}\n        />\n      ) : null\n  }\n}\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport Im from \"immutable\"\n\nexport default class ModelCollapse extends Component {\n  static propTypes = {\n    collapsedContent: PropTypes.any,\n    expanded: PropTypes.bool,\n    children: PropTypes.any,\n    title: PropTypes.element,\n    modelName: PropTypes.string,\n    classes: PropTypes.string,\n    onToggle: PropTypes.func,\n    hideSelfOnExpand: PropTypes.bool,\n    layoutActions: PropTypes.object,\n    layoutSelectors: PropTypes.object.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n  }\n\n  static defaultProps = {\n    collapsedContent: \"{...}\",\n    expanded: false,\n    title: null,\n    onToggle: () => {},\n    hideSelfOnExpand: false,\n    specPath: Im.List([]),\n  }\n\n  constructor(props, context) {\n    super(props, context)\n\n    let { expanded, collapsedContent } = this.props\n\n    this.state = {\n      expanded : expanded,\n      collapsedContent: collapsedContent || ModelCollapse.defaultProps.collapsedContent\n    }\n  }\n\n  componentDidMount() {\n    const { hideSelfOnExpand, expanded, modelName } = this.props\n    if(hideSelfOnExpand && expanded) {\n      // We just mounted pre-expanded, and we won't be going back..\n      // So let's give our parent an `onToggle` call..\n      // Since otherwise it will never be called.\n      this.props.onToggle(modelName, expanded)\n    }\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(this.props.expanded !== nextProps.expanded){\n        this.setState({expanded: nextProps.expanded})\n    }\n  }\n\n  toggleCollapsed=()=>{\n    if(this.props.onToggle){\n      this.props.onToggle(this.props.modelName,!this.state.expanded)\n    }\n\n    this.setState({\n      expanded: !this.state.expanded\n    })\n  }\n\n  onLoad = (ref) => {\n    if (ref && this.props.layoutSelectors) {\n      const scrollToKey = this.props.layoutSelectors.getScrollToKey()\n\n      if( Im.is(scrollToKey, this.props.specPath) ) this.toggleCollapsed()\n      this.props.layoutActions.readyToScroll(this.props.specPath, ref.parentElement)\n    }\n  }\n\n  render () {\n    const { title, classes } = this.props\n\n    if(this.state.expanded ) {\n      if(this.props.hideSelfOnExpand) {\n        return <span className={classes || \"\"}>\n          {this.props.children}\n        </span>\n      }\n    }\n\n    return (\n      <span className={classes || \"\"} ref={this.onLoad}>\n        { title && <span onClick={this.toggleCollapsed} className=\"pointer\">{title}</span> }\n        <span onClick={ this.toggleCollapsed } className=\"pointer\">\n          <span className={ \"model-toggle\" + ( this.state.expanded ? \"\" : \" collapsed\" ) }></span>\n        </span>\n        { this.state.expanded ? this.props.children :this.state.collapsedContent }\n      </span>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class ModelExample extends React.Component {\n  static propTypes = {\n    getComponent: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    schema: PropTypes.object.isRequired,\n    example: PropTypes.any.isRequired,\n    isExecute: PropTypes.bool,\n    getConfigs: PropTypes.func.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n    includeReadOnly: PropTypes.bool,\n    includeWriteOnly: PropTypes.bool,\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    let { getConfigs, isExecute } = this.props\n    let { defaultModelRendering } = getConfigs()\n\n    let activeTab = defaultModelRendering\n\n    if (defaultModelRendering !== \"example\" && defaultModelRendering !== \"model\") {\n      activeTab = \"example\"\n    }\n\n    if(isExecute) {\n      activeTab = \"example\"\n    }\n\n    this.state = {\n      activeTab: activeTab\n    }\n  }\n\n  activeTab =( e ) => {\n    let { target : { dataset : { name } } } = e\n\n    this.setState({\n      activeTab: name\n    })\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      nextProps.isExecute &&\n      !this.props.isExecute &&\n      this.props.example\n    ) {\n      this.setState({ activeTab: \"example\" })\n    }\n  }\n\n  render() {\n    let { getComponent, specSelectors, schema, example, isExecute, getConfigs, specPath, includeReadOnly, includeWriteOnly } = this.props\n    let { defaultModelExpandDepth } = getConfigs()\n    const ModelWrapper = getComponent(\"ModelWrapper\")\n    const HighlightCode = getComponent(\"highlightCode\")\n\n    let isOAS3 = specSelectors.isOAS3()\n\n    return <div className=\"model-example\">\n      <ul className=\"tab\">\n        <li className={ \"tabitem\" + ( this.state.activeTab === \"example\" ? \" active\" : \"\") }>\n          <a className=\"tablinks\" data-name=\"example\" onClick={ this.activeTab }>{isExecute ? \"Edit Value\" : \"Example Value\"}</a>\n        </li>\n        { schema ? <li className={ \"tabitem\" + ( this.state.activeTab === \"model\" ? \" active\" : \"\") }>\n          <a className={ \"tablinks\" + ( isExecute ? \" inactive\" : \"\" )} data-name=\"model\" onClick={ this.activeTab }>\n            {isOAS3 ? \"Schema\" : \"Model\" }\n          </a>\n        </li> : null }\n      </ul>\n      <div>\n        {\n          this.state.activeTab === \"example\" ? (\n            example ? example : (\n              <HighlightCode value=\"(no example available)\" getConfigs={ getConfigs } />\n            )\n          ) : null\n        }\n        {\n          this.state.activeTab === \"model\" && <ModelWrapper schema={ schema }\n                                                     getComponent={ getComponent }\n                                                     getConfigs={ getConfigs }\n                                                     specSelectors={ specSelectors }\n                                                     expandDepth={ defaultModelExpandDepth }\n                                                     specPath={specPath}\n                                                     includeReadOnly = {includeReadOnly}\n                                                     includeWriteOnly = {includeWriteOnly}/>\n\n\n        }\n      </div>\n    </div>\n  }\n\n}\n","import React, { Component, } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class ModelWrapper extends Component {\n\n  static propTypes = {\n    schema: PropTypes.object.isRequired,\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    fullPath: PropTypes.array.isRequired,\n    specPath: ImPropTypes.list.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    expandDepth: PropTypes.number,\n    layoutActions: PropTypes.object,\n    layoutSelectors: PropTypes.object.isRequired,\n    includeReadOnly: PropTypes.bool,\n    includeWriteOnly: PropTypes.bool,\n  }\n\n  onToggle = (name,isShown) => {\n    // If this prop is present, we'll have deepLinking for it\n    if(this.props.layoutActions) {\n      this.props.layoutActions.show(this.props.fullPath, isShown)\n    }\n  }\n\n  render(){\n    let { getComponent, getConfigs } = this.props\n    const Model = getComponent(\"Model\")\n\n    let expanded\n    if(this.props.layoutSelectors) {\n      // If this is prop is present, we'll have deepLinking for it\n      expanded = this.props.layoutSelectors.isShown(this.props.fullPath)\n    }\n\n    return <div className=\"model-box\">\n      <Model { ...this.props } getConfigs={ getConfigs } expanded={expanded} depth={ 1 } onToggle={ this.onToggle } expandDepth={ this.props.expandDepth || 0 }/>\n    </div>\n  }\n}\n","import React from \"react\"\nimport ImmutablePureComponent from \"react-immutable-pure-component\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport PropTypes from \"prop-types\"\n\nexport default class Model extends ImmutablePureComponent {\n  static propTypes = {\n    schema: ImPropTypes.map.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    isRef: PropTypes.bool,\n    required: PropTypes.bool,\n    expandDepth: PropTypes.number,\n    depth: PropTypes.number,\n    specPath: ImPropTypes.list.isRequired,\n    includeReadOnly: PropTypes.bool,\n    includeWriteOnly: PropTypes.bool,\n  }\n\n  getModelName =( ref )=> {\n    if ( ref.indexOf(\"#/definitions/\") !== -1 ) {\n      return ref.replace(/^.*#\\/definitions\\//, \"\")\n    }\n    if ( ref.indexOf(\"#/components/schemas/\") !== -1 ) {\n      return ref.replace(/^.*#\\/components\\/schemas\\//, \"\")\n    }\n  }\n\n  getRefSchema =( model )=> {\n    let { specSelectors } = this.props\n\n    return specSelectors.findDefinition(model)\n  }\n\n  render () {\n    let { getComponent, getConfigs, specSelectors, schema, required, name, isRef, specPath, displayName,\n      includeReadOnly, includeWriteOnly} = this.props\n    const ObjectModel = getComponent(\"ObjectModel\")\n    const ArrayModel = getComponent(\"ArrayModel\")\n    const PrimitiveModel = getComponent(\"PrimitiveModel\")\n    let type = \"object\"\n    let $$ref = schema && schema.get(\"$$ref\")\n\n    // If we weren't passed a `name` but have a ref, grab the name from the ref\n    if ( !name && $$ref ) {\n      name = this.getModelName( $$ref )\n    }\n    // If we weren't passed a `schema` but have a ref, grab the schema from the ref\n    if ( !schema && $$ref ) {\n      schema = this.getRefSchema( name )\n    }\n\n    if(!schema) {\n      return <span className=\"model model-title\">\n              <span className=\"model-title__text\">{ displayName || name }</span>\n              <img src={require(\"core/../img/rolling-load.svg\")} height={\"20px\"} width={\"20px\"} />\n            </span>\n    }\n\n    const deprecated = specSelectors.isOAS3() && schema.get(\"deprecated\")\n    isRef = isRef !== undefined ? isRef : !!$$ref\n    type = schema && schema.get(\"type\") || type\n\n    switch(type) {\n      case \"object\":\n        return <ObjectModel\n          className=\"object\" { ...this.props }\n          specPath={specPath}\n          getConfigs={ getConfigs }\n          schema={ schema }\n          name={ name }\n          deprecated={deprecated}\n          isRef={ isRef }\n          includeReadOnly = {includeReadOnly}\n          includeWriteOnly = {includeWriteOnly}/>\n      case \"array\":\n        return <ArrayModel\n          className=\"array\" { ...this.props }\n          getConfigs={ getConfigs }\n          schema={ schema }\n          name={ name }\n          deprecated={deprecated}\n          required={ required }\n          includeReadOnly = {includeReadOnly}\n          includeWriteOnly = {includeWriteOnly}/>\n      case \"string\":\n      case \"number\":\n      case \"integer\":\n      case \"boolean\":\n      default:\n        return <PrimitiveModel\n          { ...this.props }\n          getComponent={ getComponent }\n          getConfigs={ getConfigs }\n          schema={ schema }\n          name={ name }\n          deprecated={deprecated}\n          required={ required }/>\n    }\n  }\n}\n","import React, { Component } from \"react\"\nimport Im, { Map } from \"immutable\"\nimport PropTypes from \"prop-types\"\n\nexport default class Models extends Component {\n  static propTypes = {\n    getComponent: PropTypes.func,\n    specSelectors: PropTypes.object,\n    specActions: PropTypes.object.isRequired,\n    layoutSelectors: PropTypes.object,\n    layoutActions: PropTypes.object,\n    getConfigs: PropTypes.func.isRequired\n  }\n\n  getSchemaBasePath = () => {\n    const isOAS3 = this.props.specSelectors.isOAS3()\n    return isOAS3 ? [\"components\", \"schemas\"] : [\"definitions\"]\n  }\n\n  getCollapsedContent = () => {\n    return \" \"\n  }\n\n  handleToggle = (name, isExpanded) => {\n    const { layoutActions } = this.props\n    layoutActions.show([...this.getSchemaBasePath(), name], isExpanded)\n    if(isExpanded) {\n      this.props.specActions.requestResolvedSubtree([...this.getSchemaBasePath(), name])\n    }\n  }\n\n  onLoadModels = (ref) => {\n    if (ref) {\n      this.props.layoutActions.readyToScroll(this.getSchemaBasePath(), ref)\n    }\n  }\n\n  onLoadModel = (ref) => {\n    if (ref) {\n      const name = ref.getAttribute(\"data-name\")\n      this.props.layoutActions.readyToScroll([...this.getSchemaBasePath(), name], ref)\n    }\n  }\n\n  render(){\n    let { specSelectors, getComponent, layoutSelectors, layoutActions, getConfigs } = this.props\n    let definitions = specSelectors.definitions()\n    let { docExpansion, defaultModelsExpandDepth } = getConfigs()\n    if (!definitions.size || defaultModelsExpandDepth < 0) return null\n\n    const specPathBase = this.getSchemaBasePath()\n    let showModels = layoutSelectors.isShown(specPathBase, defaultModelsExpandDepth > 0 && docExpansion !== \"none\")\n    const isOAS3 = specSelectors.isOAS3()\n\n    const ModelWrapper = getComponent(\"ModelWrapper\")\n    const Collapse = getComponent(\"Collapse\")\n    const ModelCollapse = getComponent(\"ModelCollapse\")\n    const JumpToPath = getComponent(\"JumpToPath\")\n\n    return <section className={ showModels ? \"models is-open\" : \"models\"} ref={this.onLoadModels}>\n      <h4 onClick={() => layoutActions.show(specPathBase, !showModels)}>\n        <span>{isOAS3 ? \"Schemas\" : \"Models\" }</span>\n        <svg width=\"20\" height=\"20\">\n          <use xlinkHref={showModels ? \"#large-arrow-down\" : \"#large-arrow\"} />\n        </svg>\n      </h4>\n      <Collapse isOpened={showModels}>\n        {\n          definitions.entrySeq().map(([name])=>{\n\n            const fullPath = [...specPathBase, name]\n            const specPath = Im.List(fullPath)\n\n            const schemaValue = specSelectors.specResolvedSubtree(fullPath)\n            const rawSchemaValue = specSelectors.specJson().getIn(fullPath)\n\n            const schema = Map.isMap(schemaValue) ? schemaValue : Im.Map()\n            const rawSchema = Map.isMap(rawSchemaValue) ? rawSchemaValue : Im.Map()\n\n            const displayName = schema.get(\"title\") || rawSchema.get(\"title\") || name\n            const isShown = layoutSelectors.isShown(fullPath, false)\n\n            if( isShown && (schema.size === 0 && rawSchema.size > 0) ) {\n              // Firing an action in a container render is not great,\n              // but it works for now.\n              this.props.specActions.requestResolvedSubtree(fullPath)\n            }\n\n            const content = <ModelWrapper name={ name }\n              expandDepth={ defaultModelsExpandDepth }\n              schema={ schema || Im.Map() }\n              displayName={displayName}\n              fullPath={fullPath}\n              specPath={specPath}\n              getComponent={ getComponent }\n              specSelectors={ specSelectors }\n              getConfigs = {getConfigs}\n              layoutSelectors = {layoutSelectors}\n              layoutActions = {layoutActions}\n              includeReadOnly = {true}\n              includeWriteOnly = {true}/>\n\n            const title = <span className=\"model-box\">\n              <span className=\"model model-title\">\n                {displayName}\n              </span>\n            </span>\n\n            return <div id={ `model-${name}` } className=\"model-container\" key={ `models-section-${name}` }\n                    data-name={name} ref={this.onLoadModel} >\n              <span className=\"models-jump-to-path\"><JumpToPath specPath={specPath} /></span>\n              <ModelCollapse\n                classes=\"model-box\"\n                collapsedContent={this.getCollapsedContent(name)}\n                onToggle={this.handleToggle}\n                title={title}\n                displayName={displayName}\n                modelName={name}\n                specPath={specPath}\n                layoutSelectors={layoutSelectors}\n                layoutActions={layoutActions}\n                hideSelfOnExpand={true}\n                expanded={ defaultModelsExpandDepth > 0 && isShown }\n                >{content}</ModelCollapse>\n              </div>\n          }).toArray()\n        }\n      </Collapse>\n    </section>\n  }\n}\n","import React from \"react\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nconst EnumModel = ({ value, getComponent }) => {\n  let ModelCollapse = getComponent(\"ModelCollapse\")\n  let collapsedContent = <span>Array [ { value.count() } ]</span>\n  return <span className=\"prop-enum\">\n    Enum:<br />\n    <ModelCollapse collapsedContent={ collapsedContent }>\n      [ { value.join(\", \") } ]\n    </ModelCollapse>\n  </span>\n}\nEnumModel.propTypes = {\n  value: ImPropTypes.iterable,\n  getComponent: ImPropTypes.func\n}\n\nexport default EnumModel","import React, { Component, } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { List } from \"immutable\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nconst braceOpen = \"{\"\nconst braceClose = \"}\"\nconst propClass = \"property\"\n\nexport default class ObjectModel extends Component {\n  static propTypes = {\n    schema: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    expanded: PropTypes.bool,\n    onToggle: PropTypes.func,\n    specSelectors: PropTypes.object.isRequired,\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    isRef: PropTypes.bool,\n    expandDepth: PropTypes.number,\n    depth: PropTypes.number,\n    specPath: ImPropTypes.list.isRequired,\n    includeReadOnly: PropTypes.bool,\n    includeWriteOnly: PropTypes.bool,\n  }\n\n  render(){\n    let { schema, name, displayName, isRef, getComponent, getConfigs, depth, onToggle, expanded, specPath, ...otherProps } = this.props\n    let { specSelectors,expandDepth, includeReadOnly, includeWriteOnly} = otherProps\n    const { isOAS3 } = specSelectors\n\n    if(!schema) {\n      return null\n    }\n\n    const { showExtensions } = getConfigs()\n\n    let description = schema.get(\"description\")\n    let properties = schema.get(\"properties\")\n    let additionalProperties = schema.get(\"additionalProperties\")\n    let title = schema.get(\"title\") || displayName || name\n    let requiredProperties = schema.get(\"required\")\n    let infoProperties = schema\n      .filter( ( v, key) => [\"maxProperties\", \"minProperties\", \"nullable\", \"example\"].indexOf(key) !== -1 )\n    let deprecated = schema.get(\"deprecated\")\n\n    const JumpToPath = getComponent(\"JumpToPath\", true)\n    const Markdown = getComponent(\"Markdown\", true)\n    const Model = getComponent(\"Model\")\n    const ModelCollapse = getComponent(\"ModelCollapse\")\n    const Property = getComponent(\"Property\")\n\n    const JumpToPathSection = () => {\n      return <span className=\"model-jump-to-path\"><JumpToPath specPath={specPath} /></span>\n    }\n    const collapsedContent = (<span>\n        <span>{ braceOpen }</span>...<span>{ braceClose }</span>\n        {\n          isRef ? <JumpToPathSection /> : \"\"\n        }\n    </span>)\n\n    const anyOf = specSelectors.isOAS3() ? schema.get(\"anyOf\") : null\n    const oneOf = specSelectors.isOAS3() ? schema.get(\"oneOf\") : null\n    const not = specSelectors.isOAS3() ? schema.get(\"not\") : null\n\n    const titleEl = title && <span className=\"model-title\">\n      { isRef && schema.get(\"$$ref\") && <span className=\"model-hint\">{ schema.get(\"$$ref\") }</span> }\n      <span className=\"model-title__text\">{ title }</span>\n    </span>\n\n    return <span className=\"model\">\n      <ModelCollapse\n        modelName={name}\n        title={titleEl}\n        onToggle = {onToggle}\n        expanded={ expanded ? true : depth <= expandDepth }\n        collapsedContent={ collapsedContent }>\n\n         <span className=\"brace-open object\">{ braceOpen }</span>\n          {\n            !isRef ? null : <JumpToPathSection />\n          }\n          <span className=\"inner-object\">\n            {\n              <table className=\"model\"><tbody>\n              {\n                !description ? null : <tr className=\"description\">\n                    <td>description:</td>\n                    <td>\n                      <Markdown source={ description } />\n                    </td>\n                  </tr>\n              }\n              {\n                !deprecated ? null :\n                  <tr className={\"property\"}>\n                    <td>\n                      deprecated:\n                    </td>\n                    <td>\n                      true\n                    </td>\n                  </tr>\n               \n              }\n              {\n                !(properties && properties.size) ? null : properties.entrySeq().filter(\n                    ([, value]) => {\n                      return (!value.get(\"readOnly\") || includeReadOnly) &&\n                        (!value.get(\"writeOnly\") || includeWriteOnly)\n                    }\n                ).map(\n                    ([key, value]) => {\n                      let isDeprecated = isOAS3() && value.get(\"deprecated\")\n                      let isRequired = List.isList(requiredProperties) && requiredProperties.contains(key)\n\n                      let classNames = [\"property-row\"]\n\n                      if (isDeprecated) {\n                        classNames.push(\"deprecated\")\n                      }\n\n                      if (isRequired) {\n                        classNames.push(\"required\")\n                      }\n\n                      return (<tr key={key} className={classNames.join(\" \")}>\n                        <td>\n                          { key }{ isRequired && <span className=\"star\">*</span> }\n                        </td>\n                        <td>\n                          <Model key={ `object-${name}-${key}_${value}` } { ...otherProps }\n                                 required={ isRequired }\n                                 getComponent={ getComponent }\n                                 specPath={specPath.push(\"properties\", key)}\n                                 getConfigs={ getConfigs }\n                                 schema={ value }\n                                 depth={ depth + 1 } />\n                        </td>\n                      </tr>)\n                    }).toArray()\n              }\n              {\n                // empty row befor extensions...\n                !showExtensions ? null : <tr><td>&nbsp;</td></tr>\n              }\n              {\n                !showExtensions ? null :\n                  schema.entrySeq().map(\n                    ([key, value]) => {\n                      if(key.slice(0,2) !== \"x-\") {\n                        return\n                      }\n\n                      const normalizedValue = !value ? null : value.toJS ? value.toJS() : value\n\n                      return (<tr key={key} className=\"extension\">\n                        <td>\n                          { key }\n                        </td>\n                        <td>\n                          { JSON.stringify(normalizedValue) }\n                        </td>\n                      </tr>)\n                    }).toArray()\n              }\n              {\n                !additionalProperties || !additionalProperties.size ? null\n                  : <tr>\n                    <td>{ \"< * >:\" }</td>\n                    <td>\n                      <Model { ...otherProps } required={ false }\n                             getComponent={ getComponent }\n                             specPath={specPath.push(\"additionalProperties\")}\n                             getConfigs={ getConfigs }\n                             schema={ additionalProperties }\n                             depth={ depth + 1 } />\n                    </td>\n                  </tr>\n              }\n              {\n                !anyOf ? null\n                  : <tr>\n                    <td>{ \"anyOf ->\" }</td>\n                    <td>\n                      {anyOf.map((schema, k) => {\n                        return <div key={k}><Model { ...otherProps } required={ false }\n                                 getComponent={ getComponent }\n                                 specPath={specPath.push(\"anyOf\", k)}\n                                 getConfigs={ getConfigs }\n                                 schema={ schema }\n                                 depth={ depth + 1 } /></div>\n                      })}\n                    </td>\n                  </tr>\n              }\n              {\n                !oneOf ? null\n                  : <tr>\n                    <td>{ \"oneOf ->\" }</td>\n                    <td>\n                      {oneOf.map((schema, k) => {\n                        return <div key={k}><Model { ...otherProps } required={ false }\n                                 getComponent={ getComponent }\n                                 specPath={specPath.push(\"oneOf\", k)}\n                                 getConfigs={ getConfigs }\n                                 schema={ schema }\n                                 depth={ depth + 1 } /></div>\n                      })}\n                    </td>\n                  </tr>\n              }\n              {\n                !not ? null\n                  : <tr>\n                    <td>{ \"not ->\" }</td>\n                    <td>\n                      <div>\n                        <Model { ...otherProps }\n                               required={ false }\n                               getComponent={ getComponent }\n                               specPath={specPath.push(\"not\")}\n                               getConfigs={ getConfigs }\n                               schema={ not }\n                               depth={ depth + 1 } />\n                      </div>\n                    </td>\n                  </tr>\n              }\n              </tbody></table>\n          }\n        </span>\n        <span className=\"brace-close\">{ braceClose }</span>\n      </ModelCollapse>\n      {\n        infoProperties.size ? infoProperties.entrySeq().map( ( [ key, v ] ) => <Property key={`${key}-${v}`} propKey={ key } propVal={ v } propClass={ propClass } />) : null\n      }\n    </span>\n  }\n}\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nconst propClass = \"property\"\n\nexport default class ArrayModel extends Component {\n  static propTypes = {\n    schema: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    required: PropTypes.bool,\n    expandDepth: PropTypes.number,\n    specPath: ImPropTypes.list.isRequired,\n    depth: PropTypes.number,\n    includeReadOnly: PropTypes.bool,\n    includeWriteOnly: PropTypes.bool,\n  }\n\n  render(){\n    let { getComponent, getConfigs, schema, depth, expandDepth, name, displayName, specPath } = this.props\n    let description = schema.get(\"description\")\n    let items = schema.get(\"items\")\n    let title = schema.get(\"title\") || displayName || name\n    let properties = schema.filter( ( v, key) => [\"type\", \"items\", \"description\", \"$$ref\"].indexOf(key) === -1 )\n\n    const Markdown = getComponent(\"Markdown\", true)\n    const ModelCollapse = getComponent(\"ModelCollapse\")\n    const Model = getComponent(\"Model\")\n    const Property = getComponent(\"Property\")\n\n    const titleEl = title &&\n      <span className=\"model-title\">\n        <span className=\"model-title__text\">{ title }</span>\n      </span>\n\n    /*\n    Note: we set `name={null}` in <Model> below because we don't want\n    the name of the current Model passed (and displayed) as the name of the array element Model\n    */\n\n    return <span className=\"model\">\n      <ModelCollapse title={titleEl} expanded={ depth <= expandDepth } collapsedContent=\"[...]\">\n        [\n          {\n            properties.size ? properties.entrySeq().map( ( [ key, v ] ) => <Property key={`${key}-${v}`} propKey={ key } propVal={ v } propClass={ propClass } />) : null\n          }\n          {\n            !description ? (properties.size ? <div className=\"markdown\"></div> : null) :\n              <Markdown source={ description } />\n          }\n          <span>\n            <Model\n              { ...this.props }\n              getConfigs={ getConfigs }\n              specPath={specPath.push(\"items\")}\n              name={null}\n              schema={ items }\n              required={ false }\n              depth={ depth + 1 }\n            />\n          </span>\n        ]\n      </ModelCollapse>\n    </span>\n  }\n}\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { getExtensions } from \"core/utils\"\n\nconst propClass = \"property primitive\"\n\nexport default class Primitive extends Component {\n  static propTypes = {\n    schema: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    name: PropTypes.string,\n    displayName: PropTypes.string,\n    depth: PropTypes.number\n  }\n\n  render(){\n    let { schema, getComponent, getConfigs, name, displayName, depth } = this.props\n\n    const { showExtensions } = getConfigs()\n\n    if(!schema || !schema.get) {\n      // don't render if schema isn't correctly formed\n      return <div></div>\n    }\n\n    let type = schema.get(\"type\")\n    let format = schema.get(\"format\")\n    let xml = schema.get(\"xml\")\n    let enumArray = schema.get(\"enum\")\n    let title = schema.get(\"title\") || displayName || name\n    let description = schema.get(\"description\")\n    let extensions = getExtensions(schema)\n    let properties = schema\n      .filter( ( v, key) => [\"enum\", \"type\", \"format\", \"description\", \"$$ref\"].indexOf(key) === -1 )\n      .filterNot( (v, key) => extensions.has(key) )\n    const Markdown = getComponent(\"Markdown\", true)\n    const EnumModel = getComponent(\"EnumModel\")\n    const Property = getComponent(\"Property\")\n\n    return <span className=\"model\">\n      <span className=\"prop\">\n        { name && <span className={`${depth === 1 && \"model-title\"} prop-name`}>{ title }</span> }\n        <span className=\"prop-type\">{ type }</span>\n        { format && <span className=\"prop-format\">(${format})</span>}\n        {\n          properties.size ? properties.entrySeq().map( ( [ key, v ] ) => <Property key={`${key}-${v}`} propKey={ key } propVal={ v } propClass={ propClass } />) : null\n        }\n        {\n          showExtensions && extensions.size ? extensions.entrySeq().map( ( [ key, v ] ) => <Property key={`${key}-${v}`} propKey={ key } propVal={ v } propClass={ propClass } />) : null\n        }\n        {\n          !description ? null :\n            <Markdown source={ description } />\n        }\n        {\n          xml && xml.size ? (<span><br /><span className={ propClass }>xml:</span>\n            {\n              xml.entrySeq().map( ( [ key, v ] ) => <span key={`${key}-${v}`} className={ propClass }><br/>&nbsp;&nbsp;&nbsp;{key}: { String(v) }</span>).toArray()\n            }\n          </span>): null\n        }\n        {\n          enumArray && <EnumModel value={ enumArray } getComponent={ getComponent } />\n        }\n      </span>\n    </span>\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const Property = ({ propKey, propVal, propClass }) => {\n    return (\n        <span className={ propClass }>\n          <br />{ propKey }: { String(propVal) }</span>\n    )\n}\nProperty.propTypes = {\n  propKey: PropTypes.string,\n  propVal: PropTypes.any,\n  propClass: PropTypes.string\n}\n\nexport default Property\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class TryItOutButton extends React.Component {\n\n  static propTypes = {\n    onTryoutClick: PropTypes.func,\n    onCancelClick: PropTypes.func,\n    enabled: PropTypes.bool, // Try it out is enabled, ie: the user has access to the form\n  };\n\n  static defaultProps = {\n    onTryoutClick: Function.prototype,\n    onCancelClick: Function.prototype,\n    enabled: false,\n  };\n\n  render() {\n    const { onTryoutClick, onCancelClick, enabled } = this.props\n\n    return (\n      <div className=\"try-out\">\n        {\n          enabled ? <button className=\"btn try-out__btn cancel\" onClick={ onCancelClick }>Cancel</button>\n                  : <button className=\"btn try-out__btn\" onClick={ onTryoutClick }>Try it out </button>\n        }\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class VersionPragmaFilter extends React.PureComponent {\n  static propTypes = {\n    isSwagger2: PropTypes.bool.isRequired,\n    isOAS3: PropTypes.bool.isRequired,\n    bypass: PropTypes.bool,\n    alsoShow: PropTypes.element,\n    children: PropTypes.any,\n  }\n\n  static defaultProps = {\n    alsoShow: null,\n    children: null,\n    bypass: false,\n  }\n\n  render() {\n    const { bypass, isSwagger2, isOAS3, alsoShow } = this.props\n\n    if(bypass) {\n      return <div>{ this.props.children }</div>\n    }\n\n    if(isSwagger2 && isOAS3) {\n      return <div className=\"version-pragma\">\n        {alsoShow}\n        <div className=\"version-pragma__message version-pragma__message--ambiguous\">\n          <div>\n            <h3>Unable to render this definition</h3>\n            <p><code>swagger</code> and <code>openapi</code> fields cannot be present in the same Swagger or OpenAPI definition. Please remove one of the fields.</p>\n            <p>Supported version fields are <code>swagger: {\"\\\"2.0\\\"\"}</code> and those that match <code>openapi: 3.0.n</code> (for example, <code>openapi: 3.0.0</code>).</p>\n          </div>\n        </div>\n      </div>\n    }\n\n    if(!isSwagger2 && !isOAS3) {\n      return <div className=\"version-pragma\">\n        {alsoShow}\n        <div className=\"version-pragma__message version-pragma__message--missing\">\n          <div>\n            <h3>Unable to render this definition</h3>\n            <p>The provided definition does not specify a valid version field.</p>\n            <p>Please indicate a valid Swagger or OpenAPI version field. Supported version fields are <code>swagger: {\"\\\"2.0\\\"\"}</code> and those that match <code>openapi: 3.0.n</code> (for example, <code>openapi: 3.0.0</code>).</p>\n          </div>\n        </div>\n      </div>\n    }\n\n    return <div>{ this.props.children }</div>\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst VersionStamp = ({ version }) => {\n  return <small><pre className=\"version\"> { version } </pre></small>\n}\n\nVersionStamp.propTypes = {\n  version: PropTypes.string.isRequired\n}\n\nexport default VersionStamp\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const DeepLink = ({ enabled, path, text }) => {\n    return (\n        <a className=\"nostyle\"\n          onClick={enabled ? (e) => e.preventDefault() : null}\n          href={enabled ? `#/${path}` : null}>\n          <span>{text}</span>\n        </a>\n    )\n}\nDeepLink.propTypes = {\n  enabled: PropTypes.bool,\n  isShown: PropTypes.bool,\n  path: PropTypes.string,\n  text: PropTypes.string\n}\n\nexport default DeepLink\n","import React from \"react\"\nconst SvgAssets = () =>\n  <div>\n    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" className=\"svg-assets\">\n      <defs>\n        <symbol viewBox=\"0 0 20 20\" id=\"unlocked\">\n          <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V6h2v-.801C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8z\"></path>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"locked\">\n          <path d=\"M15.8 8H14V5.6C14 2.703 12.665 1 10 1 7.334 1 6 2.703 6 5.6V8H4c-.553 0-1 .646-1 1.199V17c0 .549.428 1.139.951 1.307l1.197.387C5.672 18.861 6.55 19 7.1 19h5.8c.549 0 1.428-.139 1.951-.307l1.196-.387c.524-.167.953-.757.953-1.306V9.199C17 8.646 16.352 8 15.8 8zM12 8H8V5.199C8 3.754 8.797 3 10 3c1.203 0 2 .754 2 2.199V8z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"close\">\n          <path d=\"M14.348 14.849c-.469.469-1.229.469-1.697 0L10 11.819l-2.651 3.029c-.469.469-1.229.469-1.697 0-.469-.469-.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-.469-.469-.469-1.228 0-1.697.469-.469 1.228-.469 1.697 0L10 8.183l2.651-3.031c.469-.469 1.228-.469 1.697 0 .469.469.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c.469.469.469 1.229 0 1.698z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"large-arrow\">\n          <path d=\"M13.25 10L6.109 2.58c-.268-.27-.268-.707 0-.979.268-.27.701-.27.969 0l7.83 7.908c.268.271.268.709 0 .979l-7.83 7.908c-.268.271-.701.27-.969 0-.268-.269-.268-.707 0-.979L13.25 10z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 20 20\" id=\"large-arrow-down\">\n          <path d=\"M17.418 6.109c.272-.268.709-.268.979 0s.271.701 0 .969l-7.908 7.83c-.27.268-.707.268-.979 0l-7.908-7.83c-.27-.268-.27-.701 0-.969.271-.268.709-.268.979 0L10 13.25l7.418-7.141z\"/>\n        </symbol>\n\n\n        <symbol viewBox=\"0 0 24 24\" id=\"jump-to\">\n          <path d=\"M19 7v4H5.83l3.58-3.59L8 6l-6 6 6 6 1.41-1.41L5.83 13H21V7z\"/>\n        </symbol>\n\n        <symbol viewBox=\"0 0 24 24\" id=\"expand\">\n          <path d=\"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"/>\n        </symbol>\n\n      </defs>\n    </svg>\n  </div>\n\nexport default SvgAssets\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Remarkable } from \"remarkable\"\nimport { linkify } from \"remarkable/linkify\"\nimport DomPurify from \"dompurify\"\nimport cx from \"classnames\"\n\nif (DomPurify.addHook) {\n  DomPurify.addHook(\"beforeSanitizeElements\", function (current, ) {\n    // Attach safe `rel` values to all elements that contain an `href`,\n    // i.e. all anchors that are links.\n    // We _could_ just look for elements that have a non-self target,\n    // but applying it more broadly shouldn't hurt anything, and is safer.\n    if (current.href) {\n      current.setAttribute(\"rel\", \"noopener noreferrer\")\n    }\n    return current\n  })\n}\n\nfunction Markdown({ source, className = \"\", getConfigs }) {\n  if (typeof source !== \"string\") {\n    return null\n  }\n\n  const md = new Remarkable({\n    html: true,\n    typographer: true,\n    breaks: true,\n    linkTarget: \"_blank\"\n  }).use(linkify)\n\n  md.core.ruler.disable([\"replacements\", \"smartquotes\"])\n\n  const { useUnsafeMarkdown } = getConfigs()\n  const html = md.render(source)\n  const sanitized = sanitizer(html, { useUnsafeMarkdown })\n\n  if (!source || !html || !sanitized) {\n    return null\n  }\n\n  return (\n    <div className={cx(className, \"markdown\")} dangerouslySetInnerHTML={{ __html: sanitized }}></div>\n  )\n}\n\nMarkdown.propTypes = {\n  source: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  getConfigs: PropTypes.func,\n}\n\nMarkdown.defaultProps = {\n  getConfigs: () => ({ useUnsafeMarkdown: false }),\n}\n\nexport default Markdown\n\nexport function sanitizer(str, { useUnsafeMarkdown = false } = {}) {\n  const ALLOW_DATA_ATTR = useUnsafeMarkdown\n  const FORBID_ATTR = useUnsafeMarkdown ? [] : [\"style\", \"class\"]\n\n  if (useUnsafeMarkdown && !sanitizer.hasWarnedAboutDeprecation) {\n    console.warn(`useUnsafeMarkdown display configuration parameter is deprecated since >3.26.0 and will be removed in v4.0.0.`)\n    sanitizer.hasWarnedAboutDeprecation = true\n  }\n\n  return DomPurify.sanitize(str, {\n    ADD_ATTR: [\"target\"],\n    FORBID_TAGS: [\"style\"],\n    ALLOW_DATA_ATTR,\n    FORBID_ATTR,\n  })\n}\nsanitizer.hasWarnedAboutDeprecation = false\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class BaseLayout extends React.Component {\n\n  static propTypes = {\n    errSelectors: PropTypes.object.isRequired,\n    errActions: PropTypes.object.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    oas3Selectors: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired\n  }\n\n  render() {\n    let {errSelectors, specSelectors, getComponent} = this.props\n\n    let SvgAssets = getComponent(\"SvgAssets\")\n    let InfoContainer = getComponent(\"InfoContainer\", true)\n    let VersionPragmaFilter = getComponent(\"VersionPragmaFilter\")\n    let Operations = getComponent(\"operations\", true)\n    let Models = getComponent(\"Models\", true)\n    let Row = getComponent(\"Row\")\n    let Col = getComponent(\"Col\")\n    let Errors = getComponent(\"errors\", true)\n\n    const ServersContainer = getComponent(\"ServersContainer\", true)\n    const SchemesContainer = getComponent(\"SchemesContainer\", true)\n    const AuthorizeBtnContainer = getComponent(\"AuthorizeBtnContainer\", true)\n    const FilterContainer = getComponent(\"FilterContainer\", true)\n    let isSwagger2 = specSelectors.isSwagger2()\n    let isOAS3 = specSelectors.isOAS3()\n\n    const isSpecEmpty = !specSelectors.specStr()\n\n    const loadingStatus = specSelectors.loadingStatus()\n\n    let loadingMessage = null\n  \n    if(loadingStatus === \"loading\") {\n      loadingMessage = <div className=\"info\">\n        <div className=\"loading-container\">\n          <div className=\"loading\"></div>\n        </div>\n      </div>\n    }\n\n    if(loadingStatus === \"failed\") {\n      loadingMessage = <div className=\"info\">\n        <div className=\"loading-container\">\n          <h4 className=\"title\">Failed to load API definition.</h4>\n          <Errors />\n        </div>\n      </div>\n    }\n\n    if (loadingStatus === \"failedConfig\") {\n      const lastErr = errSelectors.lastError()\n      const lastErrMsg = lastErr ? lastErr.get(\"message\") : \"\"\n      loadingMessage = <div className=\"info failed-config\">\n        <div className=\"loading-container\">\n          <h4 className=\"title\">Failed to load remote configuration.</h4>\n          <p>{lastErrMsg}</p>\n        </div>\n      </div>\n    }\n\n    if(!loadingMessage && isSpecEmpty) {\n      loadingMessage = <h4>No API definition provided.</h4>\n    }\n\n    if(loadingMessage) {\n      return <div className=\"swagger-ui\">\n        <div className=\"loading-container\">\n          {loadingMessage}\n        </div>\n      </div>\n    }\n\n    const servers = specSelectors.servers()\n    const schemes = specSelectors.schemes()\n\n    const hasServers = servers && servers.size\n    const hasSchemes = schemes && schemes.size\n    const hasSecurityDefinitions = !!specSelectors.securityDefinitions()\n\n    return (\n\n      <div className='swagger-ui'>\n          <SvgAssets />\n          <VersionPragmaFilter isSwagger2={isSwagger2} isOAS3={isOAS3} alsoShow={<Errors/>}>\n            <Errors/>\n            <Row className=\"information-container\">\n              <Col mobile={12}>\n                <InfoContainer/>\n              </Col>\n            </Row>\n\n            {hasServers || hasSchemes || hasSecurityDefinitions ? (\n              <div className=\"scheme-container\">\n                <Col className=\"schemes wrapper\" mobile={12}>\n                  {hasServers ? (<ServersContainer />) : null}\n                  {hasSchemes ? (<SchemesContainer />) : null}\n                  {hasSecurityDefinitions ? (<AuthorizeBtnContainer />) : null}\n                </Col>\n              </div>\n            ) : null}\n\n            <FilterContainer/>\n\n            <Row>\n              <Col mobile={12} desktop={12} >\n                <Operations/>\n              </Col>\n            </Row>\n            <Row>\n              <Col mobile={12} desktop={12} >\n                <Models/>\n              </Col>\n            </Row>\n          </VersionPragmaFilter>\n        </div>\n      )\n  }\n}\n","import React, { PureComponent, Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { List, fromJS } from \"immutable\"\nimport cx from \"classnames\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport DebounceInput from \"react-debounce-input\"\nimport { stringify, getSampleSchema } from \"core/utils\"\n//import \"less/json-schema-form\"\n\nconst noop = ()=> {}\nconst JsonSchemaPropShape = {\n  getComponent: PropTypes.func.isRequired,\n  value: PropTypes.any,\n  onChange: PropTypes.func,\n  keyName: PropTypes.any,\n  fn: PropTypes.object.isRequired,\n  schema: PropTypes.object,\n  errors: ImPropTypes.list,\n  required: PropTypes.bool,\n  dispatchInitialValue: PropTypes.bool,\n  description: PropTypes.any,\n  disabled: PropTypes.bool,\n}\n\nconst JsonSchemaDefaultProps = {\n  value: \"\",\n  onChange: noop,\n  schema: {},\n  keyName: \"\",\n  required: false,\n  errors: List()\n}\n\nexport class JsonSchemaForm extends Component {\n\n  static propTypes = JsonSchemaPropShape\n  static defaultProps = JsonSchemaDefaultProps\n\n  componentDidMount() {\n    const { dispatchInitialValue, value, onChange } = this.props\n    if(dispatchInitialValue) {\n      onChange(value)\n    }\n  }\n\n  render() {\n    let { schema, errors, value, onChange, getComponent, fn, disabled } = this.props\n    const format = schema && schema.get ? schema.get(\"format\") : null\n    const type = schema && schema.get ? schema.get(\"type\") : null\n\n    let getComponentSilently = (name) => getComponent(name, false, { failSilently: true })\n    let Comp = type ? format ?\n      getComponentSilently(`JsonSchema_${type}_${format}`) :\n      getComponentSilently(`JsonSchema_${type}`) :\n      getComponent(\"JsonSchema_string\")\n    if (!Comp) {\n      Comp = getComponent(\"JsonSchema_string\")\n    }\n    return <Comp { ...this.props } errors={errors} fn={fn} getComponent={getComponent} value={value} onChange={onChange} schema={schema} disabled={disabled}/>\n  }\n}\n\nexport class JsonSchema_string extends Component {\n  static propTypes = JsonSchemaPropShape\n  static defaultProps = JsonSchemaDefaultProps\n  onChange = (e) => {\n    const value = this.props.schema && this.props.schema.get(\"type\") === \"file\" ? e.target.files[0] : e.target.value\n    this.props.onChange(value, this.props.keyName)\n  }\n  onEnumChange = (val) => this.props.onChange(val)\n  render() {\n    let { getComponent, value, schema, errors, required, description, disabled } = this.props\n    const enumValue = schema && schema.get ? schema.get(\"enum\") : null\n    const format = schema && schema.get ? schema.get(\"format\") : null\n    const type = schema && schema.get ? schema.get(\"type\") : null\n    const schemaIn = schema && schema.get ? schema.get(\"in\") : null\n    if (!value) {\n      value = \"\" // value should not be null; this fixes a Debounce error\n    }\n    errors = errors.toJS ? errors.toJS() : []\n\n    if ( enumValue ) {\n      const Select = getComponent(\"Select\")\n      return (<Select className={ errors.length ? \"invalid\" : \"\"}\n                      title={ errors.length ? errors : \"\"}\n                      allowedValues={ enumValue }\n                      value={ value }\n                      allowEmptyValue={ !required }\n                      disabled={disabled}\n                      onChange={ this.onEnumChange }/>)\n    }\n\n    const isDisabled = disabled || (schemaIn && schemaIn === \"formData\" && !(\"FormData\" in window))\n    const Input = getComponent(\"Input\")\n    if (type && type === \"file\") {\n      return (\n        <Input type=\"file\"\n          className={errors.length ? \"invalid\" : \"\"}\n          title={errors.length ? errors : \"\"}\n          onChange={this.onChange}\n          disabled={isDisabled} />\n      )\n    }\n    else {\n      return (\n        <DebounceInput\n          type={format && format === \"password\" ? \"password\" : \"text\"}\n          className={errors.length ? \"invalid\" : \"\"}\n          title={errors.length ? errors : \"\"}\n          value={value}\n          minLength={0}\n          debounceTimeout={350}\n          placeholder={description}\n          onChange={this.onChange}\n          disabled={isDisabled} />\n      )\n    }\n  }\n}\n\nexport class JsonSchema_array extends PureComponent {\n\n  static propTypes = JsonSchemaPropShape\n  static defaultProps = JsonSchemaDefaultProps\n\n  constructor(props, context) {\n    super(props, context)\n    this.state = { value: valueOrEmptyList(props.value), schema: props.schema}\n  }\n\n  componentWillReceiveProps(props) {\n    if(props.value !== this.state.value)\n      this.setState({ value: props.value })\n\n    if(props.schema !== this.state.schema)\n      this.setState({ schema: props.schema })\n  }\n\n  onChange = () => {\n    this.props.onChange(this.state.value)\n  }\n\n  onItemChange = (itemVal, i) => {\n    this.setState(({ value }) => ({\n      value: value.set(i, itemVal)\n    }), this.onChange)\n  }\n\n  removeItem = (i) => {\n    this.setState(({ value }) => ({\n      value: value.delete(i)\n    }), this.onChange)\n  }\n \n  addItem = () => {\n    let newValue = valueOrEmptyList(this.state.value)\n    this.setState(() => ({\n      value: newValue.push(getSampleSchema(this.state.schema.get(\"items\"), false, {\n        includeWriteOnly: true\n      }))\n    }), this.onChange)\n  }\n\n  onEnumChange = (value) => {\n    this.setState(() => ({\n      value: value\n    }), this.onChange)\n  }\n\n  render() {\n    let { getComponent, required, schema, errors, fn, disabled } = this.props\n\n    errors = errors.toJS ? errors.toJS() : []\n    const value = this.state.value // expect Im List\n    const shouldRenderValue =\n      value && value.count && value.count() > 0 ? true : false\n    const schemaItemsEnum = schema.getIn([\"items\", \"enum\"])\n    const schemaItemsType = schema.getIn([\"items\", \"type\"])\n    const schemaItemsFormat = schema.getIn([\"items\", \"format\"])\n    const schemaItemsSchema = schema.getIn([\"items\", \"schema\"])\n    let ArrayItemsComponent\n    let isArrayItemText = false\n    let isArrayItemFile = (schemaItemsType === \"file\" || (schemaItemsType === \"string\" && schemaItemsFormat === \"binary\")) ? true : false\n    if (schemaItemsType && schemaItemsFormat) {\n      ArrayItemsComponent = getComponent(`JsonSchema_${schemaItemsType}_${schemaItemsFormat}`)\n    } else if (schemaItemsType === \"boolean\" || schemaItemsType === \"array\" || schemaItemsType === \"object\") {\n      ArrayItemsComponent = getComponent(`JsonSchema_${schemaItemsType}`)\n    }\n    // if ArrayItemsComponent not assigned or does not exist,\n    // use default schemaItemsType === \"string\" & JsonSchemaArrayItemText component\n    if (!ArrayItemsComponent && !isArrayItemFile) {\n      isArrayItemText = true\n    }\n\n    if ( schemaItemsEnum ) {\n      const Select = getComponent(\"Select\")\n      return (<Select className={ errors.length ? \"invalid\" : \"\"}\n                      title={ errors.length ? errors : \"\"}\n                      multiple={ true }\n                      value={ value }\n                      disabled={disabled}\n                      allowedValues={ schemaItemsEnum }\n                      allowEmptyValue={ !required }\n                      onChange={ this.onEnumChange }/>)\n    }\n\n    const Button = getComponent(\"Button\")\n    return (\n      <div className=\"json-schema-array\">\n        {shouldRenderValue ?\n          (value.map((item, i) => {\n            if (errors.length) {\n              let err = errors.filter((err) => err.index === i)\n              if (err.length) errors = [err[0].error + i]\n            }\n            return (\n              <div key={i} className=\"json-schema-form-item\">\n                {\n                  isArrayItemFile ?\n                    <JsonSchemaArrayItemFile\n                    value={item}\n                    onChange={(val)=> this.onItemChange(val, i)}\n                    disabled={disabled}\n                    errors={errors}\n                    getComponent={getComponent}\n                    />\n                    : isArrayItemText ?\n                      <JsonSchemaArrayItemText\n                        value={item}\n                        onChange={(val) => this.onItemChange(val, i)}\n                        disabled={disabled}\n                        errors={errors}\n                      />\n                      : <ArrayItemsComponent {...this.props}\n                        value={item}\n                        onChange={(val) => this.onItemChange(val, i)}\n                        disabled={disabled}\n                        errors={errors}\n                        schema={schemaItemsSchema}\n                        getComponent={getComponent}\n                        fn={fn}\n                      />\n                }\n                {!disabled ? (\n                  <Button\n                    className=\"btn btn-sm json-schema-form-item-remove\"\n                    onClick={() => this.removeItem(i)}\n                  > - </Button>\n                ) : null}\n              </div>\n            )\n          })\n          ) : null\n        }\n        {!disabled ? (\n          <Button\n            className={`btn btn-sm json-schema-form-item-add ${errors.length ? \"invalid\" : null}`}\n            onClick={this.addItem}\n          >\n            Add item\n          </Button>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nexport class JsonSchemaArrayItemText extends Component {\n  static propTypes = JsonSchemaPropShape\n  static defaultProps = JsonSchemaDefaultProps\n\n  onChange = (e) => {\n    const value = e.target.value\n    this.props.onChange(value, this.props.keyName)\n  }\n\n  render() {\n    let { value, errors, description, disabled } = this.props\n    if (!value) {\n      value = \"\" // value should not be null\n    }\n    errors = errors.toJS ? errors.toJS() : []\n\n    return (<DebounceInput\n      type={\"text\"}\n      className={errors.length ? \"invalid\" : \"\"}\n      title={errors.length ? errors : \"\"}\n      value={value}\n      minLength={0}\n      debounceTimeout={350}\n      placeholder={description}\n      onChange={this.onChange}\n      disabled={disabled} />)\n  }\n}\n\nexport class JsonSchemaArrayItemFile extends Component {\n  static propTypes = JsonSchemaPropShape\n  static defaultProps = JsonSchemaDefaultProps\n\n  onFileChange = (e) => {\n    const value = e.target.files[0]\n    this.props.onChange(value, this.props.keyName)\n  }\n\n  render() {\n    let { getComponent, errors, disabled } = this.props\n    const Input = getComponent(\"Input\")\n    const isDisabled = disabled || !(\"FormData\" in window)\n\n    return (<Input type=\"file\"\n      className={errors.length ? \"invalid\" : \"\"}\n      title={errors.length ? errors : \"\"}\n      onChange={this.onFileChange}\n      disabled={isDisabled} />)\n  }\n}\n\nexport class JsonSchema_boolean extends Component {\n  static propTypes = JsonSchemaPropShape\n  static defaultProps = JsonSchemaDefaultProps\n\n  onEnumChange = (val) => this.props.onChange(val)\n  render() {\n    let { getComponent, value, errors, schema, required, disabled } = this.props\n    errors = errors.toJS ? errors.toJS() : []\n    let enumValue = schema && schema.get ? schema.get(\"enum\") : null\n    let allowEmptyValue = !enumValue || !required\n    let booleanValue = !enumValue && fromJS([\"true\", \"false\"])\n    const Select = getComponent(\"Select\")\n\n    return (<Select className={ errors.length ? \"invalid\" : \"\"}\n                    title={ errors.length ? errors : \"\"}\n                    value={ String(value) }\n                    disabled={ disabled }\n                    allowedValues={ enumValue || booleanValue }\n                    allowEmptyValue={ allowEmptyValue }\n                    onChange={ this.onEnumChange }/>)\n  }\n}\n\nexport class JsonSchema_object extends PureComponent {\n  constructor() {\n    super()\n  }\n\n  static propTypes = JsonSchemaPropShape\n  static defaultProps = JsonSchemaDefaultProps\n\n  onChange = (value) => {\n    this.props.onChange(value)\n  }\n\n  handleOnChange = e => {\n    const inputValue = e.target.value\n\n    this.onChange(inputValue)\n  }\n\n  render() {\n    let {\n      getComponent,\n      value,\n      errors,\n      disabled\n    } = this.props\n\n    const TextArea = getComponent(\"TextArea\")\n\n    return (\n      <div>\n        <TextArea\n          className={cx({ invalid: errors.size })}\n          title={ errors.size ? errors.join(\", \") : \"\"}\n          value={stringify(value)}\n          disabled={disabled}\n          onChange={ this.handleOnChange }/>\n      </div>\n    )\n\n  }\n}\n\nfunction valueOrEmptyList(value) {\n  return List.isList(value) ? value : List()\n}\n","import err from \"core/plugins/err\"\nimport layout from \"core/plugins/layout\"\nimport spec from \"core/plugins/spec\"\nimport view from \"core/plugins/view\"\nimport samples from \"core/plugins/samples\"\nimport logs from \"core/plugins/logs\"\nimport swaggerJs from \"core/plugins/swagger-js\"\nimport auth from \"core/plugins/auth\"\nimport util from \"core/plugins/util\"\nimport downloadUrlPlugin from \"core/plugins/download-url\"\nimport configsPlugin from \"core/plugins/configs\"\nimport deepLinkingPlugin from \"core/plugins/deep-linking\"\nimport filter from \"core/plugins/filter\"\nimport onComplete from \"core/plugins/on-complete\"\n\nimport OperationContainer from \"core/containers/OperationContainer\"\n\nimport App from \"core/components/app\"\nimport AuthorizationPopup from \"core/components/auth/authorization-popup\"\nimport AuthorizeBtn from \"core/components/auth/authorize-btn\"\nimport AuthorizeBtnContainer from \"core/containers/authorize-btn\"\nimport AuthorizeOperationBtn from \"core/components/auth/authorize-operation-btn\"\nimport Auths from \"core/components/auth/auths\"\nimport AuthItem from \"core/components/auth/auth-item\"\nimport AuthError from \"core/components/auth/error\"\nimport ApiKeyAuth from \"core/components/auth/api-key-auth\"\nimport BasicAuth from \"core/components/auth/basic-auth\"\nimport Example from \"core/components/example\"\nimport ExamplesSelect from \"core/components/examples-select\"\nimport ExamplesSelectValueRetainer from \"core/components/examples-select-value-retainer\"\nimport Oauth2 from \"core/components/auth/oauth2\"\nimport Clear from \"core/components/clear\"\nimport LiveResponse from \"core/components/live-response\"\nimport OnlineValidatorBadge from \"core/components/online-validator-badge\"\nimport Operations from \"core/components/operations\"\nimport OperationTag from \"core/components/operation-tag\"\nimport Operation from \"core/components/operation\"\nimport OperationSummary from \"core/components/operation-summary\"\nimport OperationSummaryMethod from \"core/components/operation-summary-method\"\nimport OperationSummaryPath from \"core/components/operation-summary-path\"\nimport OperationExt from \"core/components/operation-extensions\"\nimport OperationExtRow from \"core/components/operation-extension-row\"\nimport HighlightCode from \"core/components/highlight-code\"\nimport Responses from \"core/components/responses\"\nimport Response from \"core/components/response\"\nimport ResponseBody from \"core/components/response-body\"\nimport { Parameters } from \"core/components/parameters\"\nimport ParameterExt from \"core/components/parameter-extension\"\nimport ParameterIncludeEmpty from \"core/components/parameter-include-empty\"\nimport ParameterRow from \"core/components/parameter-row\"\nimport Execute from \"core/components/execute\"\nimport Headers from \"core/components/headers\"\nimport Errors from \"core/components/errors\"\nimport ContentType from \"core/components/content-type\"\nimport Overview from \"core/components/overview\"\nimport InitializedInput from \"core/components/initialized-input\"\nimport Info, {\n  InfoUrl,\n  InfoBasePath\n} from \"core/components/info\"\nimport InfoContainer from \"core/containers/info\"\nimport JumpToPath from \"core/components/jump-to-path\"\nimport Footer from \"core/components/footer\"\nimport FilterContainer from \"core/containers/filter\"\nimport ParamBody from \"core/components/param-body\"\nimport Curl from \"core/components/curl\"\nimport Schemes from \"core/components/schemes\"\nimport SchemesContainer from \"core/containers/schemes\"\nimport ModelCollapse from \"core/components/model-collapse\"\nimport ModelExample from \"core/components/model-example\"\nimport ModelWrapper from \"core/components/model-wrapper\"\nimport Model from \"core/components/model\"\nimport Models from \"core/components/models\"\nimport EnumModel from \"core/components/enum-model\"\nimport ObjectModel from \"core/components/object-model\"\nimport ArrayModel from \"core/components/array-model\"\nimport PrimitiveModel from \"core/components/primitive-model\"\nimport Property from \"core/components/property\"\nimport TryItOutButton from \"core/components/try-it-out-button\"\nimport VersionPragmaFilter from \"core/components/version-pragma-filter\"\nimport VersionStamp from \"core/components/version-stamp\"\nimport DeepLink from \"core/components/deep-link\"\nimport SvgAssets from \"core/components/svg-assets\"\n\nimport Markdown from \"core/components/providers/markdown\"\n\nimport BaseLayout from \"core/components/layouts/base\"\n\nimport * as LayoutUtils from \"core/components/layout-utils\"\nimport * as JsonSchemaComponents from \"core/json-schema-components\"\n\nexport default function() {\n\n  let coreComponents = {\n    components: {\n      App,\n      authorizationPopup: AuthorizationPopup,\n      authorizeBtn: AuthorizeBtn,\n      AuthorizeBtnContainer,\n      authorizeOperationBtn: AuthorizeOperationBtn,\n      auths: Auths,\n      AuthItem: AuthItem,\n      authError: AuthError,\n      oauth2: Oauth2,\n      apiKeyAuth: ApiKeyAuth,\n      basicAuth: BasicAuth,\n      clear: Clear,\n      liveResponse: LiveResponse,\n      InitializedInput,\n      info: Info,\n      InfoContainer,\n      JumpToPath,\n      onlineValidatorBadge: OnlineValidatorBadge,\n      operations: Operations,\n      operation: Operation,\n      OperationSummary,\n      OperationSummaryMethod,\n      OperationSummaryPath,\n      highlightCode: HighlightCode,\n      responses: Responses,\n      response: Response,\n      responseBody: ResponseBody,\n      parameters: Parameters,\n      parameterRow: ParameterRow,\n      execute: Execute,\n      headers: Headers,\n      errors: Errors,\n      contentType: ContentType,\n      overview: Overview,\n      footer: Footer,\n      FilterContainer,\n      ParamBody: ParamBody,\n      curl: Curl,\n      schemes: Schemes,\n      SchemesContainer,\n      modelExample: ModelExample,\n      ModelWrapper,\n      ModelCollapse,\n      Model,\n      Models,\n      EnumModel,\n      ObjectModel,\n      ArrayModel,\n      PrimitiveModel,\n      Property,\n      TryItOutButton,\n      Markdown,\n      BaseLayout,\n      VersionPragmaFilter,\n      VersionStamp,\n      OperationExt,\n      OperationExtRow,\n      ParameterExt,\n      ParameterIncludeEmpty,\n      OperationTag,\n      OperationContainer,\n      DeepLink,\n      InfoUrl,\n      InfoBasePath,\n      SvgAssets,\n      Example,\n      ExamplesSelect,\n      ExamplesSelectValueRetainer,\n    }\n  }\n\n  let formComponents = {\n    components: LayoutUtils\n  }\n\n  let jsonSchemaComponents = {\n    components: JsonSchemaComponents\n  }\n\n  return [\n    configsPlugin,\n    util,\n    logs,\n    view,\n    spec,\n    err,\n    layout,\n    samples,\n    coreComponents,\n    formComponents,\n    swaggerJs,\n    jsonSchemaComponents,\n    auth,\n    downloadUrlPlugin,\n    deepLinkingPlugin,\n    filter,\n    onComplete\n  ]\n}\n","import React from \"react\"\n\nexport function isOAS3(jsSpec) {\n  const oasVersion = jsSpec.get(\"openapi\")\n  if(typeof oasVersion !== \"string\") {\n    return false\n  }\n\n  // we gate against `3.1` becasue we want to explicitly opt into supporting it\n  // at some point in the future -- KS, 7/2018\n\n  // starts with, but is not `3.0.` exactly\n  return oasVersion.startsWith(\"3.0.\") && oasVersion.length > 4\n}\n\nexport function isSwagger2(jsSpec) {\n  const swaggerVersion = jsSpec.get(\"swagger\")\n  if(typeof swaggerVersion !== \"string\") {\n    return false\n  }\n\n  return swaggerVersion.startsWith(\"2.0\")\n}\n\nexport function OAS3ComponentWrapFactory(Component) {\n  return (Ori, system) => (props) => {\n    if(system && system.specSelectors && system.specSelectors.specJson) {\n      const spec = system.specSelectors.specJson()\n\n      if(isOAS3(spec)) {\n        return <Component {...props} {...system} Ori={Ori}></Component>\n      } else {\n        return <Ori {...props}></Ori>\n      }\n    } else {\n      console.warn(\"OAS3 wrapper: couldn't get spec\")\n      return null\n    }\n  }\n}\n","import { createSelector } from \"reselect\"\nimport { specJsonWithResolvedSubtrees } from \"../../spec/selectors\"\nimport { Map } from \"immutable\"\nimport { isOAS3 as isOAS3Helper, isSwagger2 as isSwagger2Helper } from \"../helpers\"\n\n\n// Helpers\n\nfunction onlyOAS3(selector) {\n  return (ori, system) => (...args) => {\n    const spec = system.getSystem().specSelectors.specJson()\n    if(isOAS3Helper(spec)) {\n      return selector(...args)\n    } else {\n      return ori(...args)\n    }\n  }\n}\n\nconst state = state => {\n  return state || Map()\n}\n\nconst nullSelector = createSelector(() => null)\n\nconst OAS3NullSelector = onlyOAS3(nullSelector)\n\nconst specJson = createSelector(\n  state,\n  spec => spec.get(\"json\", Map())\n)\n\nconst specResolved = createSelector(\n  state,\n  spec => spec.get(\"resolved\", Map())\n)\n\nconst spec = state => {\n  let res = specResolved(state)\n  if(res.count() < 1)\n    res = specJson(state)\n  return res\n}\n\n// Wrappers\n\nexport const definitions = onlyOAS3(createSelector(\n  spec,\n  spec => {\n    const res = spec.getIn([\"components\", \"schemas\"])\n    return Map.isMap(res) ? res : Map()\n  }\n))\n\nexport const hasHost = onlyOAS3((state) => {\n  return spec(state).hasIn([\"servers\", 0])\n})\n\nexport const securityDefinitions = onlyOAS3(createSelector(\n  specJsonWithResolvedSubtrees,\n  spec => spec.getIn([\"components\", \"securitySchemes\"]) || null\n))\n\nexport const host = OAS3NullSelector\nexport const basePath = OAS3NullSelector\nexport const consumes = OAS3NullSelector\nexport const produces = OAS3NullSelector\nexport const schemes = OAS3NullSelector\n\n// New selectors\n\nexport const servers = onlyOAS3(createSelector(\n  spec,\n  spec => spec.getIn([\"servers\"]) || Map()\n))\n\nexport const isOAS3 = (ori, system) => () => {\n  const spec = system.getSystem().specSelectors.specJson()\n  return isOAS3Helper(Map.isMap(spec) ? spec : Map())\n}\n\nexport const isSwagger2 = (ori, system) => () => {\n  const spec = system.getSystem().specSelectors.specJson()\n  return isSwagger2Helper(Map.isMap(spec) ? spec : Map())\n}\n","import { createSelector } from \"reselect\"\nimport { List, Map, fromJS } from \"immutable\"\nimport { isOAS3 as isOAS3Helper } from \"../helpers\"\n\n\n// Helpers\n\nconst state = state => state\n\nfunction onlyOAS3(selector) {\n  return (ori, system) => (state, ...args) => {\n    const spec = system.getSystem().specSelectors.specJson()\n    if(isOAS3Helper(spec)) {\n      return selector(system, ...args)\n    } else {\n      return ori(...args)\n    }\n  }\n}\n\nexport const definitionsToAuthorize = onlyOAS3(createSelector(\n    state,\n    ({specSelectors}) => specSelectors.securityDefinitions(),\n    (system, definitions) => {\n      // Coerce our OpenAPI 3.0 definitions into monoflow definitions\n      // that look like Swagger2 definitions.\n      let list = List()\n\n      if(!definitions) {\n        return list\n      }\n\n      definitions.entrySeq().forEach( ([ defName, definition ]) => {\n        const type = definition.get(\"type\")\n\n        if(type === \"oauth2\") {\n          definition.get(\"flows\").entrySeq().forEach(([flowKey, flowVal]) => {\n            let translatedDef = fromJS({\n              flow: flowKey,\n              authorizationUrl: flowVal.get(\"authorizationUrl\"),\n              tokenUrl: flowVal.get(\"tokenUrl\"),\n              scopes: flowVal.get(\"scopes\"),\n              type: definition.get(\"type\")\n            })\n\n            list = list.push(new Map({\n              [defName]: translatedDef.filter((v) => {\n                // filter out unset values, sometimes `authorizationUrl`\n                // and `tokenUrl` come out as `undefined` in the data\n                return v !== undefined\n              })\n            }))\n          })\n        }\n        if(type === \"http\" || type === \"apiKey\") {\n          list = list.push(new Map({\n            [defName]: definition\n          }))\n        }\n      })\n\n      return list\n    }\n))\n","import { createSelector } from \"reselect\"\nimport { Map } from \"immutable\"\nimport { isOAS3 as isOAS3Helper, isSwagger2 as isSwagger2Helper } from \"../helpers\"\n\n\n// Helpers\n\nfunction onlyOAS3(selector) {\n  return () => (system, ...args) => {\n    const spec = system.getSystem().specSelectors.specJson()\n    if(isOAS3Helper(spec)) {\n      return selector(...args)\n    } else {\n      return null\n    }\n  }\n}\n\nconst state = state => {\n  return state || Map()\n}\n\nconst specJson = createSelector(\n  state,\n  spec => spec.get(\"json\", Map())\n)\n\nconst specResolved = createSelector(\n  state,\n  spec => spec.get(\"resolved\", Map())\n)\n\nconst spec = state => {\n  let res = specResolved(state)\n  if(res.count() < 1)\n    res = specJson(state)\n  return res\n}\n\n// New selectors\n\nexport const servers = onlyOAS3(createSelector(\n  spec,\n  spec => spec.getIn([\"servers\"]) || Map()\n))\n\nexport const isSwagger2 = (ori, system) => () => {\n  const spec = system.getSystem().specSelectors.specJson()\n  return isSwagger2Helper(spec)\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { fromJS } from \"immutable\"\n\nconst Callbacks = (props) => {\n  let { callbacks, getComponent, specPath } = props\n  // const Markdown = getComponent(\"Markdown\", true)\n  const OperationContainer = getComponent(\"OperationContainer\", true)\n\n  if(!callbacks) {\n    return <span>No callbacks</span>\n  }\n\n  let callbackElements = callbacks.entrySeq().map(([callbackName, callback]) => {\n    return <div key={callbackName}>\n      <h2>{callbackName}</h2>\n      { callback.entrySeq().map(([pathItemName, pathItem]) => {\n        if(pathItemName === \"$$ref\") {\n          return null\n        }\n        return <div key={pathItemName}>\n          { pathItem.entrySeq().map(([method, operation]) => {\n            if(method === \"$$ref\") {\n              return null\n            }\n            let op = fromJS({\n              operation\n            })\n            return <OperationContainer\n              {...props}\n              op={op}\n              key={method}\n              tag={\"\"}\n              method={method}\n              path={pathItemName}\n              specPath={specPath.push(callbackName, pathItemName, method)}\n              allowTryItOut={false}\n              />\n          }) }\n        </div>\n      }) }\n    </div>\n  })\n  return <div>\n    {callbackElements}\n  </div>\n}\n\nCallbacks.propTypes = {\n  getComponent: PropTypes.func.isRequired,\n  callbacks: ImPropTypes.iterable.isRequired,\n  specPath: ImPropTypes.list.isRequired,\n}\n\nexport default Callbacks\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\nimport { Map, OrderedMap, List } from \"immutable\"\nimport { getCommonExtensions, getSampleSchema, stringify, isEmptyValue } from \"core/utils\"\n\nfunction getDefaultRequestBodyValue(requestBody, mediaType, activeExamplesKey) {\n  let mediaTypeValue = requestBody.getIn([\"content\", mediaType])\n  let schema = mediaTypeValue.get(\"schema\").toJS()\n  let example =\n    mediaTypeValue.get(\"example\") !== undefined\n      ? stringify(mediaTypeValue.get(\"example\"))\n      : null\n  let currentExamplesValue = mediaTypeValue.getIn([\n    \"examples\",\n    activeExamplesKey,\n    \"value\"\n  ])\n\n  if (mediaTypeValue.get(\"examples\")) {\n    // the media type DOES have examples\n    return stringify(currentExamplesValue) || \"\"\n  } else {\n    // the media type DOES NOT have examples\n    return stringify(\n      example ||\n        getSampleSchema(schema, mediaType, {\n          includeWriteOnly: true\n        }) ||\n        \"\"\n    )\n  }\n}\n\n\n\nconst RequestBody = ({\n  requestBody,\n  requestBodyValue,\n  requestBodyInclusionSetting,\n  requestBodyErrors,\n  getComponent,\n  getConfigs,\n  specSelectors,\n  fn,\n  contentType,\n  isExecute,\n  specPath,\n  onChange,\n  onChangeIncludeEmpty,\n  activeExamplesKey,\n  updateActiveExamplesKey,\n}) => {\n  const handleFile = (e) => {\n    onChange(e.target.files[0])\n  }\n  const setIsIncludedOptions = (key) => {\n    let options = {\n      key,\n      shouldDispatchInit: false,\n      defaultValue: true\n    }\n    let currentInclusion = requestBodyInclusionSetting.get(key, \"no value\")\n    if (currentInclusion === \"no value\") {\n      options.shouldDispatchInit = true\n      // future: can get/set defaultValue from a config setting\n    }\n    return options\n  }\n\n  const Markdown = getComponent(\"Markdown\", true)\n  const ModelExample = getComponent(\"modelExample\")\n  const RequestBodyEditor = getComponent(\"RequestBodyEditor\")\n  const HighlightCode = getComponent(\"highlightCode\")\n  const ExamplesSelectValueRetainer = getComponent(\"ExamplesSelectValueRetainer\")\n  const Example = getComponent(\"Example\")\n  const ParameterIncludeEmpty = getComponent(\"ParameterIncludeEmpty\")\n\n  const { showCommonExtensions } = getConfigs()\n\n  const requestBodyDescription = (requestBody && requestBody.get(\"description\")) || null\n  const requestBodyContent = (requestBody && requestBody.get(\"content\")) || new OrderedMap()\n  contentType = contentType || requestBodyContent.keySeq().first() || \"\"\n\n  const mediaTypeValue = requestBodyContent.get(contentType, OrderedMap())\n  const schemaForMediaType = mediaTypeValue.get(\"schema\", OrderedMap())\n  const examplesForMediaType = mediaTypeValue.get(\"examples\", null)\n\n  const handleExamplesSelect = (key /*, { isSyntheticChange } */) => {\n    updateActiveExamplesKey(key)\n  }\n  requestBodyErrors = List.isList(requestBodyErrors) ? requestBodyErrors : List()\n\n  if(!mediaTypeValue.size) {\n    return null\n  }\n\n  const isObjectContent = mediaTypeValue.getIn([\"schema\", \"type\"]) === \"object\"\n\n  if(\n    contentType === \"application/octet-stream\"\n    || contentType.indexOf(\"image/\") === 0\n    || contentType.indexOf(\"audio/\") === 0\n    || contentType.indexOf(\"video/\") === 0\n  ) {\n    const Input = getComponent(\"Input\")\n\n    if(!isExecute) {\n      return <i>\n        Example values are not available for <code>application/octet-stream</code> media types.\n      </i>\n    }\n\n    return <Input type={\"file\"} onChange={handleFile} />\n  }\n\n  if (\n    isObjectContent &&\n    (\n      contentType === \"application/x-www-form-urlencoded\" ||\n      contentType.indexOf(\"multipart/\") === 0\n    ) &&\n    schemaForMediaType.get(\"properties\", OrderedMap()).size > 0\n  ) {\n    const JsonSchemaForm = getComponent(\"JsonSchemaForm\")\n    const ParameterExt = getComponent(\"ParameterExt\")\n    const bodyProperties = schemaForMediaType.get(\"properties\", OrderedMap())\n    requestBodyValue = Map.isMap(requestBodyValue) ? requestBodyValue : OrderedMap()\n\n    return <div className=\"table-container\">\n      { requestBodyDescription &&\n        <Markdown source={requestBodyDescription} />\n      }\n      <table>\n        <tbody>\n          {\n             Map.isMap(bodyProperties) && bodyProperties.entrySeq().map(([key, prop]) => {\n              let commonExt = showCommonExtensions ? getCommonExtensions(prop) : null\n              const required = schemaForMediaType.get(\"required\", List()).includes(key)\n              const type = prop.get(\"type\")\n              const format = prop.get(\"format\")\n              const description = prop.get(\"description\")\n              const currentValue = requestBodyValue.getIn([key, \"value\"])\n              const currentErrors = requestBodyValue.getIn([key, \"errors\"]) || requestBodyErrors\n\n              let initialValue = prop.get(\"default\") || prop.get(\"example\") || \"\"\n\n              if (initialValue === \"\") {\n                if(type === \"object\") {\n                  initialValue = getSampleSchema(prop, false, {\n                    includeWriteOnly: true\n                  })\n                } else if(type === \"array\") {\n                  initialValue = []\n                }\n              }\n\n              if (typeof initialValue !== \"string\" && type === \"object\") {\n                initialValue = stringify(initialValue)\n              }\n\n              const isFile = type === \"string\" && (format === \"binary\" || format === \"base64\")\n\n              return <tr key={key} className=\"parameters\" data-property-name={key}>\n                <td className=\"parameters-col_name\">\n                        <div className={required ? \"parameter__name required\" : \"parameter__name\"}>\n                          { key }\n                          { !required ? null : <span>&nbsp;*</span> }\n                        </div>\n                        <div className=\"parameter__type\">\n                          { type }\n                          { format && <span className=\"prop-format\">(${format})</span>}\n                          {!showCommonExtensions || !commonExt.size ? null : commonExt.entrySeq().map(([key, v]) => <ParameterExt key={`${key}-${v}`} xKey={key} xVal={v} />)}\n                        </div>\n                        <div className=\"parameter__deprecated\">\n                          { prop.get(\"deprecated\") ? \"deprecated\": null }\n                        </div>\n                      </td>\n                      <td className=\"parameters-col_description\">\n                        <Markdown source={ description }></Markdown>\n                        {isExecute ? <div>\n                          <JsonSchemaForm\n                            fn={fn}\n                            dispatchInitialValue={!isFile}\n                            schema={prop}\n                            description={key}\n                            getComponent={getComponent}\n                            value={currentValue === undefined ? initialValue : currentValue}\n                            required = { required }\n                            errors = { currentErrors }\n                            onChange={(value) => {\n                              onChange(value, [key])\n                            }}\n                          />\n                          {required ? null : (\n                            <ParameterIncludeEmpty\n                              onChange={(value) => onChangeIncludeEmpty(key, value)}\n                              isIncluded={requestBodyInclusionSetting.get(key) || false}\n                              isIncludedOptions={setIsIncludedOptions(key)}\n                              isDisabled={Array.isArray(currentValue) ? currentValue.length !== 0 : !isEmptyValue(currentValue)}\n                            />\n                          )}\n                        </div> : null }\n                      </td>\n                      </tr>\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  }\n\n  return <div>\n    { requestBodyDescription &&\n      <Markdown source={requestBodyDescription} />\n    }\n    {\n      examplesForMediaType ? (\n        <ExamplesSelectValueRetainer\n            examples={examplesForMediaType}\n            currentKey={activeExamplesKey}\n            currentUserInputValue={requestBodyValue}\n            onSelect={handleExamplesSelect}\n            updateValue={onChange}\n            defaultToFirstExample={true}\n            getComponent={getComponent}\n          />\n      ) : null\n    }\n    {\n      isExecute ? (\n        <div>\n          <RequestBodyEditor\n            value={requestBodyValue}\n            errors={requestBodyErrors}\n            defaultValue={getDefaultRequestBodyValue(\n              requestBody,\n              contentType,\n              activeExamplesKey,\n            )}\n            onChange={onChange}\n            getComponent={getComponent}\n          />\n        </div>\n      ) : (\n        <ModelExample\n          getComponent={ getComponent }\n          getConfigs={ getConfigs }\n          specSelectors={ specSelectors }\n          expandDepth={1}\n          isExecute={isExecute}\n          schema={mediaTypeValue.get(\"schema\")}\n          specPath={specPath.push(\"content\", contentType)}\n          example={\n            <HighlightCode\n              className=\"body-param__example\"\n              getConfigs={getConfigs}\n              value={stringify(requestBodyValue) || getDefaultRequestBodyValue(\n                requestBody,\n                contentType,\n                activeExamplesKey,\n              )}\n            />\n          }\n          includeWriteOnly={true}\n        />\n      )\n    }\n    {\n       examplesForMediaType ? (\n        <Example\n          example={examplesForMediaType.get(activeExamplesKey)}\n          getComponent={getComponent}\n          getConfigs={getConfigs}\n        />\n      ) : null\n    }\n  </div>\n}\n\nRequestBody.propTypes = {\n  requestBody: ImPropTypes.orderedMap.isRequired,\n  requestBodyValue: ImPropTypes.orderedMap.isRequired,\n  requestBodyInclusionSetting: ImPropTypes.Map.isRequired,\n  requestBodyErrors: ImPropTypes.list.isRequired,\n  getComponent: PropTypes.func.isRequired,\n  getConfigs: PropTypes.func.isRequired,\n  fn: PropTypes.object.isRequired,\n  specSelectors: PropTypes.object.isRequired,\n  contentType: PropTypes.string,\n  isExecute: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onChangeIncludeEmpty: PropTypes.func.isRequired,\n  specPath: PropTypes.array.isRequired,\n  activeExamplesKey: PropTypes.string,\n  updateActiveExamplesKey: PropTypes.func,\n}\n\nexport default RequestBody\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nclass OperationLink extends Component {\n  render() {\n    const { link, name, getComponent } = this.props\n\n    const Markdown = getComponent(\"Markdown\", true)\n\n    let targetOp = link.get(\"operationId\") || link.get(\"operationRef\")\n    let parameters = link.get(\"parameters\") && link.get(\"parameters\").toJS()\n    let description = link.get(\"description\")\n\n    return <div className=\"operation-link\">\n      <div className=\"description\">\n        <b><code>{name}</code></b>\n        { description ? <Markdown source={description}></Markdown> : null }\n      </div>\n      <pre>\n        Operation `{targetOp}`<br /><br />\n        Parameters {padString(0, JSON.stringify(parameters, null, 2)) || \"{}\"}<br />\n      </pre>\n    </div>\n  }\n\n}\n\nfunction padString(n, string) {\n  if(typeof string !== \"string\") { return \"\" }\n  return string\n    .split(\"\\n\")\n    .map((line, i) => i > 0 ? Array(n + 1).join(\" \") + line : line)\n    .join(\"\\n\")\n}\n\nOperationLink.propTypes = {\n  getComponent: PropTypes.func.isRequired,\n  link: ImPropTypes.orderedMap.isRequired,\n  name: PropTypes.String\n}\n\nexport default OperationLink\n","import React from \"react\"\nimport { OrderedMap } from \"immutable\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class Servers extends React.Component {\n\n  static propTypes = {\n    servers: ImPropTypes.list.isRequired,\n    currentServer: PropTypes.string.isRequired,\n    setSelectedServer: PropTypes.func.isRequired,\n    setServerVariableValue: PropTypes.func.isRequired,\n    getServerVariable: PropTypes.func.isRequired,\n    getEffectiveServerValue: PropTypes.func.isRequired\n  }\n\n  componentDidMount() {\n    let { servers, currentServer } = this.props\n\n    if(currentServer) {\n      return\n    }\n\n    //fire 'change' event to set default 'value' of select\n    this.setServer(servers.first().get(\"url\"))\n  }\n\n  componentWillReceiveProps(nextProps) {\n    let {\n      servers,\n      setServerVariableValue,\n      getServerVariable\n    } = nextProps\n\n    if (this.props.currentServer !== nextProps.currentServer || this.props.servers !== nextProps.servers) {\n      // Server has changed, we may need to set default values\n      let currentServerDefinition = servers\n        .find(v => v.get(\"url\") === nextProps.currentServer)\n\n      if(!currentServerDefinition) {\n        return this.setServer(servers.first().get(\"url\"))\n      }\n\n      let currentServerVariableDefs = currentServerDefinition.get(\"variables\") || OrderedMap()\n\n      currentServerVariableDefs.map((val, key) => {\n        let currentValue = getServerVariable(nextProps.currentServer, key)\n        // only set the default value if the user hasn't set one yet\n        if(!currentValue) {\n          setServerVariableValue({\n            server: nextProps.currentServer,\n            key,\n            val: val.get(\"default\") || \"\"\n          })\n        }\n      })\n    }\n  }\n\n  onServerChange =( e ) => {\n    this.setServer( e.target.value )\n\n    // set default variable values\n  }\n\n  onServerVariableValueChange = ( e ) => {\n    let {\n      setServerVariableValue,\n      currentServer\n    } = this.props\n\n    let variableName = e.target.getAttribute(\"data-variable\")\n    let newVariableValue = e.target.value\n\n    if(typeof setServerVariableValue === \"function\") {\n      setServerVariableValue({\n        server: currentServer,\n        key: variableName,\n        val: newVariableValue\n      })\n    }\n  }\n\n  setServer = ( value ) => {\n    let { setSelectedServer } = this.props\n\n    setSelectedServer(value)\n  }\n\n  render() {\n    let { servers,\n      currentServer,\n      getServerVariable,\n      getEffectiveServerValue\n    } = this.props\n\n\n    let currentServerDefinition = servers.find(v => v.get(\"url\") === currentServer) || OrderedMap()\n\n    let currentServerVariableDefs = currentServerDefinition.get(\"variables\") || OrderedMap()\n\n    let shouldShowVariableUI = currentServerVariableDefs.size !== 0\n\n    return (\n      <div className=\"servers\">\n        <label htmlFor=\"servers\">\n          <select onChange={ this.onServerChange } value={currentServer}>\n            { servers.valueSeq().map(\n              ( server ) =>\n              <option\n                value={ server.get(\"url\") }\n                key={ server.get(\"url\") }>\n                { server.get(\"url\") }\n                { server.get(\"description\") && ` - ${server.get(\"description\")}` }\n              </option>\n            ).toArray()}\n          </select>\n        </label>\n        { shouldShowVariableUI ?\n          <div>\n\n            <div className={\"computed-url\"}>\n              Computed URL:\n              <code>\n                {getEffectiveServerValue(currentServer)}\n              </code>\n            </div>\n            <h4>Server variables</h4>\n            <table>\n              <tbody>\n                {\n                  currentServerVariableDefs.map((val, name) => {\n                    return <tr key={name}>\n                      <td>{name}</td>\n                      <td>\n                        { val.get(\"enum\") ?\n                          <select data-variable={name} onChange={this.onServerVariableValueChange}>\n                            {val.get(\"enum\").map(enumValue => {\n                              return <option\n                                selected={enumValue === getServerVariable(currentServer, name)}\n                                key={enumValue}\n                                value={enumValue}>\n                                {enumValue}\n                              </option>\n                            })}\n                          </select> :\n                          <input\n                            type={\"text\"}\n                            value={getServerVariable(currentServer, name) || \"\"}\n                            onChange={this.onServerVariableValueChange}\n                            data-variable={name}\n                            ></input>\n                        }\n                      </td>\n                    </tr>\n                  })\n                }\n              </tbody>\n            </table>\n          </div>: null\n        }\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class ServersContainer extends React.Component {\n\n  static propTypes = {\n    specSelectors: PropTypes.object.isRequired,\n    oas3Selectors: PropTypes.object.isRequired,\n    oas3Actions: PropTypes.object.isRequired,\n    getComponent: PropTypes.func.isRequired,\n  }\n\n  render () {\n    const {specSelectors, oas3Selectors, oas3Actions, getComponent} = this.props\n\n    const servers = specSelectors.servers()\n\n    const Servers = getComponent(\"Servers\")\n\n    return servers && servers.size ? (\n      <div>\n        <span className=\"servers-title\">Servers</span>\n        <Servers\n          servers={servers}\n          currentServer={oas3Selectors.selectedServer()}\n          setSelectedServer={oas3Actions.setSelectedServer}\n          setServerVariableValue={oas3Actions.setServerVariableValue}\n          getServerVariable={oas3Selectors.serverVariableValue}\n          getEffectiveServerValue={oas3Selectors.serverEffectiveValue}\n        />\n      </div> ) : null\n  }\n}","import React, { PureComponent } from \"react\"\nimport PropTypes from \"prop-types\"\nimport cx from \"classnames\"\nimport { stringify } from \"core/utils\"\n\nconst NOOP = Function.prototype\n\nexport default class RequestBodyEditor extends PureComponent {\n\n  static propTypes = {\n    onChange: PropTypes.func,\n    getComponent: PropTypes.func.isRequired,\n    value: PropTypes.string,\n    defaultValue: PropTypes.string,\n    errors: PropTypes.array,\n  };\n\n  static defaultProps = {\n    onChange: NOOP,\n  };\n\n  constructor(props, context) {\n    super(props, context)\n\n    this.state = {\n      value: stringify(props.value) || props.defaultValue\n    }\n\n    // this is the glue that makes sure our initial value gets set as the\n    // current request body value\n    // TODO: achieve this in a selector instead\n    props.onChange(props.value)\n  }\n\n  applyDefaultValue = (nextProps) => {\n    const { onChange, defaultValue } = (nextProps ? nextProps : this.props)\n\n    this.setState({\n      value: defaultValue\n    })\n\n    return onChange(defaultValue)\n  }\n\n  onChange = (value) => {\n    this.props.onChange(stringify(value))\n  }\n\n  onDomChange = e => {\n    const inputValue = e.target.value\n\n    this.setState({\n      value: inputValue,\n    }, () => this.onChange(inputValue))\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if(\n      this.props.value !== nextProps.value &&\n      nextProps.value !== this.state.value\n    ) {\n\n      this.setState({\n        value: stringify(nextProps.value)\n      })\n    }\n\n    \n\n    if(!nextProps.value && nextProps.defaultValue && !!this.state.value) {\n      // if new value is falsy, we have a default, AND the falsy value didn't\n      // come from us originally\n      this.applyDefaultValue(nextProps)\n    }\n  }\n\n  render() {\n    let {\n      getComponent,\n      errors\n    } = this.props\n\n    let {\n      value\n    } = this.state\n\n    let isInvalid = errors.size > 0 ? true : false\n    const TextArea = getComponent(\"TextArea\")\n\n    return (\n      <div className=\"body-param\">\n        <TextArea\n          className={cx(\"body-param__text\", { invalid: isInvalid } )}\n          title={errors.size ? errors.join(\", \") : \"\"}\n          value={value}\n          onChange={ this.onDomChange }\n        />\n      </div>\n    )\n\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport default class HttpAuth extends React.Component {\n  static propTypes = {\n    authorized: PropTypes.object,\n    getComponent: PropTypes.func.isRequired,\n    errSelectors: PropTypes.object.isRequired,\n    schema: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func\n  }\n\n  constructor(props, context) {\n    super(props, context)\n    let { name, schema } = this.props\n    let value = this.getValue()\n\n    this.state = {\n      name: name,\n      schema: schema,\n      value: value\n    }\n  }\n\n  getValue () {\n    let { name, authorized } = this.props\n\n    return authorized && authorized.getIn([name, \"value\"])\n  }\n\n  onChange =(e) => {\n    let { onChange } = this.props\n    let { value, name } = e.target\n\n    let newValue = Object.assign({}, this.state.value)\n\n    if(name) {\n      newValue[name] = value\n    } else {\n      newValue = value\n    }\n\n    this.setState({ value: newValue }, () => onChange(this.state))\n\n  }\n\n  render() {\n    let { schema, getComponent, errSelectors, name } = this.props\n    const Input = getComponent(\"Input\")\n    const Row = getComponent(\"Row\")\n    const Col = getComponent(\"Col\")\n    const AuthError = getComponent(\"authError\")\n    const Markdown = getComponent(\"Markdown\", true)\n    const JumpToPath = getComponent(\"JumpToPath\", true)\n\n    const scheme = (schema.get(\"scheme\") || \"\").toLowerCase()\n    let value = this.getValue()\n    let errors = errSelectors.allErrors().filter( err => err.get(\"authId\") === name)\n\n    if(scheme === \"basic\") {\n      let username = value ? value.get(\"username\") : null\n      return <div>\n        <h4>\n          <code>{ name || schema.get(\"name\") }</code>&nbsp;\n            (http, Basic)\n            <JumpToPath path={[ \"securityDefinitions\", name ]} />\n          </h4>\n        { username && <h6>Authorized</h6> }\n        <Row>\n          <Markdown source={ schema.get(\"description\") } />\n        </Row>\n        <Row>\n          <label>Username:</label>\n          {\n            username ? <code> { username } </code>\n                     : <Col><Input type=\"text\" required=\"required\" name=\"username\" onChange={ this.onChange }/></Col>\n          }\n        </Row>\n        <Row>\n          <label>Password:</label>\n            {\n              username ? <code> ****** </code>\n                       : <Col><Input autoComplete=\"new-password\"\n                                     name=\"password\"\n                                     type=\"password\"\n                                     onChange={ this.onChange }/></Col>\n            }\n        </Row>\n        {\n          errors.valueSeq().map( (error, key) => {\n            return <AuthError error={ error }\n                              key={ key }/>\n          } )\n        }\n      </div>\n    }\n\n    if(scheme === \"bearer\") {\n      return (\n        <div>\n          <h4>\n            <code>{ name || schema.get(\"name\") }</code>&nbsp;\n              (http, Bearer)\n              <JumpToPath path={[ \"securityDefinitions\", name ]} />\n            </h4>\n            { value && <h6>Authorized</h6>}\n            <Row>\n              <Markdown source={ schema.get(\"description\") } />\n            </Row>\n            <Row>\n              <label>Value:</label>\n              {\n                value ? <code> ****** </code>\n              : <Col><Input type=\"text\" onChange={ this.onChange }/></Col>\n          }\n        </Row>\n        {\n          errors.valueSeq().map( (error, key) => {\n            return <AuthError error={ error }\n              key={ key }/>\n          } )\n        }\n      </div>\n    )\n    }\n  return <div>\n    <em><b>{name}</b> HTTP authentication: unsupported scheme {`'${scheme}'`}</em>\n  </div>\n  }\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport ImPropTypes from \"react-immutable-proptypes\"\n\nexport default class OperationServers extends React.Component {\n  static propTypes = {\n    // for self\n    path: PropTypes.string.isRequired,\n    method: PropTypes.string.isRequired,\n    operationServers: ImPropTypes.list,\n    pathServers: ImPropTypes.list,\n    setSelectedServer: PropTypes.func.isRequired,\n    setServerVariableValue: PropTypes.func.isRequired,\n    getSelectedServer: PropTypes.func.isRequired,\n    getServerVariable: PropTypes.func.isRequired,\n    getEffectiveServerValue: PropTypes.func.isRequired,\n\n    // utils\n    getComponent: PropTypes.func.isRequired\n  }\n\n  setSelectedServer = (server) => {\n    const { path, method } = this.props\n    // FIXME: we should be keeping up with this in props/state upstream of us\n    // instead of cheating™ with `forceUpdate`\n    this.forceUpdate()\n    return this.props.setSelectedServer(server, `${path}:${method}`)\n  }\n\n  setServerVariableValue = (obj) => {\n    const { path, method } = this.props\n    // FIXME: we should be keeping up with this in props/state upstream of us\n    // instead of cheating™ with `forceUpdate`\n    this.forceUpdate()\n    return this.props.setServerVariableValue({\n      ...obj,\n      namespace: `${path}:${method}`\n    })\n  }\n\n  getSelectedServer = () => {\n    const { path, method } = this.props\n    return this.props.getSelectedServer(`${path}:${method}`)\n  }\n\n  getServerVariable = (server, key) => {\n    const { path, method } = this.props\n    return this.props.getServerVariable({\n      namespace: `${path}:${method}`,\n      server\n    }, key)\n  }\n\n  getEffectiveServerValue = (server) => {\n    const { path, method } = this.props\n    return this.props.getEffectiveServerValue({\n      server,\n      namespace: `${path}:${method}`\n    })\n  }\n\n  render() {\n    const {\n      // for self\n      operationServers,\n      pathServers,\n\n      // util\n      getComponent\n    } = this.props\n\n    if(!operationServers && !pathServers) {\n      return null\n    }\n\n    const Servers = getComponent(\"Servers\")\n\n    const serversToDisplay = operationServers || pathServers\n    const displaying = operationServers ? \"operation\" : \"path\"\n\n    return <div className=\"opblock-section operation-servers\">\n      <div className=\"opblock-section-header\">\n        <div className=\"tab-header\">\n          <h4 className=\"opblock-title\">Servers</h4>\n        </div>\n      </div>\n      <div className=\"opblock-description-wrapper\">\n        <h4 className=\"message\">\n          These {displaying}-level options override the global server options.\n        </h4>\n        <Servers\n          servers={serversToDisplay}\n          currentServer={this.getSelectedServer()}\n          setSelectedServer={this.setSelectedServer}\n          setServerVariableValue={this.setServerVariableValue}\n          getServerVariable={this.getServerVariable}\n          getEffectiveServerValue={this.getEffectiveServerValue}\n          />\n      </div>\n    </div>\n  }\n}\n","import Callbacks from \"./callbacks\"\nimport RequestBody from \"./request-body\"\nimport OperationLink from \"./operation-link\"\nimport Servers from \"./servers\"\nimport ServersContainer from \"./servers-container\"\nimport RequestBodyEditor from \"./request-body-editor\"\nimport HttpAuth from \"./http-auth\"\nimport OperationServers from \"./operation-servers\"\n\nexport default {\n  Callbacks,\n  HttpAuth,\n  RequestBody,\n  Servers,\n  ServersContainer,\n  RequestBodyEditor,\n  OperationServers,\n  operationLink: OperationLink\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport cx from \"classnames\"\nimport { Remarkable } from \"remarkable\"\nimport { OAS3ComponentWrapFactory } from \"../helpers\"\nimport { sanitizer } from \"core/components/providers/markdown\"\n\nconst parser = new Remarkable(\"commonmark\")\nparser.block.ruler.enable([\"table\"])\nparser.set({ linkTarget: \"_blank\" })\n\nexport const Markdown = ({ source, className = \"\", getConfigs }) => {\n  if(typeof source !== \"string\") {\n    return null\n  }\n\n  if ( source ) {\n    const { useUnsafeMarkdown } = getConfigs()\n    const html = parser.render(source)\n    const sanitized = sanitizer(html, { useUnsafeMarkdown })\n\n    let trimmed\n\n    if(typeof sanitized === \"string\") {\n      trimmed = sanitized.trim()\n    }\n\n    return (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: trimmed\n        }}\n        className={cx(className, \"renderedMarkdown\")}\n      />\n    )\n  }\n  return null\n}\nMarkdown.propTypes = {\n  source: PropTypes.string,\n  className: PropTypes.string,\n  getConfigs: PropTypes.func,\n}\n\nMarkdown.defaultProps = {\n  getConfigs: () => ({ useUnsafeMarkdown: false }),\n}\n\nexport default OAS3ComponentWrapFactory(Markdown)\n","import React from \"react\"\nimport { OAS3ComponentWrapFactory } from \"../helpers\"\n\nexport default OAS3ComponentWrapFactory(({ Ori, ...props }) => {\n  const {\n    schema, getComponent, errSelectors, authorized, onAuthChange, name\n  } = props\n\n  const HttpAuth = getComponent(\"HttpAuth\")\n  const type = schema.get(\"type\")\n\n  if(type === \"http\") {\n    return <HttpAuth key={ name }\n              schema={ schema }\n              name={ name }\n              errSelectors={ errSelectors }\n              authorized={ authorized }\n              getComponent={ getComponent }\n              onChange={ onAuthChange }/>\n  } else {\n    return <Ori {...props} />\n  }\n})\n","import React from \"react\"\nimport { OAS3ComponentWrapFactory } from \"../helpers\"\n\nexport default OAS3ComponentWrapFactory((props) => {\n  const { Ori } = props\n\n  return <span>\n    <Ori {...props} />\n    <small className=\"version-stamp\">\n      <pre className=\"version\">OAS3</pre>\n    </small>\n  </span>\n})\n","import { OAS3ComponentWrapFactory } from \"../helpers\"\nimport OnlineValidatorBadge from \"core/components/online-validator-badge\"\n\n// OAS3 spec is now supported by the online validator.\nexport default OAS3ComponentWrapFactory(OnlineValidatorBadge)\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { OAS3ComponentWrapFactory } from \"../helpers\"\nimport Model from \"core/components/model\"\n\nclass ModelComponent extends Component {\n  static propTypes = {\n    schema: PropTypes.object.isRequired,\n    name: PropTypes.string,\n    getComponent: PropTypes.func.isRequired,\n    getConfigs: PropTypes.func.isRequired,\n    specSelectors: PropTypes.object.isRequired,\n    expandDepth: PropTypes.number,\n    includeReadOnly: PropTypes.bool,\n    includeWriteOnly: PropTypes.bool,\n  }\n\n  render(){\n    let { getConfigs, schema } = this.props\n    let classes = [\"model-box\"]\n    let isDeprecated = schema.get(\"deprecated\") === true\n    let message = null\n\n    if(isDeprecated) {\n      classes.push(\"deprecated\")\n      message = <span className=\"model-deprecated-warning\">Deprecated:</span>\n    }\n\n    return <div className={classes.join(\" \")}>\n      {message}\n      <Model { ...this.props }\n        getConfigs={ getConfigs }\n        depth={ 1 }\n        expandDepth={ this.props.expandDepth || 0 }\n        />\n    </div>\n  }\n}\n\nexport default OAS3ComponentWrapFactory(ModelComponent)\n","import React from \"react\"\nimport { OAS3ComponentWrapFactory } from \"../helpers\"\n\nexport default OAS3ComponentWrapFactory(({ Ori, ...props }) => {\n  const {\n    schema,\n    getComponent,\n    errors,\n    onChange\n  } = props\n\n  const format = schema && schema.get ? schema.get(\"format\") : null\n  const type = schema && schema.get ? schema.get(\"type\") : null\n  const Input = getComponent(\"Input\")\n\n  if(type && type === \"string\" && (format && (format === \"binary\" || format === \"base64\"))) {\n    return <Input type=\"file\"\n                   className={ errors.length ? \"invalid\" : \"\"}\n                   title={ errors.length ? errors : \"\"}\n                   onChange={(e) => {\n                     onChange(e.target.files[0])\n                   }}\n                   disabled={Ori.isDisabled}/>\n  } else {\n    return <Ori {...props} />\n  }\n})\n","import Markdown from \"./markdown\"\nimport AuthItem from \"./auth-item\"\nimport VersionStamp from \"./version-stamp\"\nimport OnlineValidatorBadge from \"./online-validator-badge\"\nimport Model from \"./model\"\nimport JsonSchema_string from \"./json-schema-string\"\n\nexport default {\n  Markdown,\n  AuthItem,\n  JsonSchema_string,\n  VersionStamp,\n  model: Model,\n  onlineValidatorBadge: OnlineValidatorBadge,\n}\n","// Actions conform to FSA (flux-standard-actions)\n// {type: string,payload: Any|Error, meta: obj, error: bool}\n\nexport const UPDATE_SELECTED_SERVER = \"oas3_set_servers\"\nexport const UPDATE_REQUEST_BODY_VALUE = \"oas3_set_request_body_value\"\nexport const UPDATE_REQUEST_BODY_INCLUSION = \"oas3_set_request_body_inclusion\"\nexport const UPDATE_ACTIVE_EXAMPLES_MEMBER = \"oas3_set_active_examples_member\"\nexport const UPDATE_REQUEST_CONTENT_TYPE = \"oas3_set_request_content_type\"\nexport const UPDATE_RESPONSE_CONTENT_TYPE = \"oas3_set_response_content_type\"\nexport const UPDATE_SERVER_VARIABLE_VALUE = \"oas3_set_server_variable_value\"\nexport const SET_REQUEST_BODY_VALIDATE_ERROR = \"oas3_set_request_body_validate_error\"\nexport const CLEAR_REQUEST_BODY_VALIDATE_ERROR = \"oas3_clear_request_body_validate_error\"\n\nexport function setSelectedServer (selectedServerUrl, namespace) {\n  return {\n    type: UPDATE_SELECTED_SERVER,\n    payload: {selectedServerUrl, namespace}\n  }\n}\n\nexport function setRequestBodyValue ({ value, pathMethod }) {\n  return {\n    type: UPDATE_REQUEST_BODY_VALUE,\n    payload: { value, pathMethod }\n  }\n}\n\nexport function setRequestBodyInclusion ({ value, pathMethod, name }) {\n  return {\n    type: UPDATE_REQUEST_BODY_INCLUSION,\n    payload: { value, pathMethod, name }\n  }\n}\n\nexport function setActiveExamplesMember ({ name, pathMethod, contextType, contextName }) {\n  return {\n    type: UPDATE_ACTIVE_EXAMPLES_MEMBER,\n    payload: { name, pathMethod, contextType, contextName }\n  }\n}\n\nexport function setRequestContentType ({ value, pathMethod }) {\n  return {\n    type: UPDATE_REQUEST_CONTENT_TYPE,\n    payload: { value, pathMethod }\n  }\n}\n\nexport function setResponseContentType ({ value, path, method }) {\n  return {\n    type: UPDATE_RESPONSE_CONTENT_TYPE,\n    payload: { value, path, method }\n  }\n}\n\nexport function setServerVariableValue ({ server, namespace, key, val }) {\n  return {\n    type: UPDATE_SERVER_VARIABLE_VALUE,\n    payload: { server, namespace, key, val }\n  }\n}\n\nexport const setRequestBodyValidateError = ({ path, method, validationErrors }) => {\n  return {\n    type: SET_REQUEST_BODY_VALIDATE_ERROR,\n    payload: { path, method, validationErrors }\n  }\n}\n\nexport const clearRequestBodyValidateError = ({ path, method }) => {\n  return {\n    type: CLEAR_REQUEST_BODY_VALIDATE_ERROR,\n    payload: { path, method }\n  }\n}\n\nexport const initRequestBodyValidateError = ({ pathMethod } ) => {\n  return {\n    type: CLEAR_REQUEST_BODY_VALIDATE_ERROR,\n    payload: { path: pathMethod[0], method: pathMethod[1] }\n  }\n}\n","import { OrderedMap, Map } from \"immutable\"\nimport { isOAS3 as isOAS3Helper } from \"./helpers\"\n\n// Helpers\n\nfunction onlyOAS3(selector) {\n  return (...args) => (system) => {\n    const spec = system.getSystem().specSelectors.specJson()\n    if(isOAS3Helper(spec)) {\n      return selector(...args)\n    } else {\n      return null\n    }\n  }\n}\n\nfunction validateRequestBodyIsRequired(selector) {\n  return (...args) => (system) => {\n    const specJson = system.getSystem().specSelectors.specJson()\n    const argsList = [...args]\n    // expect argsList[0] = state\n    let pathMethod = argsList[1] || []\n    let isOas3RequestBodyRequired = specJson.getIn([\"paths\", ...pathMethod, \"requestBody\", \"required\"])\n\n    if (isOas3RequestBodyRequired) {\n      return selector(...args)\n    } else {\n      // validation pass b/c not required\n      return true\n    }\n  }\n}\n\nconst validateRequestBodyValueExists = (state, pathMethod) => {\n  pathMethod = pathMethod || []\n  let oas3RequestBodyValue = state.getIn([\"requestData\", ...pathMethod, \"bodyValue\"])\n  // context: bodyValue can be a String, or a Map\n  if (!oas3RequestBodyValue) {\n    return false\n  }\n  // validation pass if String is not empty, or if Map exists\n  return true\n}\n\n\nexport const selectedServer = onlyOAS3((state, namespace) => {\n    const path = namespace ? [namespace, \"selectedServer\"] : [\"selectedServer\"]\n    return state.getIn(path) || \"\"\n  }\n)\n\nexport const requestBodyValue = onlyOAS3((state, path, method) => {\n    return state.getIn([\"requestData\", path, method, \"bodyValue\"]) || null\n  }\n)\n\nexport const requestBodyInclusionSetting = onlyOAS3((state, path, method) => {\n    return state.getIn([\"requestData\", path, method, \"bodyInclusion\"]) || Map()\n  }\n)\n\nexport const requestBodyErrors = onlyOAS3((state, path, method) => {\n    return state.getIn([\"requestData\", path, method, \"errors\"]) || null\n  }\n)\n\nexport const activeExamplesMember = onlyOAS3((state, path, method, type, name) => {\n    return state.getIn([\"examples\", path, method, type, name, \"activeExample\"]) || null\n  }\n)\n\nexport const requestContentType = onlyOAS3((state, path, method) => {\n    return state.getIn([\"requestData\", path, method, \"requestContentType\"]) || null\n  }\n)\n\nexport const responseContentType = onlyOAS3((state, path, method) => {\n    return state.getIn([\"requestData\", path, method, \"responseContentType\"]) || null\n  }\n)\n\nexport const serverVariableValue = onlyOAS3((state, locationData, key) => {\n    let path\n\n    // locationData may take one of two forms, for backwards compatibility\n    // Object: ({server, namespace?}) or String:(server)\n    if(typeof locationData !== \"string\") {\n      const { server, namespace } = locationData\n      if(namespace) {\n        path = [namespace, \"serverVariableValues\", server, key]\n      } else {\n        path = [\"serverVariableValues\", server, key]\n      }\n    } else {\n      const server = locationData\n      path = [\"serverVariableValues\", server, key]\n    }\n\n    return state.getIn(path) || null\n  }\n)\n\nexport const serverVariables = onlyOAS3((state, locationData) => {\n    let path\n\n    // locationData may take one of two forms, for backwards compatibility\n    // Object: ({server, namespace?}) or String:(server)\n    if(typeof locationData !== \"string\") {\n      const { server, namespace } = locationData\n      if(namespace) {\n        path = [namespace, \"serverVariableValues\", server]\n      } else {\n        path = [\"serverVariableValues\", server]\n      }\n    } else {\n      const server = locationData\n      path = [\"serverVariableValues\", server]\n    }\n\n    return state.getIn(path) || OrderedMap()\n  }\n)\n\nexport const serverEffectiveValue = onlyOAS3((state, locationData) => {\n    var varValues, serverValue\n\n    // locationData may take one of two forms, for backwards compatibility\n    // Object: ({server, namespace?}) or String:(server)\n    if(typeof locationData !== \"string\") {\n      const { server, namespace } = locationData\n      serverValue = server\n      if(namespace) {\n        varValues = state.getIn([namespace, \"serverVariableValues\", serverValue])\n      } else {\n        varValues = state.getIn([\"serverVariableValues\", serverValue])\n      }\n    } else {\n      serverValue = locationData\n      varValues = state.getIn([\"serverVariableValues\", serverValue])\n    }\n\n    varValues = varValues || OrderedMap()\n    let str = serverValue\n\n    varValues.map((val, key) => {\n      str = str.replace(new RegExp(`{${key}}`, \"g\"), val)\n    })\n\n    return str\n  }\n)\n\nexport const validateBeforeExecute = validateRequestBodyIsRequired(\n  (state, pathMethod) => validateRequestBodyValueExists(state, pathMethod)\n)\n\nexport const validateShallowRequired = ( state, {oas3RequiredRequestBodyContentType, oas3RequestBodyValue} ) => {\n  let missingRequiredKeys = []\n  // context: json => String; urlencoded => Map\n  if (!Map.isMap(oas3RequestBodyValue)) {\n    return missingRequiredKeys\n  }\n  let requiredKeys = []\n  // We intentionally cycle through list of contentTypes for defined requiredKeys\n  // instead of assuming first contentType will accurately list all expected requiredKeys\n  // Alternatively, we could try retrieving the contentType first, and match exactly. This would be a more accurate representation of definition\n  Object.keys(oas3RequiredRequestBodyContentType.requestContentType).forEach((contentType) => {\n    let contentTypeVal = oas3RequiredRequestBodyContentType.requestContentType[contentType]\n    contentTypeVal.forEach((requiredKey) => {\n      if (requiredKeys.indexOf(requiredKey) < 0 ) {\n        requiredKeys.push(requiredKey)\n      }\n    })\n  })\n  requiredKeys.forEach((key) => {\n    let requiredKeyValue = oas3RequestBodyValue.getIn([key, \"value\"])\n    if (!requiredKeyValue) {\n      missingRequiredKeys.push(key)\n    }\n  })\n  return missingRequiredKeys\n}\n","import { fromJS, Map } from \"immutable\"\n\nimport {\n  UPDATE_SELECTED_SERVER,\n  UPDATE_REQUEST_BODY_VALUE,\n  UPDATE_REQUEST_BODY_INCLUSION,\n  UPDATE_ACTIVE_EXAMPLES_MEMBER,\n  UPDATE_REQUEST_CONTENT_TYPE,\n  UPDATE_SERVER_VARIABLE_VALUE,\n  UPDATE_RESPONSE_CONTENT_TYPE,\n  SET_REQUEST_BODY_VALIDATE_ERROR,\n  CLEAR_REQUEST_BODY_VALIDATE_ERROR,\n} from \"./actions\"\n\nexport default {\n  [UPDATE_SELECTED_SERVER]: (state, { payload: { selectedServerUrl, namespace } } ) =>{\n    const path = namespace ? [ namespace, \"selectedServer\"] : [ \"selectedServer\"]\n    return state.setIn( path, selectedServerUrl)\n  },\n  [UPDATE_REQUEST_BODY_VALUE]: (state, { payload: { value, pathMethod } } ) =>{\n    let [path, method] = pathMethod\n    if (!Map.isMap(value)) {\n      // context: application/json is always a String (instead of Map)\n      return state.setIn( [ \"requestData\", path, method, \"bodyValue\" ], value)\n    }\n    let currentVal = state.getIn([\"requestData\", path, method, \"bodyValue\"]) || Map()\n    if (!Map.isMap(currentVal)) {\n      // context: user switch from application/json to application/x-www-form-urlencoded\n      currentVal = Map()\n    }\n    let newVal\n    const [...valueKeys] = value.keys()\n    valueKeys.forEach((valueKey) => {\n      let valueKeyVal = value.getIn([valueKey])\n      if (!currentVal.has(valueKey)) {\n        newVal = currentVal.setIn([valueKey, \"value\"], valueKeyVal)\n      } else if (!Map.isMap(valueKeyVal)) {\n        // context: user input will be received as String\n        newVal = currentVal.setIn([valueKey, \"value\"], valueKeyVal)\n      }\n    })\n    return state.setIn([\"requestData\", path, method, \"bodyValue\"], newVal)\n  },\n  [UPDATE_REQUEST_BODY_INCLUSION]: (state, { payload: { value, pathMethod, name } } ) =>{\n    let [path, method] = pathMethod\n    return state.setIn( [ \"requestData\", path, method, \"bodyInclusion\", name ], value)\n  },\n  [UPDATE_ACTIVE_EXAMPLES_MEMBER]: (state, { payload: { name, pathMethod, contextType, contextName } } ) =>{\n    let [path, method] = pathMethod\n    return state.setIn( [ \"examples\", path, method, contextType, contextName, \"activeExample\" ], name)\n  },\n  [UPDATE_REQUEST_CONTENT_TYPE]: (state, { payload: { value, pathMethod } } ) =>{\n    let [path, method] = pathMethod\n    return state.setIn( [ \"requestData\", path, method, \"requestContentType\" ], value)\n  },\n  [UPDATE_RESPONSE_CONTENT_TYPE]: (state, { payload: { value, path, method } } ) =>{\n    return state.setIn( [ \"requestData\", path, method, \"responseContentType\" ], value)\n  },\n  [UPDATE_SERVER_VARIABLE_VALUE]: (state, { payload: { server, namespace, key, val } } ) =>{\n    const path = namespace ? [ namespace, \"serverVariableValues\", server, key ] : [ \"serverVariableValues\", server, key ]\n    return state.setIn(path, val)\n  },\n  [SET_REQUEST_BODY_VALIDATE_ERROR]: (state, { payload: { path, method, validationErrors } } ) => {\n    let errors = []\n    errors.push(\"Required field is not provided\")\n    if (validationErrors.missingBodyValue) {\n      // context: is application/json or application/xml, where typeof (missing) bodyValue = String\n      return state.setIn([\"requestData\", path, method, \"errors\"], fromJS(errors))\n    }\n    if (validationErrors.missingRequiredKeys && validationErrors.missingRequiredKeys.length > 0) {\n      // context: is application/x-www-form-urlencoded, with list of missing keys\n      const { missingRequiredKeys } = validationErrors\n      return state.updateIn([\"requestData\", path, method, \"bodyValue\"], fromJS({}), missingKeyValues => {\n        return missingRequiredKeys.reduce((bodyValue, currentMissingKey) => {\n          return bodyValue.setIn([currentMissingKey, \"errors\"], fromJS(errors))\n        }, missingKeyValues)\n      })\n    }\n    console.warn(\"unexpected result: SET_REQUEST_BODY_VALIDATE_ERROR\")\n    return state\n  },\n  [CLEAR_REQUEST_BODY_VALIDATE_ERROR]: (state, { payload: { path, method } }) => {\n    const requestBodyValue = state.getIn([\"requestData\", path, method, \"bodyValue\"])\n    if (!Map.isMap(requestBodyValue)) {\n      return state.setIn([\"requestData\", path, method, \"errors\"], fromJS([]))\n    }\n    const [...valueKeys] = requestBodyValue.keys()\n    if (!valueKeys) {\n      return state\n    }\n    return state.updateIn([\"requestData\", path, method, \"bodyValue\"], fromJS({}), bodyValues => {\n      return valueKeys.reduce((bodyValue, curr) => {\n        return bodyValue.setIn([curr, \"errors\"], fromJS([]))\n      }, bodyValues)\n    })\n  },\n}\n","// import reducers from \"./reducers\"\n// import * as actions from \"./actions\"\nimport * as specWrapSelectors from \"./spec-extensions/wrap-selectors\"\nimport * as authWrapSelectors from \"./auth-extensions/wrap-selectors\"\nimport * as specSelectors from \"./spec-extensions/selectors\"\nimport components from \"./components\"\nimport wrapComponents from \"./wrap-components\"\nimport * as oas3Actions from \"./actions\"\nimport * as oas3Selectors from \"./selectors\"\nimport oas3Reducers from \"./reducers\"\n\nexport default function() {\n  return {\n    components,\n    wrapComponents,\n    statePlugins: {\n      spec: {\n        wrapSelectors: specWrapSelectors,\n        selectors: specSelectors\n      },\n      auth: {\n        wrapSelectors: authWrapSelectors\n      },\n      oas3: {\n        actions: oas3Actions,\n        reducers: oas3Reducers,\n        selectors: oas3Selectors,\n      }\n    }\n  }\n}\n","import BasePreset from \"./base\"\nimport OAS3Plugin from \"../plugins/oas3\"\n\n// Just the base, for now.\n\nexport default function PresetApis() {\n\n  return [\n    BasePreset,\n    OAS3Plugin\n  ]\n}\n","import deepExtend from \"deep-extend\"\n\nimport System from \"./system\"\nimport ApisPreset from \"./presets/apis\"\nimport AllPlugins from \"./plugins/all\"\nimport { parseSearch } from \"./utils\"\nimport win from \"./window\"\n\nif (process.env.NODE_ENV !== \"production\" && typeof window !== \"undefined\") {\n  win.Perf = require(\"react-dom/lib/ReactPerf\")\n}\n\n// eslint-disable-next-line no-undef\nconst { GIT_DIRTY, GIT_COMMIT, PACKAGE_VERSION, HOSTNAME, BUILD_TIME } = buildInfo\n\nfunction SwaggerUI(opts) {\n\n  win.versions = win.versions || {}\n  win.versions.swaggerUi = {\n    version: PACKAGE_VERSION,\n    gitRevision: GIT_COMMIT,\n    gitDirty: GIT_DIRTY,\n    buildTimestamp: BUILD_TIME,\n    machine: HOSTNAME\n  }\n\n  const defaults = {\n    // Some general settings, that we floated to the top\n    dom_id: null, // eslint-disable-line camelcase\n    domNode: null,\n    spec: {},\n    url: \"\",\n    urls: null,\n    layout: \"BaseLayout\",\n    docExpansion: \"list\",\n    maxDisplayedTags: null,\n    filter: null,\n    validatorUrl: \"https://validator.swagger.io/validator\",\n    oauth2RedirectUrl: `${window.location.protocol}//${window.location.host}/oauth2-redirect.html`,\n    persistAuthorization: false,\n    configs: {},\n    custom: {},\n    displayOperationId: false,\n    displayRequestDuration: false,\n    deepLinking: false,\n    requestInterceptor: (a => a),\n    responseInterceptor: (a => a),\n    showMutatedRequest: true,\n    defaultModelRendering: \"example\",\n    defaultModelExpandDepth: 1,\n    defaultModelsExpandDepth: 1,\n    showExtensions: false,\n    showCommonExtensions: false,\n    withCredentials: undefined,\n    supportedSubmitMethods: [\n      \"get\",\n      \"put\",\n      \"post\",\n      \"delete\",\n      \"options\",\n      \"head\",\n      \"patch\",\n      \"trace\"\n    ],\n\n    // Initial set of plugins ( TODO rename this, or refactor - we don't need presets _and_ plugins. Its just there for performance.\n    // Instead, we can compile the first plugin ( it can be a collection of plugins ), then batch the rest.\n    presets: [\n      ApisPreset\n    ],\n\n    // Plugins; ( loaded after presets )\n    plugins: [\n    ],\n\n    // Initial state\n    initialState: { },\n\n    // Inline Plugin\n    fn: { },\n    components: { },\n\n    syntaxHighlight: {\n      activated: true,\n      theme: \"agate\"\n    }\n  }\n\n  let queryConfig = parseSearch()\n\n  const domNode = opts.domNode\n  delete opts.domNode\n\n  const constructorConfig = deepExtend({}, defaults, opts, queryConfig)\n\n  const storeConfigs = {\n    system: {\n      configs: constructorConfig.configs\n    },\n    plugins: constructorConfig.presets,\n    state: deepExtend({\n      layout: {\n        layout: constructorConfig.layout,\n        filter: constructorConfig.filter\n      },\n      spec: {\n        spec: \"\",\n        url: constructorConfig.url\n      }\n    }, constructorConfig.initialState)\n  }\n\n  if(constructorConfig.initialState) {\n    // if the user sets a key as `undefined`, that signals to us that we\n    // should delete the key entirely.\n    // known usage: Swagger-Editor validate plugin tests\n    for (var key in constructorConfig.initialState) {\n      if(\n        constructorConfig.initialState.hasOwnProperty(key)\n        && constructorConfig.initialState[key] === undefined\n      ) {\n        delete storeConfigs.state[key]\n      }\n    }\n  }\n\n  let inlinePlugin = ()=> {\n    return {\n      fn: constructorConfig.fn,\n      components: constructorConfig.components,\n      state: constructorConfig.state,\n    }\n  }\n\n  var store = new System(storeConfigs)\n  store.register([constructorConfig.plugins, inlinePlugin])\n\n  var system = store.getSystem()\n\n  const downloadSpec = (fetchedConfig) => {\n    let localConfig = system.specSelectors.getLocalConfig ? system.specSelectors.getLocalConfig() : {}\n    let mergedConfig = deepExtend({}, localConfig, constructorConfig, fetchedConfig || {}, queryConfig)\n\n    // deep extend mangles domNode, we need to set it manually\n    if(domNode) {\n      mergedConfig.domNode = domNode\n    }\n\n    store.setConfigs(mergedConfig)\n    system.configsActions.loaded()\n\n    if (fetchedConfig !== null) {\n      if (!queryConfig.url && typeof mergedConfig.spec === \"object\" && Object.keys(mergedConfig.spec).length) {\n        system.specActions.updateUrl(\"\")\n        system.specActions.updateLoadingStatus(\"success\")\n        system.specActions.updateSpec(JSON.stringify(mergedConfig.spec))\n      } else if (system.specActions.download && mergedConfig.url && !mergedConfig.urls) {\n        system.specActions.updateUrl(mergedConfig.url)\n        system.specActions.download(mergedConfig.url)\n      }\n    }\n\n    if(mergedConfig.domNode) {\n      system.render(mergedConfig.domNode, \"App\")\n    } else if(mergedConfig.dom_id) {\n      let domNode = document.querySelector(mergedConfig.dom_id)\n      system.render(domNode, \"App\")\n    } else if(mergedConfig.dom_id === null || mergedConfig.domNode === null) {\n      // do nothing\n      // this is useful for testing that does not need to do any rendering\n    } else {\n      console.error(\"Skipped rendering: no `dom_id` or `domNode` was specified\")\n    }\n\n    return system\n  }\n\n  const configUrl = queryConfig.config || constructorConfig.configUrl\n\n  if (!configUrl || !system.specActions || !system.specActions.getConfigByUrl || system.specActions.getConfigByUrl && !system.specActions.getConfigByUrl({\n    url: configUrl,\n    loadRemoteConfig: true,\n    requestInterceptor: constructorConfig.requestInterceptor,\n    responseInterceptor: constructorConfig.responseInterceptor,\n  }, downloadSpec)) {\n    return downloadSpec()\n  } else {\n    system.specActions.getConfigByUrl(configUrl, downloadSpec)\n  }\n\n  return system\n}\n\nconst presets = {\n  apis: ApisPreset,\n}\n\n// Add presets\nSwaggerUI.presets = presets\n\n// All Plugins\nSwaggerUI.plugins = AllPlugins\n\nexport {\n  SwaggerUI as default,\n  presets as presets,\n  AllPlugins as plugins\n}"],"names":["CLEAR","err","type","payload","serializeError","errors","errArray","filter","win","location","history","open","close","File","window","prop","e","console","error","makeWindow","primitives","Date","toISOString","substring","schema","primitive","objectify","format","fn","isFunc","sampleFromSchema","config","example","properties","additionalProperties","items","includeReadOnly","includeWriteOnly","undefined","deeplyStripKey","val","_indexOfInstanceProperty","props","obj","name","deprecated","readOnly","writeOnly","additionalProp1","additionalProps","additionalPropVal","i","_Array$isArray","anyOf","_mapInstanceProperty","oneOf","normalizeArray","sampleXmlFromSchema","displayName","value","objectifySchema","deepAssign","defaultValue","res","_attr","xml","prefix","namespace","enumValue","namespacePrefix","wrapped","v","push","_res","propName","hasOwnProperty","attribute","enumAttrVal","attrExample","attrDefault","t","_concatInstanceProperty","additionalProp","createXMLExample","json","XML","declaration","indent","memoizedCreateXMLExample","memoizee","memoizedSampleFromSchema","thing","swagger2SchemaKeys","Im","Set","of","getParameterSchema","parameter","isOAS3","Map","isMap","parameterContentMediaType","get","_filterInstanceProperty","k","_includesInstanceProperty","parameterContentMediaTypes","keySeq","first","getIn","isImmutable","maybe","Iterable","isIterable","isObject","toJS","fromJSOrdered","js","Seq","toList","isFunction","objWithHashedKeys","fdObj","newObj","hashIdx","trackKeys","_entriesInstanceProperty","pair","containsMultiple","length","createObjWithHashedKeys","OrderedMap","arr","isFn","_typeof","isArray","memoize","_memoize","objMap","_reduceInstanceProperty","key","objReduce","_Object$assign","systemThunkMiddleware","getSystem","dispatch","getState","next","action","pascalCaseFilename","filename","str","replace","upperFirst","camelCase","validateMaximum","max","validateMinimum","min","validateNumber","test","validateInteger","validateFile","validateBoolean","validateString","validateDateTime","isNaN","parse","validateGuid","toString","toLowerCase","validateMaxLength","validateMinLength","validatePattern","rxPattern","RegExp","getXmlSampleSchema","$$ref","match","shouldStringifyTypesConfig","when","shouldStringifyTypes","defaultStringifyTypes","getStringifiedSampleForSchema","contentType","resType","typesToStringify","types","nextConfig","some","x","_JSON$stringify","getSampleSchema","btoa","Buffer","from","sorters","operationsSorter","alpha","a","b","localeCompare","method","tagsSorter","buildFormData","data","formArr","encodeURIComponent","join","shallowEqualKeys","keys","find","eq","sanitizeUrl","url","braintreeSanitizeUrl","requiresValidationURL","uri","createDeepLinkPath","String","_trimInstanceProperty","escapeDeepLinkPath","cssEscape","getExtensions","defObj","getCommonExtensions","input","keyToStrip","predicate","stringify","paramToIdentifier","param","returnAll","allowHashes","Error","paramName","paramIn","generatedIdentifiers","hashCode","paramToValue","paramValues","allIdentifiers","id","b64toB64UrlEncoded","isEmptyValue","isEmpty","idFn","Store","opts","deepExtend","this","state","plugins","system","configs","components","rootInjects","statePlugins","boundSystem","toolbox","_bindInstanceProperty","_getSystem","store","configureStore","fromJS","buildSystem","register","rebuild","pluginSystem","combinePlugins","systemExtend","needAnotherRebuild","callAfterLoad","call","buildReducer","getStore","getRootInjects","getWrappedAndBoundActions","getWrappedAndBoundSelectors","getStateThunks","getFn","getConfigs","rebuildReducer","getComponents","_getConfigs","React","replaceReducer","reducerSystem","reducers","reducerObj","redFn","wrapWithTryCatch","makeReducer","_Object$keys","combineReducers","allReducers","upName","toUpperCase","_sliceInstanceProperty","getType","actions","actionName","getBoundActions","actionGroupName","wrappers","_this","wrapActions","wrap","acc","newAction","TypeError","Function","prototype","getBoundSelectors","selectors","selectorGroupName","stateName","_this2","wrapSelectors","selector","selectorName","wrappedSelector","args","component","ori","wrapper","_this3","getSelectors","getNestedState","apply","getActions","process","creator","actionCreator","bindActionCreators","_this4","extras","_this5","assignDeep","plugin","hasLoaded","calledSomething","afterLoad","_this6","dest","src","wrapComponents","wrapperFn","namespaceObj","logErrors","rootReducer","initialState","middlwares","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","createStoreWithMiddleware","seekStr","split","set","p","c","makeNewMessage","jsSpec","errorTransformers","NotOfType","ParameterOneOf","transformErrors","inputs","transformedErrors","reduce","result","transformer","newlyTransformedErrors","transform","DEFAULT_ERROR_STRUCTURE","line","level","message","update","List","sortBy","newErrors","_everyInstanceProperty","errValue","filterValue","merge","allErrors","createSelector","lastError","all","last","makeReducers","UPDATE_MODE","SHOW","layout","shown","mode","isShown","thingToShow","setIn","def","showSummary","OPERATION_METHODS","spec","specStr","specSource","specJson","specResolved","mergerFn","oldVal","newVal","mergeWith","specJsonWithResolvedSubtrees","info","returnSelfOrNewMap","externalDocs","version","semver","exec","paths","operations","size","list","path","pathName","operation","consumes","produces","security","securityDefinitions","definitions","basePath","host","schemes","operationsWithRootInherited","ops","op","withMutations","tags","isList","tag","tagDetails","currentTags","_findInstanceProperty","operationsWithTags","taggedMap","count","ar","responses","requests","mutatedRequests","parameterWithMetaByIdentity","pathMethod","opParams","metaParams","mergedParams","currentParam","inNameKeyedMeta","hashKeyedMeta","curr","parameterInclusionSettingFor","paramKey","operationWithMeta","meta","hasHost","parameterValues","isXml","hash","parametersIncludeType","parameters","typeValue","_someInstanceProperty","currentProducesFor","currentProducesValue","firstProducesArrayItem","operationScheme","matchResult","urlScheme","resolvedRes","unresolvedRes","tagA","tagB","sortFn","_sortInstanceProperty","inType","params","inValue","producesValue","requestContentType","responseContentType","operationProduces","pathItemProduces","globalProduces","operationConsumes","pathItemConsumes","globalConsumes","isValid","requiredObj","requestBody","entrySeq","hasWarnedAboutResolveSpecDeprecation","requestBatch","debResolveSubtrees","debounce","errActions","errSelectors","resolveSubtree","AST","specSelectors","specActions","getLineNumberForPath","modelPropertyMacro","parameterMacro","requestInterceptor","responseInterceptor","prev","resultMap","specWithCurrentSubtrees","baseDoc","clearBy","preparedErrors","fullPath","source","enumerable","newThrownErrBatch","_Promise","resolve","specResolvedSubtree","batchResult","updateResolvedSubtree","cleanSpec","isString","clear","YAML","safeLoad","newSpecErr","reason","mark","updateJsonSpec","fetch","warn","then","updateResolved","includeEmptyValue","req","oas3Selectors","paramValue","contextUrl","parseUrl","operationId","opId","server","selectedServer","namespaceVariables","serverVariables","globalVariables","requestBodyValue","requestBodyInclusionSetting","o","JSON","isJSONObject","parsedRequest","buildRequest","setRequest","requestInterceptorWrapper","r","mutatedRequest","parsedMutatedRequest","setMutatedRequest","startTime","_Date$now","execute","duration","setResponse","scheme","contentTypeValues","executeRequest","valueKey","updateIn","paramMeta","isEmptyValueIncluded","bypassRequiredCheck","paramRequired","paramDetails","required","maximum","minimum","maxLength","minLength","pattern","stringCheck","arrayCheck","arrayListCheck","allChecks","passedAnyCheck","itemType","item","index","validateParam","statusCode","response","headers","newState","Blob","operationPath","metaPath","deleteIn","parseToJson","invalidateResolvedSubtreeCache","pathItems","pathItemKeys","$ref","requestResolvedSubtree","logRequest","makeContainer","reduxStore","wrappedWithSystem","ComponentToWrap","Component","context","SystemWrapper","connected","connect","ownProps","propsForContainerComponent","mapStateToProps","Provider","RootWrapper","handleProps","mapping","oldProps","makeMappedContainer","memGetComponent","componentName","nextProps","cleanProps","omit","Comp","render","getComponent","domNode","App","ReactDOM","Fallback","className","wrapRender","target","isReactComponent","isStateless","createClass","container","failSilently","log","levels","getLevel","logLevel","logLevelInt","debug","withCredentials","makeHttp","Http","preFetch","postFetch","freshConfigs","rest","serializeRes","configsWrapActions","authActions","authorize","persistAuthorizationIfNeeded","logout","auth","token","flow","swaggerUIRedirectOauth2","newAuthErr","authId","authorizeOauth2WithPersistOption","authorizeOauth2","username","password","passwordType","clientId","clientSecret","form","grant_type","scope","scopes","client_id","client_secret","setClientIdAndSecret","Authorization","authorizeRequest","body","query","redirectUrl","codeVerifier","code","redirect_uri","code_verifier","parsedUrl","authSelectors","additionalQueryStringParams","serverEffectiveValue","fetchUrl","_headers","parseError","ok","statusText","errData","jsonResponse","error_description","jsonError","persistAuthorization","authorized","localStorage","setItem","securities","map","header","parsedAuth","shownDefinitions","definitionsToAuthorize","valueSeq","names","allowedScopes","definition","contains","allDefinitions","sec","oriAction","specSecurity","initOAuth","configureAuth","preauthorizeApiKey","preauthorizeBasic","specWrapActionReplacements","definitionBase","downloadUrlPlugin","download","status","updateLoadingStatus","newThrownErr","specUrl","document","createElement","href","protocol","origin","checkPossibleFailReasons","updateSpec","text","updateUrl","loadSpec","credentials","enums","loadingStatus","parseYamlConfig","yaml","configName","configValue","getItem","restoreAuthorization","cb","downloadConfig","oriVal","getLocalConfig","yamlConfig","configsPlugin","setHash","pushState","show","layoutSelectors","deepLinking","tokenArray","urlHashArray","urlHashArrayFromIsShownKey","assetName","scrollTo","parseDeepLinkHash","rawHash","layoutActions","hashArray","isShownKey","isShownKeyFromUrlHashArray","tagId","maybeOperationId","tagIsShownKey","readyToScroll","ref","scrollToKey","getScrollToKey","is","scrollToElement","clearScrollTo","getScrollParent","zenscroll","createScroller","to","element","includeHidden","LAST_RESORT","documentElement","style","getComputedStyle","excludeStaticParent","position","overflowRegex","parent","parentElement","overflow","overflowY","overflowX","Wrapper","Ori","toObject","onLoad","loaded","decodeURIComponent","OperationWrapper","OperationTag","OperationTagWrapper","taggedOps","phrase","tagObj","opsFilter","engaged","onComplete","OperationContainer","PureComponent","resolvedSubtree","getResolvedSubtree","setState","tryItOutEnabled","executeInProgress","specPath","nextState","docExpansion","displayOperationId","displayRequestDuration","supportedSubmitMethods","isDeepLinkingEnabled","allowTryItOut","allowTryItOutFor","isAuthorized","jumpToKey","responseFor","request","requestFor","unresolvedOp","oas3Actions","Operation","operationProps","summary","originalOperationId","toggleShown","onTryoutClick","onCancelClick","onExecute","layoutName","current","Layout","getLayout","defaultProps","AuthorizationPopup","showDefinitions","Auths","onClick","width","height","xlinkHref","AuthorizeBtn","showPopup","AuthorizeBtnContainer","authorizableDefinitions","AuthorizeOperationBtn","stopPropagation","preventDefault","authorizeWithPersistOption","auths","toArray","logoutWithPersistOption","AuthItem","Oauth2","Button","authorizedAuth","nonOauthDefinitions","oauthDefinitions","onSubmit","submitAuth","onAuthChange","logoutClick","authEl","ApiKeyAuth","BasicAuth","onChange","AuthError","getValue","Input","Row","Col","Markdown","JumpToPath","newValue","autoComplete","Example","showValue","HighlightCode","has","ExamplesSelect","isSyntheticChange","onSelect","selectedOptions","getAttribute","_onSelect","examples","currentExampleKey","currentExamplePerProps","firstExamplesKey","firstExample","_Map","firstExampleKey","keyOf","isValueModified","isModifiedValueAvailable","showLabels","_onDomSelect","exampleName","stringifyUnlessList","ExamplesSelectValueRetainer","currentNamespace","_setStateForNamespace","newStateForNamespace","mergeDeep","currentUserInputValue","_getCurrentExampleValue","exampleKey","currentKey","_getValueForExample","updateValue","_getStateForCurrentNamespace","lastUserEditedValue","valueFromExample","_setStateForCurrentNamespace","isModifiedValueSelected","otherArgs","lastDownstreamValue","valueFromCurrentExample","exampleMatchingNewValue","_onExamplesSelect","authConfigs","authorizePassword","authorizeApplication","oauth2RedirectUrl","scopesArray","scopeSeparator","realm","usePkceWithAuthorizationCodeGrant","randomBytes","codeChallenge","shaJs","digest","createCodeChallenge","callback","authorizationUrl","preAuthorizeImplicit","useBasicAuthenticationWithAccessCodeGrant","authorizeAccessCodeWithBasicAuthentication","authorizeAccessCodeWithFormParams","errCb","oauth2Authorize","checked","dataset","newScopes","_Array$from","_keysInstanceProperty","appName","InitializedInput","IMPLICIT","PASSWORD","ACCESS_CODE","APPLICATION","description","htmlFor","tablet","desktop","onInputChange","initialValue","selectScopes","disabled","onScopeChange","Clear","clearResponse","clearRequest","Headers","Duration","LiveResponse","curlRequest","showMutatedRequest","mutatedRequestFor","notDocumented","isError","headersKeys","Curl","ResponseBody","returnObject","hasHeaders","content","OnlineValidatorBadge","URL","validatorUrl","getDefinitionUrl","sanitizedValidatorUrl","rel","ValidatorImage","alt","img","Image","onload","onerror","SWAGGER2_OPERATION_METHODS","OAS3_OPERATION_METHODS","Operations","taggedOperations","maxDisplayedTags","currentFilter","validMethods","isAbsoluteUrl","buildBaseUrl","addProtocol","buildUrl","baseUrl","tagExternalDocsUrl","children","Collapse","DeepLink","Link","tagDescription","tagExternalDocsDescription","rawTagExternalDocsUrl","showTag","enabled","title","isOpened","externalDocsUrl","iterable","getList","extensions","Responses","Parameters","Execute","Schemes","OperationServers","OperationExt","OperationSummary","showExtensions","onChangeKey","require","operationServers","pathServers","getSelectedServer","setSelectedServer","setServerVariableValue","getServerVariable","serverVariableValue","getEffectiveServerValue","currentScheme","tryItOutResponse","producesOptionsFor","resolvedSummary","OperationSummaryMethod","OperationSummaryPath","applicableDefinitions","definitionsForRequirements","clipboardData","setData","onCopyCapture","OperationExtRow","xKey","xVal","xNormalizedValue","SyntaxHighlighter","registerLanguage","http","bash","styles","agate","arta","monokai","nord","obsidian","tomorrowNight","availableStyles","getStyle","saveAs","fileName","deltaY","nativeEvent","contentHeight","scrollHeight","visibleHeight","offsetHeight","scrollTop","downloadable","canCopy","syntaxHighlight","activated","theme","codeBlock","onWheel","preventYScrollingBeyondElement","downloadText","CopyToClipboard","changeProducesValue","controlsAcceptHeader","setResponseContentType","defaultCode","codes","defaultStatusCode","ContentType","Response","acceptControllingResponse","isOrderedMap","suitable2xxResponse","_startsWithInstanceProperty","defaultResponse","suitableDefaultResponse","getAcceptControllingResponse","onChangeProducesWrapper","contentTypes","isDefault","onContentTypeChange","onResponseContentTypeChange","activeExamplesKey","activeExamplesMember","activeContentType","sampleResponse","specPathWithPossibleSchema","inferSchema","links","ModelExample","OperationLink","activeMediaType","examplesForMediaType","oas3SchemaForContentType","targetExamplesKey","getTargetExamplesKey","getExampleComponent","cx","_onContentTypeChange","setActiveExamplesMember","contextType","contextName","omitValue","toSeq","link","parsedContent","prevContent","reader","FileReader","readAsText","updateParsedContent","prevProps","bodyEl","downloadName","getTime","blob","createObjectURL","substr","_lastIndexOfInstanceProperty","disposition","responseFilename","patterns","regex","extractFileNameFromContentDispositionHeader","navigator","msSaveOrOpenBlob","formatXml","textNodesOnSameLine","indentor","toLower","controls","changeParamByIdentity","changeConsumesValue","tab","parametersVisible","callbackVisible","ParameterRow","TryItOutButton","Callbacks","RequestBody","isExecute","toggleTab","eachMap","rawParam","onChangeConsumes","onChangeConsumesWrapper","callbacks","setRequestContentType","initRequestBodyValidateError","requestBodyErrors","updateActiveExamplesKey","lastValue","usableValue","setRequestBodyValue","onChangeIncludeEmpty","setRequestBodyInclusion","ParameterExt","ParameterIncludeEmptyDefaultProps","isIncludedOptions","ParameterIncludeEmpty","shouldDispatchInit","isIncluded","isDisabled","onCheckboxChange","getParamKey","updateEmptyParamInclusion","paramWithMeta","parameterMediaType","generatedSampleValue","isSwagger2","onChangeWrapper","setDefaultValue","parameterWithMeta","showCommonExtensions","paramItems","paramEnum","paramDefaultValue","paramExample","JsonSchemaForm","ParamBody","bodyParam","consumesOptionsFor","consumesValue","isFormData","isFormDataSupported","commonExt","isDisplayParamEnum","_onExampleSelect","defaultToFirstExample","validateParams","validateBeforeExecute","validationErrors","missingBodyValue","missingRequiredKeys","clearRequestBodyValidateError","oas3RequiredRequestBodyContentType","getOAS3RequiredRequestBodyContentType","oas3RequestBodyValue","setRequestBodyValidateError","validateShallowRequired","missingKey","clearValidateParams","isPass","handleValidationResultPass","handleValidationResultFail","paramsResult","handleValidateParameters","requestBodyResult","handleValidateRequestBody","handleValidationResult","Property","schemaExample","propKey","propVal","propClass","Errors","editorActions","jumpToLine","allErrorsToDisplay","isVisible","sortedJSErrors","animated","ThrownErrorItem","SpecErrorItem","errorLine","toTitleCase","locationMessage","xclass","Container","fullscreen","full","containerClass","DEVICES","hide","keepContents","mobile","large","classesAr","device","deviceClass","classes","Select","multiple","options","option","selected","allowedValues","allowEmptyValue","NoMargin","renderNotAnimated","Overview","setTagShown","_setTagShown","showTagId","showOpIdPrefix","showOpId","_onClick","inputRef","otherProps","InfoBasePath","Contact","email","License","license","InfoUrl","Info","termsOfServiceUrl","contact","externalDocsDescription","VersionStamp","InfoContainer","Footer","FilterContainer","updateFilter","isLoading","isFailed","classNames","placeholder","onFilterChange","NOOP","isJson","isEditBox","sample","_onChange","inputValue","updateValues","TextArea","defaultProp","handleOnChange","toggleIsEditBox","extractKey","curl","curlified","isMultipartFormDataRequest","h","extractedKey","reqBody","curlifyToJoin","curlify","curlBlock","language","setScheme","SchemesContainer","ModelCollapse","onToggle","modelName","expanded","toggleCollapsed","collapsedContent","hideSelfOnExpand","activeTab","defaultModelRendering","defaultModelExpandDepth","ModelWrapper","expandDepth","Model","depth","ImmutablePureComponent","model","findDefinition","isRef","ObjectModel","ArrayModel","PrimitiveModel","getModelName","getRefSchema","ImPropTypes","isRequired","PropTypes","func","object","string","bool","number","Models","isExpanded","getSchemaBasePath","defaultModelsExpandDepth","specPathBase","showModels","onLoadModels","schemaValue","rawSchemaValue","rawSchema","onLoadModel","getCollapsedContent","handleToggle","EnumModel","requiredProperties","infoProperties","JumpToPathSection","not","titleEl","isDeprecated","normalizedValue","Primitive","enumArray","filterNot","VersionPragmaFilter","bypass","alsoShow","SvgAssets","xmlns","xmlnsXlink","viewBox","d","md","Remarkable","html","typographer","breaks","linkTarget","use","linkify","core","ruler","disable","useUnsafeMarkdown","sanitized","sanitizer","dangerouslySetInnerHTML","__html","ALLOW_DATA_ATTR","FORBID_ATTR","hasWarnedAboutDeprecation","DomPurify","sanitize","ADD_ATTR","FORBID_TAGS","addHook","setAttribute","BaseLayout","ServersContainer","isSpecEmpty","loadingMessage","lastErr","lastErrMsg","servers","hasServers","hasSchemes","hasSecurityDefinitions","JsonSchemaDefaultProps","keyName","dispatchInitialValue","getComponentSilently","JsonSchema_string","files","schemaIn","onEnumChange","DebounceInput","debounceTimeout","JsonSchema_array","itemVal","valueOrEmptyList","ArrayItemsComponent","shouldRenderValue","schemaItemsEnum","schemaItemsType","schemaItemsFormat","schemaItemsSchema","isArrayItemText","isArrayItemFile","JsonSchemaArrayItemFile","onItemChange","JsonSchemaArrayItemText","removeItem","addItem","onFileChange","JsonSchema_boolean","booleanValue","JsonSchema_object","invalid","util","logs","view","samples","authorizationPopup","authorizeBtn","authorizeOperationBtn","authError","oauth2","apiKeyAuth","basicAuth","liveResponse","onlineValidatorBadge","highlightCode","responseBody","parameterRow","overview","footer","modelExample","LayoutUtils","swaggerJs","JsonSchemaComponents","deepLinkingPlugin","oasVersion","swaggerVersion","OAS3ComponentWrapFactory","onlyOAS3","isOAS3Helper","OAS3NullSelector","hasIn","isSwagger2Helper","defName","flowKey","flowVal","translatedDef","tokenUrl","callbackElements","callbackName","pathItemName","pathItem","getDefaultRequestBodyValue","mediaType","mediaTypeValue","currentExamplesValue","setIsIncludedOptions","RequestBodyEditor","requestBodyDescription","requestBodyContent","schemaForMediaType","isObjectContent","bodyProperties","currentValue","currentErrors","isFile","targetOp","n","Array","padString","Servers","setServer","currentServer","variableName","newVariableValue","currentServerDefinition","currentServerVariableDefs","shouldShowVariableUI","onServerChange","onServerVariableValueChange","applyDefaultValue","isInvalid","onDomChange","HttpAuth","forceUpdate","serversToDisplay","displaying","operationLink","parser","block","enable","trimmed","selectedServerUrl","locationData","varValues","serverValue","validateRequestBodyIsRequired","validateRequestBodyValueExists","requiredKeys","contentTypeVal","requiredKey","currentVal","valueKeys","valueKeyVal","missingKeyValues","bodyValue","currentMissingKey","bodyValues","specWrapSelectors","authWrapSelectors","oas3","oas3Reducers","PresetApis","BasePreset","OAS3Plugin","env","NODE_ENV","Perf","GIT_DIRTY","GIT_COMMIT","PACKAGE_VERSION","HOSTNAME","BUILD_TIME","SwaggerUI","versions","swaggerUi","gitRevision","gitDirty","buildTimestamp","machine","defaults","dom_id","urls","custom","presets","ApisPreset","queryConfig","search","parseSearch","constructorConfig","storeConfigs","System","downloadSpec","fetchedConfig","localConfig","mergedConfig","setConfigs","configsActions","querySelector","configUrl","getConfigByUrl","loadRemoteConfig","apis","AllPlugins"],"mappings":"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"}